/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.41
 * Generated at: 2021-08-05 00:34:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.spk.common.constant.CommonConstant;
import com.spk.type.*;

public final class setup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/include/dialog/confirm-dialog.jsp", Long.valueOf(1628122240000L));
    _jspx_dependants.put("/include/dialog/alert-dialog.jsp", Long.valueOf(1628122240000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	response.setHeader("Cache-Control","no-cache"); //HTTP 1.1
	response.setHeader("Pragma","no-cache"); //HTTP 1.0
	response.setDateHeader ("Expires", 0); //prevents caching at the proxy server

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"ko\" lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE9\" />\r\n");
      out.write("\t<meta http-equiv=\"Expires\" content=\"-1\" />\r\n");
      out.write("\t<meta http-equiv=\"Pragma\" content=\"no-cache\" />\r\n");
      out.write("\t<meta http-equiv=\"Cache-Control\" content=\"No-Cache\" />\r\n");
      out.write("\t<title>서버 설정</title>\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/default.css\" media=\"all\" />\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/jquery-ui-1.10.3/css/custom-theme/jquery-ui-1.10.3.custom.css\" media=\"all\" />\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery-ui-1.10.3/js/jquery-1.9.1.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery-ui-1.10.3/js/jquery-ui-1.10.3.custom.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/jquery-ui-layout/layout-default-latest.css\" />\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery-ui-layout/jquery.layout-latest.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/scrollbar/jquery.mCustomScrollbar.css\" media=\"all\" />\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/scrollbar/jquery.mCustomScrollbar.concat.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/blockui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jshashtable-2.1/jshashtable.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jstree-v.pre1.0/jquery.jstree.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/layout.css\" media=\"all\" />\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/layout.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/checkparam.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/commparam.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/types.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/uiutil.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t<!--\r\n");
      out.write("\t\tvar g_arrTables = [\r\n");
      out.write("   \t\t\t\"server_config\",\r\n");
      out.write("\t\t\t\"admin\",\r\n");
      out.write("\t\t\t\"admin_accessable_address\",\r\n");
      out.write("\t\t\t\"admin_log\",\r\n");
      out.write("\t\t\t\"company\",\r\n");
      out.write("\t\t\t\"company_setup_config\",\r\n");
      out.write("\t\t\t\"licence\",\r\n");
      out.write("\t\t\t\"licence_renewal_history\",\r\n");
      out.write("\t\t\t\"payment\",\r\n");
      out.write("\t\t\t\"dept\",\r\n");
      out.write("\t\t\t\"member\",\r\n");
      out.write("\t\t\t\"user_log\",\r\n");
      out.write("\t\t\t\"pattern\",\r\n");
      out.write("\t\t\t\"network_service_control_program\",\r\n");
      out.write("\t\t\t\"ransomware_credential_exception_files\",\r\n");
      out.write("\t\t\t\"ransomware_behavior_profile_exception_files\",\r\n");
      out.write("\t\t\t\"api_callable_address\",\r\n");
      out.write("\t\t\t\"agent_update\",\r\n");
      out.write("\t\t\t\"company_default_pattern\",\r\n");
      out.write("\t\t\t\"drm_permission_policy\",\r\n");
      out.write("\t\t\t\"drm_permission_policy_member\",\r\n");
      out.write("\t\t\t\"company_decoding_approbator\",\r\n");
      out.write("\t\t\t\"dept_decoding_approbator\",\r\n");
      out.write("\t\t\t\"member_decoding_approbator\",\r\n");
      out.write("\t\t\t\"decoding_approval\",\r\n");
      out.write("\t\t\t\"decoding_approval_files\",\r\n");
      out.write("\t\t\t\"decoding_approval_history\",\r\n");
      out.write("\t\t\t\"decoding_approval_status\",\r\n");
      out.write("\t\t\t\"company_default_config\",\r\n");
      out.write("\t\t\t\"dept_default_config\",\r\n");
      out.write("\t\t\t\"member_default_config\",\r\n");
      out.write("\t\t\t\"company_exclusion_search_folders\",\r\n");
      out.write("\t\t\t\"dept_exclusion_search_folders\",\r\n");
      out.write("\t\t\t\"member_exclusion_search_folders\",\r\n");
      out.write("\t\t\t\"company_pattern_config\",\r\n");
      out.write("\t\t\t\"dept_pattern_config\",\r\n");
      out.write("\t\t\t\"member_pattern_config\",\r\n");
      out.write("\t\t\t\"company_print_control_config\",\r\n");
      out.write("\t\t\t\"dept_print_control_config\",\r\n");
      out.write("\t\t\t\"member_print_control_config\",\r\n");
      out.write("\t\t\t\"company_watermark_config\",\r\n");
      out.write("\t\t\t\"dept_watermark_config\",\r\n");
      out.write("\t\t\t\"member_watermark_config\",\r\n");
      out.write("\t\t\t\"company_media_control_config\",\r\n");
      out.write("\t\t\t\"dept_media_control_config\",\r\n");
      out.write("\t\t\t\"member_media_control_config\",\r\n");
      out.write("\t\t\t\"company_network_service_control_config\",\r\n");
      out.write("\t\t\t\"dept_network_service_control_config\",\r\n");
      out.write("\t\t\t\"member_network_service_control_config\",\r\n");
      out.write("\t\t\t\"company_network_service_control_program\",\r\n");
      out.write("\t\t\t\"dept_network_service_control_program\",\r\n");
      out.write("\t\t\t\"member_network_service_control_program\",\r\n");
      out.write("\t\t\t\"company_system_control_config\",\r\n");
      out.write("\t\t\t\"dept_system_control_config\",\r\n");
      out.write("\t\t\t\"member_system_control_config\",\r\n");
      out.write("\t\t\t\"company_block_specific_urls\",\r\n");
      out.write("\t\t\t\"dept_block_specific_urls\",\r\n");
      out.write("\t\t\t\"member_block_specific_urls\",\r\n");
      out.write("\t\t\t\"member_system_status\",\r\n");
      out.write("\t\t\t\"member_synchronization_config\",\r\n");
      out.write("\t\t\t\"db_protection\",\r\n");
      out.write("\t\t\t\"db_protection_program\",\r\n");
      out.write("\t\t\t\"db_protection_user\",\r\n");
      out.write("\t\t\t\"db_protection_log\",\r\n");
      out.write("\t\t\t\"user_notice\",\r\n");
      out.write("\t\t\t\"user_notice_member\",\r\n");
      out.write("\t\t\t\"install_state\",\r\n");
      out.write("\t\t\t\"force_search\",\r\n");
      out.write("\t\t\t\"force_search_detail\",\r\n");
      out.write("\t\t\t\"force_search_pattern\",\r\n");
      out.write("\t\t\t\"reserve_search\",\r\n");
      out.write("\t\t\t\"reserve_search_member\",\r\n");
      out.write("\t\t\t\"search_log\",\r\n");
      out.write("\t\t\t\"search_result_summary\",\r\n");
      out.write("\t\t\t\"search_result_summary_detail\",\r\n");
      out.write("\t\t\t\"detect_log\",\r\n");
      out.write("\t\t\t\"detect_log_detail\",\r\n");
      out.write("\t\t\t\"detect_files\",\r\n");
      out.write("\t\t\t\"detect_files_detail\",\r\n");
      out.write("\t\t\t\"detect_files_expiration_extend_history\",\r\n");
      out.write("\t\t\t\"detect_files_summary\",\r\n");
      out.write("\t\t\t\"detect_pattern_summary\",\r\n");
      out.write("\t\t\t\"detect_filetype_summary\",\r\n");
      out.write("\t\t\t\"realtimeobservation_log\",\r\n");
      out.write("\t\t\t\"print_log\",\r\n");
      out.write("\t\t\t\"print_summary\",\r\n");
      out.write("\t\t\t\"media_control_log\",\r\n");
      out.write("\t\t\t\"url_block_log\",\r\n");
      out.write("\t\t\t\"software_copyright\",\r\n");
      out.write("\t\t\t\"software_licence\",\r\n");
      out.write("\t\t\t\"software_allocation\",\r\n");
      out.write("\t\t\t\"software_installation\",\r\n");
      out.write("\t\t\t\"safe_export\",\r\n");
      out.write("\t\t\t\"safe_export_files\",\r\n");
      out.write("\t\t\t\"safe_export_summary_by_date\",\r\n");
      out.write("\t\t\t\"ransomware_detect_log\",\r\n");
      out.write("\t\t\t\"daily_ransomware_detect_summary\",\r\n");
      out.write("\t\t\t\"monthly_report\"\r\n");
      out.write("\t\t];\r\n");
      out.write("\r\n");
      out.write("\t\tvar g_arrViews = [\r\n");
      out.write("\t\t];\r\n");
      out.write("\r\n");
      out.write("\t\tvar g_arrInitTables = [\r\n");
      out.write("\t\t\t\"admin\",\r\n");
      out.write("\t\t\t\"pattern\",\r\n");
      out.write("\t\t\t\"network_service_control_program\",\r\n");
      out.write("\t\t\t\"ransomware_credential_exception_files\",\r\n");
      out.write("\t\t\t\"ransomware_behavior_profile_exception_files\"\r\n");
      out.write("\t\t];\r\n");
      out.write("\r\n");
      out.write("\t\tvar g_htOptionTypeList = new Hashtable();\r\n");
      out.write("\t\tvar g_htServerTypeList = new Hashtable();\r\n");
      out.write("\r\n");
      out.write("\t\tvar g_objSetupTree;\r\n");
      out.write("\t\tvar g_objResetDb;\r\n");
      out.write("\t\tvar g_objServerConfig;\r\n");
      out.write("\r\n");
      out.write("\t\tvar g_totalCount = 0;\r\n");
      out.write("\t\tvar g_progressCount = 0;\r\n");
      out.write("\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objSetupTree = $('#setup-tree');\r\n");
      out.write("\t\t\tg_objResetDb = $('#reset-db');\r\n");
      out.write("\t\t\tg_objServerConfig = $('#server-config');\r\n");
      out.write("\r\n");
      out.write("\t\t\t$( document ).tooltip();\r\n");
      out.write("\r\n");
      out.write("\t\t\t$('input:button, input:submit, button').button();\r\n");
      out.write("\t\t\t$('button[name=\"btnResetDb\"]').button({ icons: {primary: \"ui-icon-refresh\"} });\r\n");
      out.write("\t\t\t$('button[name=\"btnSaveConfig\"]').button({ icons: {primary: \"ui-icon-disk\"} });\r\n");
      out.write("\r\n");
      out.write("\t\t\t$('.inner-center .ui-layout-content').mCustomScrollbar({ theme:\"dark-2\", scrollButtons:{ enable:true }, scrollInertia:0, advanced:{ autoScrollOnFocus: false, updateOnContentResize: true, updateOnBrowserResize: true } });\r\n");
      out.write("\r\n");
      out.write("\t\t\touterLayout = $(\"body\").layout(outerMinLayoutOptions);\r\n");
      out.write("\t\t\tshowInnerLayout(\"innerDefault\");\r\n");
      out.write("\t\t\tinnerDefaultLayout.show(\"west\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_htOptionTypeList = loadTypeList(\"OPTION_TYPE\");\r\n");
      out.write("\t\t\tif (g_htOptionTypeList.isEmpty()) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"옵션 유형 조회\", \"옵션 유형 조회 중 오류가 발생하였습니다.\", \"자세한 사항은 시스템 관리자에게 문의해 주십시오.\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_htServerTypeList = loadTypeList(\"SERVER_TYPE\");\r\n");
      out.write("\t\t\tif (g_htServerTypeList.isEmpty()) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"서버 유형 조회\", \"서버 유형 조회 중 오류가 발생하였습니다.\", \"자세한 사항은 시스템 관리자에게 문의해 주십시오.\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tfillDropdownList(g_objServerConfig.find('select[name=\"servertype\"]'), g_htServerTypeList, null, \"선택\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tloadSetupTreeView();\r\n");
      out.write("\r\n");
      out.write("\t\t\t$('#tab-serverconfig').tabs({\r\n");
      out.write("\t\t\t\theightStyle: \"content\",\r\n");
      out.write("\t\t\t\tactive: 0\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objResetDb.find('#tablescount').text(g_arrTables.length);\r\n");
      out.write("\t\t\tg_objResetDb.find('#viewscount').text(g_arrViews.length);\r\n");
      out.write("\t\t\tg_objResetDb.find('#inittablescount').text(g_arrInitTables.length);\r\n");
      out.write("\r\n");
      out.write("\t\t\t$('button').click( function () {\r\n");
      out.write("\t\t\t\tif ($(this).attr('id') == 'btnResetDb') {\r\n");
      out.write("\t\t\t\t\tdisplayConfirmDialog(\"DB 초기화\", \"DB를 초기화 하시겠습니까?\", \"\", function() { resetDb(); });\r\n");
      out.write("\t\t\t\t} else if ($(this).attr('id') == 'btnSaveConfig') {\r\n");
      out.write("\t\t\t\t\tif (validateServerConfigData()) {\r\n");
      out.write("\t\t\t\t\t\tdisplayConfirmDialog(\"설정 정보 저장\", \"설정 정보를 저장하시겠습니까?\", \"\", function() { saveServerConfig(); });\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objResetDb.find('input[type=\"radio\"][name=\"insertinitdata\"]').change( function(event) {\r\n");
      out.write("\t\t\t\tif ($(this).filter(':checked').val() == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tg_objResetDb.find('#inittablescount').text(g_arrInitTables.length);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tg_objResetDb.find('#inittablescount').text(\"0\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objResetDb.find('#progressbar').progressbar({\r\n");
      out.write("\t\t\t\tvalue: false,\r\n");
      out.write("\t\t\t\tchange: function() {\r\n");
      out.write("\t\t\t\t\tg_objResetDb.find(\".progress-label\").text(g_objResetDb.find('#progressbar').progressbar( \"value\" ) + \"%\" );\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tcomplete: function() {\r\n");
      out.write("\t\t\t\t\tg_objResetDb.find(\".progress-label\").text( \"Complete!\" );\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objServerConfig.find('select[name=\"servertype\"]').change( function() {\r\n");
      out.write("\t\t\t\tif ($(this).val() == '");
      out.print(ServerType.SERVER_TYPE_ASP);
      out.write("') {\r\n");
      out.write("\t\t\t\t\t$('#tab-serverconfig').disableTab(2);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t$('#tab-serverconfig').enableTab(2);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\treloadDefaultLayout = function() {\r\n");
      out.write("\t\t\tvar layoutHeight = $('.treeview-pannel').parent().height();\r\n");
      out.write("\t\t\tvar paddingTop = parseInt($('.treeview-pannel').css(\"padding-top\"));\r\n");
      out.write("\t\t\tvar paddingBottom = parseInt($('.treeview-pannel').css(\"padding-bottom\"));\r\n");
      out.write("\t\t\tif ($('.treeview-pannel').length) {\r\n");
      out.write("\t\t\t\t$('.treeview-pannel').height(layoutHeight - paddingTop - paddingBottom);\r\n");
      out.write("\t\t\t\t$('.treeview-pannel').mCustomScrollbar('update');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$('.inner-center .ui-layout-content').mCustomScrollbar('update');\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tloadSetupTreeView = function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar xmlTreeData = \"\";\r\n");
      out.write("\t\t\txmlTreeData += \"<root>\";\r\n");
      out.write("\t\t\txmlTreeData += \"<item id='reset_db'>\";\r\n");
      out.write("\t\t\txmlTreeData += \"<content><name>DB 초기화</name></content>\";\r\n");
      out.write("\t\t\txmlTreeData += \"</item>\";\r\n");
      out.write("\t\t\txmlTreeData += \"<item id='server_config'>\";\r\n");
      out.write("\t\t\txmlTreeData += \"<content><name>서버 설정</name></content>\";\r\n");
      out.write("\t\t\txmlTreeData += \"</item>\";\r\n");
      out.write("\t\t\txmlTreeData += \"</root>\";\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objSetupTree.jstree({\r\n");
      out.write("\t\t\t\t\"xml_data\" : {\r\n");
      out.write("\t\t\t\t\t\"data\" : xmlTreeData\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\"themes\": {\r\n");
      out.write("\t\t\t\t\t\"theme\": \"classic\",\r\n");
      out.write("\t\t\t\t\t\"dots\": true,\r\n");
      out.write("\t\t\t\t\t\"icons\": false\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\"ui\": {\r\n");
      out.write("\t\t\t\t\t\"select_limit\": 1,\r\n");
      out.write("\t\t\t\t\t\"select_multiple_modifier\": \"none\"\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\"types\": {\r\n");
      out.write("\t\t\t\t\t\"AM\": {\r\n");
      out.write("\t\t\t\t\t\t\"hover_node\": false,\r\n");
      out.write("\t\t\t\t\t\t\"select_node\": false\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\"AF\": {\r\n");
      out.write("\t\t\t\t\t\t\"hover_node\": false,\r\n");
      out.write("\t\t\t\t\t\t\"select_node\": false\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\"Role\": {\r\n");
      out.write("\t\t\t\t\t// i dont know if possible to be done here? add class?\r\n");
      out.write("\t\t\t\t\t// this.css(\"color\", \"red\")\r\n");
      out.write("\t\t\t\t\t//{ font-weight:bold}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\"contextmenu\" : {\r\n");
      out.write("\t\t\t\t\t\"items\" : null\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\"plugins\" : [ \"themes\", \"xml_data\", \"ui\", \"Select\", \"types\", \"crrm\", \"contextmenu\" ]\r\n");
      out.write("\r\n");
      out.write("\t\t\t}).bind('loaded.jstree', function (event, data) {\r\n");
      out.write("\t\t\t\tdata.inst.open_all(-1); // -1 opens all nodes in the container\r\n");
      out.write("\t\t\t\tdata.inst.select_node('ul > li:first');\r\n");
      out.write("\t\t\t\t$(this).mCustomScrollbar({ theme:\"dark-2\", scrollButtons:{ enable:true }, scrollInertia:0, advanced:{ autoScrollOnFocus: false, updateOnContentResize: true, updateOnBrowserResize: true } });\r\n");
      out.write("\t\t\t}).bind('select_node.jstree', function (event, data) {\r\n");
      out.write("\t\t\t\t$('.inner-center .pane-header').text(data.rslt.obj.children('a').text().trim());\r\n");
      out.write("\t\t\t\tif (data.rslt.obj.attr('id') == \"reset_db\") {\r\n");
      out.write("\t\t\t\t\tg_objResetDb.show();\r\n");
      out.write("\t\t\t\t\tg_objServerConfig.hide();\r\n");
      out.write("\t\t\t\t\t$('button[name=\"btnResetDb\"]').show();\r\n");
      out.write("\t\t\t\t\t$('button[name=\"btnSaveConfig\"]').hide();\r\n");
      out.write("\t\t\t\t} else if (data.rslt.obj.attr('id') == \"server_config\") {\r\n");
      out.write("\t\t\t\t\tg_objResetDb.hide();\r\n");
      out.write("\t\t\t\t\tg_objServerConfig.show();\r\n");
      out.write("\t\t\t\t\t$('button[name=\"btnResetDb\"]').hide();\r\n");
      out.write("\t\t\t\t\t$('button[name=\"btnSaveConfig\"]').show();\r\n");
      out.write("\t\t\t\t\tloadServerConfig();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tresetDb = function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar objInsertInitData = g_objResetDb.find('input[type=\"radio\"][name=\"insertinitdata\"]');\r\n");
      out.write("\t\t\tvar objTotalTablesCount = g_objResetDb.find('#totaltablescount');\r\n");
      out.write("\t\t\tvar objTotalViewsCount = g_objResetDb.find('#totalviewscount');\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar objProgressBar = g_objResetDb.find('#progressbar');\r\n");
      out.write("\t\t\tvar objResultMessage = g_objResetDb.find('#resultmessage');\r\n");
      out.write("\r\n");
      out.write("\t\t\t$('button[name=\"btnResetDb\"]').button(\"option\", \"disabled\", true);\r\n");
      out.write("\t\t\tobjProgressBar.show();\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_totalCount = (g_arrTables.length + g_arrViews.length)*2;\r\n");
      out.write("\t\t\tif (objInsertInitData.filter(':checked').val() == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\tg_totalCount += g_arrInitTables.length;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tg_progressCount = 0;\r\n");
      out.write("\r\n");
      out.write("\t\t\tobjTotalTablesCount.text(g_arrTables.length.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\"));\r\n");
      out.write("\t\t\tobjTotalViewsCount.text(g_arrViews.length.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\"));\r\n");
      out.write("\r\n");
      out.write("\t\t\tobjProgressBar.progressbar({\r\n");
      out.write("\t\t\t\tvalue: 0\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tdropView(g_arrViews.length-1);\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tdropView = function(index) {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar objProgressMessage = g_objResetDb.find('#progressmessage');\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (index >= 0) {\r\n");
      out.write("\t\t\t\tvar viewName = g_arrViews[index];\r\n");
      out.write("\t\t\t\tvar postData = getRequestDropViewParam(viewName);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\t\t\tcache: false,\r\n");
      out.write("\t\t\t\t\tasync: false,\r\n");
      out.write("\t\t\t\t\tbeforeSend: function(xhr) {\r\n");
      out.write("\t\t\t\t\t\tobjProgressMessage.text(\"뷰 삭제중 ...(\" + (g_arrViews.length-index) + \"/\" + g_arrViews.length + \")\");\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(\"[오류] \" + viewName + \" 뷰 삭제에 실패하였습니다.- \" + $(data).find('errormsg').text(), true);\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tg_progressCount++;\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(viewName + \" 뷰를 삭제하였습니다.\", false);\r\n");
      out.write("\t\t\t\t\t\t\tsetTimeout(function() { dropView(index-1); }, 100);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(\"[오류] \" + viewName + \" 뷰 삭제에 실패하였습니다.- \" + jqXHR.statusText + \"(\" + jqXHR.status + \")\", true);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tsetTimeout(function() { dropTable(g_arrTables.length-1); }, 100);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tdropTable = function(index) {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar objProgressMessage = g_objResetDb.find('#progressmessage');\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (index >= 0) {\r\n");
      out.write("\t\t\t\tvar tableName = g_arrTables[index];\r\n");
      out.write("\t\t\t\tvar postData = getRequestDropTableParam(tableName);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\t\t\tcache: false,\r\n");
      out.write("\t\t\t\t\tasync: false,\r\n");
      out.write("\t\t\t\t\tbeforeSend: function(xhr) {\r\n");
      out.write("\t\t\t\t\t\tobjProgressMessage.text(\"테이블 삭제중 ...(\" + (g_arrTables.length-index) + \"/\" + g_arrTables.length + \")\");\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(\"[오류] \" + tableName + \" 테이블 삭제에 실패하였습니다.- \" + $(data).find('errormsg').text(), true);\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tg_progressCount++;\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(tableName + \" 테이블를 삭제하였습니다.\", false);\r\n");
      out.write("\t\t\t\t\t\t\tsetTimeout(function() { dropTable(index-1); }, 100);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(\"[오류] \" + tableName + \" 테이블 삭제에 실패하였습니다.- \" + jqXHR.statusText + \"(\" + jqXHR.status + \")\", true);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tsetTimeout(function() { createTable(0); }, 100);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tcreateTable = function(index) {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar objProgressMessage = g_objResetDb.find('#progressmessage');\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (index < g_arrTables.length) {\r\n");
      out.write("\t\t\t\tvar tableName = g_arrTables[index];\r\n");
      out.write("\t\t\t\tvar postData = getRequestCreateTableParam(tableName);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\t\t\tcache: false,\r\n");
      out.write("\t\t\t\t\tasync: false,\r\n");
      out.write("\t\t\t\t\tbeforeSend: function(xhr) {\r\n");
      out.write("\t\t\t\t\t\tobjProgressMessage.text(\"테이블 생성중 ...(\" + (index+1) + \"/\" + g_arrTables.length + \")\");\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(\"[오류] \" + tableName + \" 테이블 생성에 실패하였습니다.- \" + $(data).find('errormsg').text(), true);\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tg_progressCount++;\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(tableName + \" 테이블을 생성하였습니다.\", false);\r\n");
      out.write("\t\t\t\t\t\t\tsetTimeout(function() { createTable(index+1); }, 100);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(\"[오류] \" + tableName + \" 테이블 생성에 실패하였습니다.- \" + jqXHR.statusText + \"(\" + jqXHR.status + \")\", true);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tsetTimeout(function() { createView(0); }, 100);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tcreateView = function(index) {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar objProgressMessage = g_objResetDb.find('#progressmessage');\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (index < g_arrViews.length) {\r\n");
      out.write("\t\t\t\tvar viewName = g_arrViews[index];\r\n");
      out.write("\t\t\t\tvar postData = getRequestCreateViewParam(viewName);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\t\t\tcache: false,\r\n");
      out.write("\t\t\t\t\tasync: false,\r\n");
      out.write("\t\t\t\t\tbeforeSend: function(xhr) {\r\n");
      out.write("\t\t\t\t\t\tobjProgressMessage.text(\"뷰 생성중 ...(\" + (index+1) + \"/\" + g_arrViews.length + \")\");\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(\"[오류] \" + viewName + \" 뷰 생성에 실패하였습니다.- \" + $(data).find('errormsg').text(), true);\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tg_progressCount++;\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(viewName + \" 뷰을 생성하였습니다.\", false);\r\n");
      out.write("\t\t\t\t\t\t\tsetTimeout(function() { createView(index+1); }, 100);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(\"[오류] \" + viewName + \" 뷰 생성에 실패하였습니다.- \" + jqXHR.statusText + \"(\" + jqXHR.status + \")\", true);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (g_objResetDb.find('input[type=\"radio\"][name=\"insertinitdata\"]').filter(':checked').val() == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tsetTimeout(function() { initTable(0); }, 100);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tinitTable = function(index) {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar objProgressMessage = g_objResetDb.find('#progressmessage');\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (index < g_arrInitTables.length) {\r\n");
      out.write("\t\t\t\tvar tableName = g_arrInitTables[index];\r\n");
      out.write("\t\t\t\tvar postData = getRequestInitTableParam(tableName);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\t\t\tcache: false,\r\n");
      out.write("\t\t\t\t\tasync: false,\r\n");
      out.write("\t\t\t\t\tbeforeSend: function(xhr) {\r\n");
      out.write("\t\t\t\t\t\tobjProgressMessage.text(\"테이블 초기화중 ...(\" + (index+1) + \"/\" + g_arrInitTables.length + \")\");\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(\"[오류] \" + tableName + \" 테이블 초기화에 실패하였습니다.- \" + $(data).find('errormsg').text(), true);\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tg_progressCount++;\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(tableName + \" 테이블이 초기화되었습니다.\", false);\r\n");
      out.write("\t\t\t\t\t\t\tsetTimeout(function() { initTable(index+1); }, 100);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\t\t\tdisplayResultStatus(\"[오류] \" + tableName + \" 테이블 초기화에 실패하였습니다.- \" + jqXHR.statusText + \"(\" + jqXHR.status + \")\", true);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tdisplayResultStatus = function(resultMsg, isError) {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar objResultMessage = g_objResetDb.find('#resultmessage');\r\n");
      out.write("\t\t\tvar objProgressMessage = g_objResetDb.find('#progressmessage');\r\n");
      out.write("\t\t\tvar objProgressBar = g_objResetDb.find('#progressbar');\r\n");
      out.write("\t\t\tvar objProgressLabel = g_objResetDb.find(\".progress-label\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tobjResultMessage.append(resultMsg + \"\\n\");\r\n");
      out.write("\t\t\tobjResultMessage.scrollTop(objResultMessage[0].scrollHeight - objResultMessage.height());\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!isError) {\r\n");
      out.write("\t\t\t\tvar processrate = 0;\r\n");
      out.write("\t\t\t\tif (g_progressCount == g_totalCount) {\r\n");
      out.write("\t\t\t\t\tprocessrate = 100;\r\n");
      out.write("\t\t\t\t\t$('button[name=\"btnResetDb\"]').button(\"option\", \"disabled\", false);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tprocessrate = Math.floor((g_progressCount/g_totalCount)*100);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (processrate == 100) {\r\n");
      out.write("\t\t\t\t\tobjProgressMessage.text(\"DB 초기화 완료!!!\");\r\n");
      out.write("\t\t\t\t\tobjProgressBar.progressbar('value', processrate);\r\n");
      out.write("\t\t\t\t\tsetTimeout(function() { objProgressLabel.text(\"Complete!\"); }, 500);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjProgressBar.progressbar('value', processrate);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tloadServerConfig = function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar objServerType = g_objServerConfig.find('select[name=\"servertype\"]');\r\n");
      out.write("\t\t\tvar objVersion = g_objServerConfig.find('input[name=\"version\"]');\r\n");
      out.write("\t\t\tvar objOem = g_objServerConfig.find('input[name=\"oem\"]');\r\n");
      out.write("\t\t\tvar objForcedLoginFlag = g_objServerConfig.find('input[type=\"radio\"][name=\"forcedloginflag\"]');\r\n");
      out.write("\t\t\tvar objLogintTialLimitCount = g_objServerConfig.find('input[name=\"logintriallimitcount\"]');\r\n");
      out.write("\t\t\tvar objReloginDelaySecondAfterLock = g_objServerConfig.find('input[name=\"relogindelaysecondafterlock\"]');\r\n");
      out.write("\t\t\tvar objAdminAccessableAddressMaxCount = g_objServerConfig.find('input[name=\"adminaccessableaddressmaxcount\"]');\r\n");
      out.write("\t\t\tvar objRepresentativeCompanyId = g_objServerConfig.find('input[name=\"representativecompanyid\"]');\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestServerConfigInfoParam();\r\n");
      out.write("\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\t\tcache: false,\r\n");
      out.write("\t\t\t\tasync: false,\r\n");
      out.write("\t\t\t\tbeforeSend: function() {\r\n");
      out.write("\t\t\t\t\t$('.inner-center .ui-layout-content').block({ message: '<img src=\"/images/processing.gif\" align=\"bottom\" alt=\"\" width=\"16\" height=\"16\" /> 처리중...', css: { padding: '5px 0', width: '140px', background: 'transparent', border: '1px dotted #ddd', color: '#fff' }, fadeIn: 0, fadeOut: 0 });\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tcomplete: function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t\t$('.inner-center .ui-layout-content').unblock();\r\n");
      out.write("\t\t\t\t\t$('.inner-center .ui-layout-content').mCustomScrollbar('update');\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\t\tdisplayAlertDialog(\"서버 설정 정보 조회\", \"서버 설정 정보 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar serverType = $(data).find('servertype').text();\r\n");
      out.write("\t\t\t\t\tvar version = $(data).find('version').text();\r\n");
      out.write("\t\t\t\t\tvar oem = $(data).find('oem').text();\r\n");
      out.write("\t\t\t\t\tvar forcedLoginFlag = $(data).find('forcedloginflag').text();\r\n");
      out.write("\t\t\t\t\tvar loginTrialLimitCount = $(data).find('logintriallimitcount').text();\r\n");
      out.write("\t\t\t\t\tvar reloginDelaySecondAfterLock = $(data).find('relogindelaysecondafterlock').text();\r\n");
      out.write("\t\t\t\t\tvar adminAccessableAddressMaxCount = $(data).find('adminaccessableaddressmaxcount').text();\r\n");
      out.write("\t\t\t\t\tvar representativeCompanyId = $(data).find('representativecompanyid').text();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif ((serverType != null) && (serverType.length > 0)) {\r\n");
      out.write("\t\t\t\t\t\tobjServerType.val(serverType);\r\n");
      out.write("\t\t\t\t\t\tobjVersion.val(version);\r\n");
      out.write("\t\t\t\t\t\tobjOem.val(oem);\r\n");
      out.write("\t\t\t\t\t\tobjForcedLoginFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\t\t\tobjForcedLoginFlag.filter('[value=' + forcedLoginFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\t\t\tobjReloginDelaySecondAfterLock.val(reloginDelaySecondAfterLock);\r\n");
      out.write("\t\t\t\t\t\tobjLogintTialLimitCount.val(loginTrialLimitCount);\r\n");
      out.write("\t\t\t\t\t\tobjAdminAccessableAddressMaxCount.val(adminAccessableAddressMaxCount);\r\n");
      out.write("\t\t\t\t\t\tobjRepresentativeCompanyId.val(representativeCompanyId);\r\n");
      out.write("\t\t\t\t\t\tif (serverType == '");
      out.print(ServerType.SERVER_TYPE_ASP);
      out.write("') {\r\n");
      out.write("\t\t\t\t\t\t\t$('#tab-serverconfig').disableTab(2);\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t$('#tab-serverconfig').enableTab(2);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\t\tdisplayAlertDialog(\"서버 설정 정보 조회\", \"서버 설정 정보 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tsaveServerConfig = function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar objServerType = g_objServerConfig.find('select[name=\"servertype\"]');\r\n");
      out.write("\t\t\tvar objVersion = g_objServerConfig.find('input[name=\"version\"]');\r\n");
      out.write("\t\t\tvar objOem = g_objServerConfig.find('input[name=\"oem\"]');\r\n");
      out.write("\t\t\tvar objForcedLoginFlag = g_objServerConfig.find('input[type=\"radio\"][name=\"forcedloginflag\"]');\r\n");
      out.write("\t\t\tvar objLogintTialLimitCount = g_objServerConfig.find('input[name=\"logintriallimitcount\"]');\r\n");
      out.write("\t\t\tvar objReloginDelaySecondAfterLock = g_objServerConfig.find('input[name=\"relogindelaysecondafterlock\"]');\r\n");
      out.write("\t\t\tvar objAdminAccessableAddressMaxCount = g_objServerConfig.find('input[name=\"adminaccessableaddressmaxcount\"]');\r\n");
      out.write("\t\t\tvar objRepresentativeCompanyId = g_objServerConfig.find('input[name=\"representativecompanyid\"]');\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveServerConfigParam(\r\n");
      out.write("\t\t\t\t\tobjServerType.val(),\r\n");
      out.write("\t\t\t\t\tobjVersion.val(),\r\n");
      out.write("\t\t\t\t\tobjOem.val(),\r\n");
      out.write("\t\t\t\t\tobjForcedLoginFlag.filter(':checked').val(),\r\n");
      out.write("\t\t\t\t\tobjLogintTialLimitCount.val(),\r\n");
      out.write("\t\t\t\t\tobjReloginDelaySecondAfterLock.val(),\r\n");
      out.write("\t\t\t\t\tobjAdminAccessableAddressMaxCount.val(),\r\n");
      out.write("\t\t\t\t\tobjRepresentativeCompanyId.val()\r\n");
      out.write("\t\t\t);\r\n");
      out.write("\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\t\tcache: false,\r\n");
      out.write("\t\t\t\tasync: false,\r\n");
      out.write("\t\t\t\tbeforeSend: function() {\r\n");
      out.write("\t\t\t\t\t$('.inner-center .ui-layout-content').block({ message: '<img src=\"/images/processing.gif\" align=\"bottom\" alt=\"\" width=\"16\" height=\"16\" /> 처리중...', css: { padding: '5px 0', width: '140px', background: 'transparent', border: '1px dotted #ddd', color: '#fff' }, fadeIn: 0, fadeOut: 0 });\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tcomplete: function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t\t$('.inner-center .ui-layout-content').unblock();\r\n");
      out.write("\t\t\t\t\t$('.inner-center .ui-layout-content').mCustomScrollbar('update');\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\t\tdisplayAlertDialog(\"서버 설정 정보 저장\", \"서버 설정 정보 저장 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tdisplayInfoDialog(\"서버 설정 정보 저장\", \"정상 처리되었습니다.\", \"정상적으로 서버 설정 정보가 저장되었습니다.\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\t\tdisplayAlertDialog(\"서버 설정 정보 저장\", \"서버 설정 정보 저장 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tvalidateServerConfigData = function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar objServerType = g_objServerConfig.find('select[name=\"servertype\"]');\r\n");
      out.write("\t\t\tvar objVersion = g_objServerConfig.find('input[name=\"version\"]');\r\n");
      out.write("\t\t\tvar objForcedLoginFlag = g_objServerConfig.find('input[type=\"radio\"][name=\"forcedloginflag\"]');\r\n");
      out.write("\t\t\tvar objLogintTialLimitCount = g_objServerConfig.find('input[name=\"logintriallimitcount\"]');\r\n");
      out.write("\t\t\tvar objReloginDelaySecondAfterLock = g_objServerConfig.find('input[name=\"relogindelaysecondafterlock\"]');\r\n");
      out.write("\t\t\tvar objAdminAccessableAddressMaxCount = g_objServerConfig.find('input[name=\"adminaccessableaddressmaxcount\"]');\r\n");
      out.write("\t\t\tvar objRepresentativeCompanyId = g_objServerConfig.find('input[name=\"representativecompanyid\"]');\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ((objServerType.val() == null) || (objServerType.val().length == 0)) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"서버 유형을 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ((objVersion.val() == null) || (objVersion.val().length == 0)) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"서버 버전을 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (!isValidParam(objVersion, PARAM_TYPE_SERVER_VERSION, \"서버 버전\", PARAM_SERVER_VERSION_MIN_LEN, PARAM_SERVER_VERSION_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ((objForcedLoginFlag.filter(':checked').val() == null) || (objForcedLoginFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"관리자 강제 로그인 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ((objLogintTialLimitCount.val() == null) || (objLogintTialLimitCount.val().length == 0)) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"관리자 로그인시 계정 잠김까지 비밀번호 인증 실패 수를 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (!isValidParam(objLogintTialLimitCount, PARAM_TYPE_NUMBER, \"로그인 시도 횟수\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (parseInt(objLogintTialLimitCount.val()) <= 0) {\r\n");
      out.write("\t\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"관리자 로그인시 계정 잠김까지 비밀번호 인증 실패 수를 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ((objReloginDelaySecondAfterLock.val() == null) || (objReloginDelaySecondAfterLock.val().length == 0)) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"관리자 계정 잠김 후 재시도까지의 대기 시간을 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (!isValidParam(objReloginDelaySecondAfterLock, PARAM_TYPE_NUMBER, \"재 로그인 대기 시간\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (parseInt(objReloginDelaySecondAfterLock.val()) <= 0) {\r\n");
      out.write("\t\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"관리자 계정 잠김 후 재시도까지의 대기 시간을 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ((objAdminAccessableAddressMaxCount.val() == null) || (objAdminAccessableAddressMaxCount.val().length == 0)) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"관리자가 원격으로 서버에 접속 할 수 있는 접근 가능 주소 수를 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (!isValidParam(objAdminAccessableAddressMaxCount, PARAM_TYPE_NUMBER, \"관리자 접속 가능 주소 수\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (parseInt(objAdminAccessableAddressMaxCount.val()) <= 0) {\r\n");
      out.write("\t\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"관리자가 원격으로 서버에 접속 할 수 있는 접근 가능 주소 수를 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (objServerType.val() == '");
      out.print(ServerType.SERVER_TYPE_ENTERPRISE);
      out.write("') {\r\n");
      out.write("\t\t\t\tif ((objRepresentativeCompanyId.val() == null) || (objRepresentativeCompanyId.val().length == 0)) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"대표 사업장 ID를 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (!isValidParam(objRepresentativeCompanyId, PARAM_TYPE_COMPANYID, \"대표 사업장 ID\", PARAM_COMPANYID_MIN_LEN, PARAM_COMPANYID_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t};\r\n");
      out.write("\t//-->\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<style>\r\n");
      out.write("\t\t.styles-tab > .ui-widget-header { \r\n");
      out.write("\t\t\tborder: none;\r\n");
      out.write("\t\t\tbackground: #aaa url(/js/jquery-ui-1.10.3/css/custom-theme/images/ui-bg_highlight-soft_75_e0e0e0_1x100.png) 50% 50% repeat-x;\r\n");
      out.write("\t\t\tborder-top-left-radius: 0px;\r\n");
      out.write("\t\t\tborder-top-right-radius: 0px;\r\n");
      out.write("\t\t\tborder-bottom-left-radius: 0px;\r\n");
      out.write("\t\t\tborder-bottom-right-radius: 0px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"ui-layout-north\">\r\n");
      out.write("\t\t<div class=\"ui-widget header-contents\" style=\"height: 56px; line-height: 56px; background-color: #1e1f23;\">\r\n");
      out.write("\t\t\t<div style=\"float: left;\">\r\n");
      out.write("\t\t\t\t<span style=\"margin-left: 20px; font-size: 1.4em; font-weight: normal; color:#fff;\">");
      out.print(CommonConstant.SERVER_TITLE);
      out.write(" Setup</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"ui-layout-center\">\r\n");
      out.write("\t\t<div id=\"innerDefault\" class=\"inner-layout-container\">\r\n");
      out.write("\t\t\t<div class=\"inner-west\">\r\n");
      out.write("\t\t\t\t<div class=\"pane-header\">설정 목록</div>\r\n");
      out.write("\t\t\t\t<div class=\"ui-layout-content zero-padding\">\r\n");
      out.write("\t\t\t\t\t<div id=\"setup-tree\" class=\"treeview-pannel\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"inner-center\">\r\n");
      out.write("\t\t\t\t<div class=\"pane-header\"></div>\r\n");
      out.write("\t\t\t\t<div class=\"ui-layout-content\">\r\n");
      out.write("\t\t\t\t\t<div id=\"reset-db\" class=\"info-form\" style=\"padding: 10px;\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"info\">\r\n");
      out.write("\t\t\t\t\t\t\t<ul class=\"infolist\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<li>서비스에 필요한 데이타베이스의 테이블/뷰를 삭제 후 재 생성합니다.</li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li>기존 서비스 중인 데이타가 모두 삭제되므로 서비스 중인 경우에는 신중하게 선택하십시오.</li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li>DB 초기화를 할 경우 아래의 \"DB 초기화\" 버튼을 선택하십시오.</li>\r\n");
      out.write("\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"category-sub-title\">초기화 옵션</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"row-tablescount\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>테이블/뷰 생성 후 초기 데이타를 입력하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"insertinitdata\" value=\"1\" checked=\"checked\" />예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"insertinitdata\" value=\"0\" />아니오</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 10px;\">초기화 처리 상태</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"row-tablescount\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"field-title\">테이블 수</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"field-value\"><span id=\"tablescount\"></span></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"row-viewscount\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"field-title\">뷰 수</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"field-value\"><span id=\"viewscount\"></span></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"row-inittablescount\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"field-title\">초기화 테이블 수</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"field-value\"><span id=\"inittablescount\"></span></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"row-progressmessage\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"field-title\">진행 상황</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"field-value\"><span id=\"progressmessage\"></span></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"row-progressbar\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"field-title\">진행률</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"field-value\"><div id=\"progressbar\" style=\"height: 24px; display: none;\"><div class=\"progress-label\"></div></div></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"row-resultmessage\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"field-title\">결과 메시지</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"field-contents\"><textarea id=\"resultmessage\" name=\"resultmessage\" class=\"text ui-widget-content\" style=\"height: 200px;\"></textarea></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"server-config\" class=\"info-form\" style=\"padding: 10px;\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"tab-serverconfig\" class=\"styles-tab\" style=\"border: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"#tab-versionsetup\">버전 설정</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"#tab-adminsetup\">관리자 설정</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"#tab-certificatesetup\">인증 설정</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"tab-versionsetup\" style=\"padding: 10px 0;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-title\">버전 정보</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div id=\"row-servertype\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">서버 유형</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\"><select id=\"servertype\" name=\"servertype\" class=\"ui-widget-content\" ></select></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div id=\"row-version\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">서버 버전</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\"><input type=\"text\" id=\"version\" name=\"version\" value=\"1.0.0.0\" class=\"text ui-widget-content\" /></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 10px;\">OEM 설정</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div id=\"row-oem\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">OEM ID</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\"><input type=\"text\" id=\"oem\" name=\"oem\" class=\"text ui-widget-content\" /></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"tab-adminsetup\" style=\"padding: 10px 0;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-title\">강제 로그인 설정</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div>다른 관리자가 로그인 상태인 경우, 다른 관리자의 접속을 강제로 종료하고 접속하도록 설정하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"forcedloginflag\" value=\"1\" checked=\"checked\" />예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"forcedloginflag\" value=\"0\" />아니오</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 10px;\">로그인 시도 횟수 설정</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div>관리자 로그인시 계정 잠김까지 비밀번호 인증 실패 수를 입력해주세요. &nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t최대 <input type=\"text\" id=\"logintriallimitcount\" name=\"logintriallimitcount\" value=\"5\" class=\"text ui-widget-content\" style=\"text-align: right; width: 100px;\" /> 회\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 10px;\">재 로그인 대기 시간 설정</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div>관리자 계정 잠김 후 재시도까지의 대기 시간을 입력해주세요. &nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"relogindelaysecondafterlock\" name=\"relogindelaysecondafterlock\" value=\"600\" class=\"text ui-widget-content\" style=\"text-align: right; width: 100px;\" /> 초\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 10px;\">관리자 접속 가능 주소 수 설정</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div>관리자가 원격으로 서버에 접속 할 수 있는 접근 가능 주소 수를 입력해주세요. &nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t최대 <input type=\"text\" id=\"adminaccessableaddressmaxcount\" name=\"adminaccessableaddressmaxcount\" value=\"2\" class=\"text ui-widget-content\" style=\"text-align: right; width: 100px;\" /> 개\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"tab-certificatesetup\" style=\"padding: 10px 0;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-title\">인증 라이센스</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div id=\"row-representativecompanyid\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">대표 사업장 ID</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\"><input type=\"text\" id=\"representativecompanyid\" name=\"representativecompanyid\" class=\"text ui-widget-content\" /></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"pane-footer\">\r\n");
      out.write("\t\t\t\t\t<div class=\"button-line\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" id=\"btnResetDb\" name=\"btnResetDb\" class=\"normal-button\">DB 초기화</button>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" id=\"btnSaveConfig\" name=\"btnSaveConfig\" class=\"normal-button\">설정 저장</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("<!-- \t<div class=\"ui-layout-south\"> -->\r\n");
      out.write("\r\n");
      out.write("<!-- \t</div> -->\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar g_objAlertDialog;\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tg_objAlertDialog = $('#dialog-alert');\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.dialog({\r\n");
      out.write("\t\t\tautoOpen: false,\r\n");
      out.write("\t\t\tresizable: false,\r\n");
      out.write("\t\t\twidth: 500,\r\n");
      out.write("\t\t\theight: 'auto',\r\n");
      out.write("\t\t\tcloseOnEscape: false,\r\n");
      out.write("\t\t\tmodal: true,\r\n");
      out.write("\t\t\topen: function() {\r\n");
      out.write("\t\t\t\t$(this).parent().find('.ui-dialog-buttonpane button:contains(\"확인\")').button({\r\n");
      out.write("\t\t\t\t\ticons: { primary: 'ui-icon-circle-check' }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".ui-dialog-titlebar-close\").hide();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tbuttons: {\r\n");
      out.write("\t\t\t\t\"확인\": function() {\r\n");
      out.write("\t\t\t\t\t$(this).dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tdisplayInfoDialog = function(dialogTitle, infoTitle, infoMessage) {\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_objAlertDialog.find('#alert-div').hasClass('ui-state-error')) {\r\n");
      out.write("\t\t\tg_objAlertDialog.find('#alert-div').removeClass('ui-state-error').addClass('ui-state-highlight');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_objAlertDialog.find('#alert-icon').hasClass('ui-icon-alert')) {\r\n");
      out.write("\t\t\tg_objAlertDialog.find('#alert-icon').removeClass('ui-icon-alert').addClass('ui-icon-info');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.find('#alert-title').html(infoTitle);\r\n");
      out.write("\t\tg_objAlertDialog.find('#alert-message').html(infoMessage);\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.dialog('option', 'title', dialogTitle);\r\n");
      out.write("\t\tg_objAlertDialog.dialog('open');\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tdisplayAlertDialog = function(dialogTitle, alertTitle, alertMessage) {\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_objAlertDialog.find('#alert-div').hasClass('ui-state-highlight')) {\r\n");
      out.write("\t\t\tg_objAlertDialog.find('#alert-div').removeClass('ui-state-highlight').addClass('ui-state-error');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_objAlertDialog.find('#alert-icon').hasClass('ui-icon-info')) {\r\n");
      out.write("\t\t\tg_objAlertDialog.find('#alert-icon').removeClass('ui-icon-info').addClass('ui-icon-alert');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.find('#alert-title').html(alertTitle);\r\n");
      out.write("\t\tg_objAlertDialog.find('#alert-message').html(alertMessage);\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.dialog('option', 'title', dialogTitle);\r\n");
      out.write("\t\tg_objAlertDialog.dialog('open');\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"dialog-alert\" title=\"\" class=\"dialog-form\">\r\n");
      out.write("\t<div id=\"alert-div\" class=\"ui-state-highlight\" style=\"padding: 10px 10px 5px 10px;\">\r\n");
      out.write("\t\t<div class=\"icon-message-holder\">\r\n");
      out.write("\t\t\t<div class=\"icon-holder\"><span id=\"alert-icon\" class=\"ui-icon ui-icon-info\"></span></div>\r\n");
      out.write("\t\t\t<div class=\"message-holder\">\r\n");
      out.write("\t\t\t\t<div class=\"icon-message\"><strong><span id=\"alert-title\"></span></strong></div>\r\n");
      out.write("\t\t\t\t<div class=\"detail-message\"><span id=\"alert-message\"></span></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar g_objConfirmDialog;\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tg_objConfirmDialog = $('#dialog-confirm');\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tdisplayConfirmDialog = function(dialogTitle, confirmTitle, confirmMessage, funcToExec) {\r\n");
      out.write("\t\tg_objConfirmDialog.dialog({\r\n");
      out.write("\t\t\tautoOpen: false,\r\n");
      out.write("\t\t\tresizable: false,\r\n");
      out.write("\t\t\twidth: 500,\r\n");
      out.write("\t\t\theight: 'auto',\r\n");
      out.write("\t\t\tcloseOnEscape: false,\r\n");
      out.write("\t\t\tmodal: true,\r\n");
      out.write("\t\t\topen: function() {\r\n");
      out.write("\t\t\t\t$(this).parent().find('.ui-dialog-buttonpane button:contains(\"확인\")').button({\r\n");
      out.write("\t\t\t\t\ticons: { primary: 'ui-icon-circle-check' }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).parent().find('.ui-dialog-buttonpane button:contains(\"취소\")').button({\r\n");
      out.write("\t\t\t\t\ticons: { primary: 'ui-icon-circle-close' }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".ui-dialog-titlebar-close\").hide();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tbuttons: {\r\n");
      out.write("\t\t\t\t\"확인\": function() {\r\n");
      out.write("\t\t\t\t\tfuncToExec();\r\n");
      out.write("\t\t\t\t\t$(this).dialog('close');\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\"취소\": function() {\r\n");
      out.write("\t\t\t\t\t$(this).dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tg_objConfirmDialog.find('#confirm-title').html(confirmTitle);\r\n");
      out.write("\t\tg_objConfirmDialog.find('#confirm-message').html(confirmMessage);\r\n");
      out.write("\t\tg_objConfirmDialog.dialog('option', 'title', dialogTitle);\r\n");
      out.write("\r\n");
      out.write("\t\tg_objConfirmDialog.dialog('open');\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"dialog-confirm\" title=\"\" class=\"dialog-form\">\r\n");
      out.write("\t<div style=\"padding: 10px 10px 5px 10px;\">\r\n");
      out.write("\t\t<div class=\"icon-message-holder\">\r\n");
      out.write("\t\t\t<div class=\"icon-holder\"><span id=\"alert-icon\" class=\"ui-icon ui-icon-circle-check\"></span></div>\r\n");
      out.write("\t\t\t<div class=\"message-holder\">\r\n");
      out.write("\t\t\t\t<div class=\"icon-message\"><strong><span id=\"confirm-title\"></span></strong></div>\r\n");
      out.write("\t\t\t\t<div class=\"detail-message\"><span id=\"confirm-message\"></span></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
