<?xml version="1.0" encoding="UTF-8"?>
<job-scheduling-data xmlns="http://www.quartz-scheduler.org/xml/JobSchedulingData"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.quartz-scheduler.org/xml/JobSchedulingData http://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd"
	version="1.8">
	
	<pre-processing-commands>
		<delete-jobs-in-group>*</delete-jobs-in-group>  <!-- clear all jobs in scheduler -->
		<delete-triggers-in-group>*</delete-triggers-in-group> <!-- clear all triggers in scheduler -->
	</pre-processing-commands>
	
	<processing-directives>
		<!-- if there are any jobs/trigger in scheduler of same name (as in this file), overwrite them -->
		<overwrite-existing-data>true</overwrite-existing-data>
		<!-- if there are any jobs/trigger in scheduler of same name (as in this file), and over-write is false, ignore them rather then generating an error -->
		<ignore-duplicates>false</ignore-duplicates> 
	</processing-directives>
	
	<schedule>
		<job>
			<name>ReportGeneratorJob</name>
			<group>ReportGeneratorJobGroup</group>
			<description>The job of ReportGenerator</description>
			<job-class>com.spk.scheduler.ReportGenerator</job-class>
			<job-data-map>
				<entry>
					<key>TargetServerUrl</key>
					<value>https://localhost:20000/CommandService</value>
				</entry>
			</job-data-map>
		</job>
<!--
		<trigger>
			<simple>
				<name>TestSimpleTrigger1AtOneMinutesInterval</name>
				<job-name>ReportGeneratorJob</job-name>
				<job-group>ReportGeneratorJobGroup</job-group>
				<repeat-count>-1</repeat-count>
				<repeat-interval>20000</repeat-interval>
			</simple>
		</trigger>


		<trigger>
			<cron>
				<name>ReportGeneratorTrigger</name>
				<group>ReportGeneratorTriggerGroup</group>
				<job-name>ReportGeneratorJob</job-name>
				<job-group>ReportGeneratorJobGroup</job-group>
				<misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
				<cron-expression>30 * * * * ?</cron-expression>
			</cron>
		</trigger>
-->
		<trigger>
			<cron>
				<name>ReportGeneratorTrigger</name>
				<group>ReportGeneratorTriggerGroup</group>
				<job-name>ReportGeneratorJob</job-name>
				<job-group>ReportGeneratorJobGroup</job-group>
				<misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
				<cron-expression>0 0 1 1 * ?</cron-expression>
			</cron>
		</trigger>
	</schedule>	
</job-scheduling-data>
