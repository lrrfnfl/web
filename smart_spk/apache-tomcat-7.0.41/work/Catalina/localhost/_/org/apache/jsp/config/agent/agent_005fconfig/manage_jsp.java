/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.41
 * Generated at: 2021-10-05 02:26:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.config.agent.agent_005fconfig;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.HashMap;
import com.spk.common.constant.CommonConstant;
import com.spk.type.*;
import com.spk.util.Util;
import com.spk.util.DbUtil;
import java.util.HashMap;
import com.spk.common.constant.CommonConstant;
import com.spk.type.*;
import com.spk.util.Util;
import com.spk.util.DbUtil;
import com.spk.common.constant.CommonConstant;
import com.spk.type.*;
import com.spk.common.constant.CommonConstant;
import com.spk.type.*;

public final class manage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(8);
    _jspx_dependants.put("/config/agent/agent_config/reservedwordinfo-dialog.jsp", Long.valueOf(1623113787000L));
    _jspx_dependants.put("/config/agent/agent_config/uploadwatermarkbackgroundimage-dialog.jsp", Long.valueOf(1623113787000L));
    _jspx_dependants.put("/config/agent/agent_config/saveconfigconfirm-dialog.jsp", Long.valueOf(1623113787000L));
    _jspx_dependants.put("/include/dialog/confirm-dialog.jsp", Long.valueOf(1623113786000L));
    _jspx_dependants.put("/config/agent/agent_config/managewatermarkbackgroundimage-dialog.jsp", Long.valueOf(1623113787000L));
    _jspx_dependants.put("/config/agent/agent_config/managebody.jsp", Long.valueOf(1623113787000L));
    _jspx_dependants.put("/top.jsp", Long.valueOf(1625118829000L));
    _jspx_dependants.put("/include/dialog/alert-dialog.jsp", Long.valueOf(1623113786000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	response.setHeader("Cache-Control","no-cache"); //HTTP 1.1
	response.setHeader("Pragma","no-cache"); //HTTP 1.0
	response.setDateHeader ("Expires", 0); //prevents caching at the proxy server

	String webTitle = CommonConstant.SERVER_TITLE;
	/*************************************************************************
	 * 서버 설정 정보 조회
	 ************************************************************************/
	 HashMap<String, String> mapServerConfig = DbUtil.getServerConfig(session);
	if (!mapServerConfig.isEmpty()) {
		if ("MEDISAFER".equals(mapServerConfig.get("oem").toUpperCase())) {
			webTitle = CommonConstant.MEDISAFER_SERVER_TITLE;
		} else if ("BIZSAFER".equals(mapServerConfig.get("oem").toUpperCase())) {
			webTitle = CommonConstant.BIZSAFER_SERVER_TITLE;
		}
	}

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"ko\" lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE9\" />\r\n");
      out.write("\t<meta http-equiv=\"Expires\" content=\"-1\" />\r\n");
      out.write("\t<meta http-equiv=\"Pragma\" content=\"no-cache\" />\r\n");
      out.write("\t<meta http-equiv=\"Cache-Control\" content=\"No-Cache\" />\r\n");
      out.write("\t<title>");
      out.print(webTitle);
      out.write("</title>\r\n");
      out.write("\r\n");
 if ("darkness".equals((String) session.getAttribute("THEMENAME"))) { 
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/darkness.css\" media=\"all\" />\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/default.css\" media=\"all\" />\r\n");
 } 
      out.write("\r\n");
      out.write("\r\n");
 if ("darkness".equals((String) session.getAttribute("THEMENAME"))) { 
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/jquery-ui-1.10.3/themes/darkness/jquery.ui.all.css\" media=\"all\" />\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/jquery-ui-1.10.3/css/custom-theme/jquery-ui-1.10.3.custom.css\" media=\"all\" />\r\n");
 } 
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery-ui-1.10.3/js/jquery-1.9.1.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery-ui-1.10.3/js/jquery-ui-1.10.3.custom.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery-dialogextend-master/build/jquery.dialogextend.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/jquery-ui-layout/layout-default-latest.css\" />\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery-ui-layout/jquery.layout-latest.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/menu/css/dcmegamenu.css\" media=\"all\" />\r\n");
 if ("darkness".equals((String) session.getAttribute("THEMENAME"))) { 
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/menu/css/skins/black.css\" media=\"all\" />\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/menu/css/skins/black.css\" media=\"all\" />\r\n");
 } 
      out.write("\r\n");
      out.write("\t<script type='text/javascript' src=\"/js/menu/js/jquery.hoverIntent.minified.js\"></script>\r\n");
      out.write("\t<script type='text/javascript' src=\"/js/menu/js/jquery.dcmegamenu.1.3.3.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/scrollbar/jquery.mCustomScrollbar.css\" media=\"all\" />\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/scrollbar/jquery.mCustomScrollbar.concat.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/blockui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jshashtable-2.1/jshashtable.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jstree-v.pre1.0/jquery.jstree.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/js/jquery-file-upload-master/css/jquery.fileupload.css\" media=\"all\" />\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery-file-upload-master/js/vendor/jquery.ui.widget.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery-file-upload-master/js/jquery.iframe-transport.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery-file-upload-master/js/jquery.fileupload.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery.scrolltable.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/nailthumb/jquery.nailthumb.1.1.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/checkparam.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/commparam.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/types.js\"></script>\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/layout.css\" media=\"all\" />\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/layout.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/uiutil.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<style type=\"text/css\">\r\n");
      out.write("\t<!--\r\n");
      out.write("\t\tli.ui-state-default.ui-state-hidden[role=tab]:not(.ui-tabs-active) {\r\n");
      out.write("\t\t\tdisplay: none;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t//-->\r\n");
      out.write("\t</style>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t<!--\r\n");
      out.write("\t\tvar TAB_DEFAULT_CONFIG = 0;\r\n");
      out.write("\t\tvar TAB_PATTERN_CONFIG = 1;\r\n");
      out.write("\t\tvar TAB_PRINT_CONTROL_CONFIG = 2;\r\n");
      out.write("\t\tvar TAB_WATERMARK_CONFIG = 3;\r\n");
      out.write("\t\tvar TAB_MEDIA_CONTROL_CONFIG = 4;\r\n");
      out.write("\t\tvar TAB_NETWORKSERVICE_CONTROL_CONFIG = 5;\r\n");
      out.write("\t\tvar TAB_SYSTEM_CONTROL_CONFIG = 6;\r\n");
      out.write("\t\tvar TAB_WORK_CONTROL_CONFIG = 7;\r\n");
      out.write("\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\t$('#tab-clientconfig').tabs({\r\n");
      out.write("\t\t\t\tactive: TAB_DEFAULT_CONFIG,\r\n");
      out.write("\t\t\t\thide: {\r\n");
      out.write("\t\t\t\t\tduration: 200\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tactivate: function(event, ui) {\r\n");
      out.write("\t\t\t\t\tg_selectedConfigTabIndex = ui.newTab.index();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tloadConfig();\r\n");
      out.write("// \t\t\t\t\tif (ui.newTab.index() == TAB_DEFAULT_CONFIG) {\r\n");
      out.write("// \t\t\t\t\t\tloadDefaultConfigInfo(g_selectedCompanyId, g_selectedDeptCode, g_selectedUserId);\r\n");
      out.write("// \t\t\t\t\t} else if (ui.newTab.index() == TAB_PATTERN_CONFIG) {\r\n");
      out.write("// \t\t\t\t\t\tloadPatternConfigInfo(g_selectedCompanyId, g_selectedDeptCode, g_selectedUserId);\r\n");
      out.write("// \t\t\t\t\t} else if (ui.newTab.index() == TAB_PRINT_CONTROL_CONFIG) {\r\n");
      out.write("// \t\t\t\t\t\tloadPrintControlConfigInfo(g_selectedCompanyId, g_selectedDeptCode, g_selectedUserId);\r\n");
      out.write("// \t\t\t\t\t} else if (ui.newTab.index() == TAB_WATERMARK_CONFIG) {\r\n");
      out.write("// \t\t\t\t\t\tloadWaterMarkConfigInfo(g_selectedCompanyId, g_selectedDeptCode, g_selectedUserId);\r\n");
      out.write("// \t\t\t\t\t} else if (ui.newTab.index() == TAB_MEDIA_CONTROL_CONFIG) {\r\n");
      out.write("// \t\t\t\t\t\tloadMediaControlConfigInfo(g_selectedCompanyId, g_selectedDeptCode, g_selectedUserId);\r\n");
      out.write("// \t\t\t\t\t} else if (ui.newTab.index() == TAB_NETWORKSERVICE_CONTROL_CONFIG) {\r\n");
      out.write("// \t\t\t\t\t\tloadNetworkServiceControlConfigInfo(g_selectedCompanyId, g_selectedDeptCode, g_selectedUserId);\r\n");
      out.write("// \t\t\t\t\t} else if (ui.newTab.index() == TAB_SYSTEM_CONTROL_CONFIG) {\r\n");
      out.write("// \t\t\t\t\t\tloadSystemControlConfigInfo(g_selectedCompanyId, g_selectedDeptCode, g_selectedUserId);\r\n");
      out.write("// \t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// \t\t\t$('#tab-clientconfig').disableTab(TAB_PRINT_CONTROL_CONFIG);\r\n");
      out.write("\r\n");
      out.write("// \t\t\t$('#tab-clientconfig').disableTab(TAB_PRINT_CONTROL_CONFIG, true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t$('#tab-clientconfig').disableTab(TAB_PRINT_CONTROL_CONFIG, true);\r\n");
      out.write("\r\n");
 if (SupportFunctionType.SUPPORT_FUNCTION_TYPE_DEACTIVATE.equals((String) session.getAttribute("WATERMARKOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t$('#tab-clientconfig').disableTab(TAB_WATERMARK_CONFIG);\r\n");
 } else if (SupportFunctionType.SUPPORT_FUNCTION_TYPE_HIDDEN.equals((String) session.getAttribute("WATERMARKOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t$('#tab-clientconfig').disableTab(TAB_WATERMARK_CONFIG, true);\r\n");
 } 
      out.write("\r\n");
      out.write("\r\n");
 if (SupportFunctionType.SUPPORT_FUNCTION_TYPE_DEACTIVATE.equals((String) session.getAttribute("MEDIACONTROLOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t$('#tab-clientconfig').disableTab(TAB_MEDIA_CONTROL_CONFIG);\r\n");
 } else if (SupportFunctionType.SUPPORT_FUNCTION_TYPE_HIDDEN.equals((String) session.getAttribute("MEDIACONTROLOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t$('#tab-clientconfig').disableTab(TAB_MEDIA_CONTROL_CONFIG, true);\r\n");
 } 
      out.write("\r\n");
      out.write("\r\n");
 if (SupportFunctionType.SUPPORT_FUNCTION_TYPE_DEACTIVATE.equals((String) session.getAttribute("NETWORKSERVICECONTROLOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t$('#tab-clientconfig').disableTab(TAB_NETWORKSERVICE_CONTROL_CONFIG);\r\n");
 } else if (SupportFunctionType.SUPPORT_FUNCTION_TYPE_HIDDEN.equals((String) session.getAttribute("NETWORKSERVICECONTROLOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t$('#tab-clientconfig').disableTab(TAB_NETWORKSERVICE_CONTROL_CONFIG, true);\r\n");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t$('#tab-clientconfig').disableTab(TAB_WORK_CONTROL_CONFIG, true);\r\n");
      out.write("\r\n");
      out.write("\t\t\touterLayout = $(\"body\").layout(outerDefaultLayoutOptions);\r\n");
      out.write("\t\t\tshowInnerLayout(\"innerDefault\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\treloadDefaultLayout = function() {\r\n");
      out.write("\t\t\tvar layoutHeight = $('.treeview-pannel').parent().height();\r\n");
      out.write("\t\t\tvar paddingTop = parseInt($('.treeview-pannel').css(\"padding-top\"));\r\n");
      out.write("\t\t\tvar paddingBottom = parseInt($('.treeview-pannel').css(\"padding-bottom\"));\r\n");
      out.write("\t\t\tif ($('.treeview-pannel').length) {\r\n");
      out.write("\t\t\t\t$('.treeview-pannel').height(layoutHeight - paddingTop - paddingBottom);\r\n");
      out.write("\t\t\t\t$('.treeview-pannel').mCustomScrollbar('update');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$('.inner-center .ui-layout-content').mCustomScrollbar('update');\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t$.fn.disableTab = function (tabIndex, hide) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t// Get the array of disabled tabs, if any\r\n");
      out.write("\t\t\tvar disabledTabs = this.tabs(\"option\", \"disabled\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ($.isArray(disabledTabs)) {\r\n");
      out.write("\t\t\t\tvar pos = $.inArray(tabIndex, disabledTabs);\r\n");
      out.write("\t\t\t\tif (pos < 0) {\r\n");
      out.write("\t\t\t\t\tdisabledTabs.push(tabIndex);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse {\r\n");
      out.write("\t\t\t\tdisabledTabs = [tabIndex];\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tthis.tabs(\"option\", \"disabled\", disabledTabs);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (hide === true) {\r\n");
      out.write("\t\t\t\t$(this).find('li:eq(' + tabIndex + ')').addClass('ui-state-hidden');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t// Enable chaining\r\n");
      out.write("\t\t\treturn this;\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t$.fn.enableTab = function (tabIndex) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t// Remove the ui-state-hidden class if it exists\r\n");
      out.write("\t\t\t$(this).find('li:eq(' + tabIndex + ')').removeClass('ui-state-hidden');\r\n");
      out.write("\r\n");
      out.write("\t\t\t// Use the built-in enable function\r\n");
      out.write("\t\t\tthis.tabs(\"enable\", tabIndex);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// Enable chaining\r\n");
      out.write("\t\t\treturn this;\r\n");
      out.write("\t\t};\r\n");
      out.write("\t//-->\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"ui-layout-north\">\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar g_objAlertDialog;\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tg_objAlertDialog = $('#dialog-alert');\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.dialog({\r\n");
      out.write("\t\t\tautoOpen: false,\r\n");
      out.write("\t\t\tresizable: false,\r\n");
      out.write("\t\t\twidth: 500,\r\n");
      out.write("\t\t\theight: 'auto',\r\n");
      out.write("\t\t\tcloseOnEscape: false,\r\n");
      out.write("\t\t\tmodal: true,\r\n");
      out.write("\t\t\topen: function() {\r\n");
      out.write("\t\t\t\t$(this).parent().find('.ui-dialog-buttonpane button:contains(\"확인\")').button({\r\n");
      out.write("\t\t\t\t\ticons: { primary: 'ui-icon-circle-check' }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".ui-dialog-titlebar-close\").hide();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tbuttons: {\r\n");
      out.write("\t\t\t\t\"확인\": function() {\r\n");
      out.write("\t\t\t\t\t$(this).dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tdisplayInfoDialog = function(dialogTitle, infoTitle, infoMessage) {\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_objAlertDialog.find('#alert-div').hasClass('ui-state-error')) {\r\n");
      out.write("\t\t\tg_objAlertDialog.find('#alert-div').removeClass('ui-state-error').addClass('ui-state-highlight');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_objAlertDialog.find('#alert-icon').hasClass('ui-icon-alert')) {\r\n");
      out.write("\t\t\tg_objAlertDialog.find('#alert-icon').removeClass('ui-icon-alert').addClass('ui-icon-info');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.find('#alert-title').html(infoTitle);\r\n");
      out.write("\t\tg_objAlertDialog.find('#alert-message').html(infoMessage);\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.dialog('option', 'title', dialogTitle);\r\n");
      out.write("\t\tg_objAlertDialog.dialog('open');\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tdisplayAlertDialog = function(dialogTitle, alertTitle, alertMessage) {\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_objAlertDialog.find('#alert-div').hasClass('ui-state-highlight')) {\r\n");
      out.write("\t\t\tg_objAlertDialog.find('#alert-div').removeClass('ui-state-highlight').addClass('ui-state-error');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_objAlertDialog.find('#alert-icon').hasClass('ui-icon-info')) {\r\n");
      out.write("\t\t\tg_objAlertDialog.find('#alert-icon').removeClass('ui-icon-info').addClass('ui-icon-alert');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.find('#alert-title').html(alertTitle);\r\n");
      out.write("\t\tg_objAlertDialog.find('#alert-message').html(alertMessage);\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.dialog('option', 'title', dialogTitle);\r\n");
      out.write("\t\tg_objAlertDialog.dialog('open');\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"dialog-alert\" title=\"\" class=\"dialog-form\">\r\n");
      out.write("\t<div id=\"alert-div\" class=\"ui-state-highlight\" style=\"padding: 10px 10px 5px 10px;\">\r\n");
      out.write("\t\t<div class=\"icon-message-holder\">\r\n");
      out.write("\t\t\t<div class=\"icon-holder\"><span id=\"alert-icon\" class=\"ui-icon ui-icon-info\"></span></div>\r\n");
      out.write("\t\t\t<div class=\"message-holder\">\r\n");
      out.write("\t\t\t\t<div class=\"icon-message\"><strong><span id=\"alert-title\"></span></strong></div>\r\n");
      out.write("\t\t\t\t<div class=\"detail-message\"><span id=\"alert-message\"></span></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

String serverTypeString = "";
String versionString = "1.0.0.0";
String imageTitle = "top_logo_spk.png";
String oemString = "";
String webTitleString = CommonConstant.SERVER_TITLE;

//****************************************************************************
// 관리자의 로그인 상태 정보를 읽어옴
//****************************************************************************
HashMap<String, String> mapLoginStatus = DbUtil.getAdminLoginStatus(session);
if (!mapLoginStatus.isEmpty()) {
	//************************************************************************
	// 사업장 생성이후 최초 관리자 로그인시 main.jsp에서 랜딩 설정 Dialog 팝업
	//************************************************************************
	if (OptionType.OPTION_TYPE_NO.equals((String) session.getAttribute("ISFIRSTLOGINADMINOFCOMPANY"))) {
		//************************************************************************
		// 관리자 생성 후 비밀번호를 변경하지 않은 관리자인 경우 - 비밀번호 변경 페이지로 이동
		//************************************************************************
		if (!AdminType.ADMIN_TYPE_SITE_ADMIN.equals((String) session.getAttribute("ADMINTYPE")) &&
				ChangeFirstPasswordState.CHANGE_FIRST_PASSWORD_STATE_NONE.equals((String) session.getAttribute("CHANGEFIRSTPASSWORDFLAG"))) {
			if (!request.getRequestURI().equals("/manage/account/admin_manage/manage.jsp")) {
				response.sendRedirect("/manage/account/admin_manage/manage.jsp");
			}
		}

		//************************************************************************
		// 비밀번호 유효기간이 만료된 경우 - 비밀번호 변경 페이지로 이동
		//************************************************************************
		if (OptionType.OPTION_TYPE_YES.equals((String) session.getAttribute("NEEDCHANGEPASSWORDFLAG"))) {
			if (!request.getRequestURI().equals("/manage/account/admin_manage/manage.jsp")) {
				response.sendRedirect("/manage/account/admin_manage/manage.jsp");
			}
		}
	}

	//************************************************************************
	// 서버 정보를 읽어옴
	//************************************************************************
	HashMap<String, String> mapTopServerConfig = DbUtil.getServerConfig(session);
	if (!mapTopServerConfig.isEmpty()) {
		ServerType serverType = new ServerType();
		serverTypeString = serverType.getTypeValue(mapTopServerConfig.get("servertype"));
		versionString = mapTopServerConfig.get("version");
		oemString = mapTopServerConfig.get("oem").toUpperCase();
		if ("MEDISAFER".equals(oemString)) {
			webTitleString = CommonConstant.MEDISAFER_SERVER_TITLE;
			imageTitle = "top_logo_medisafer.png";
		} else if ("BIZSAFER".equals(oemString)) {
			webTitleString = CommonConstant.BIZSAFER_SERVER_TITLE;
			imageTitle = "top_logo_bizsafer.png";
		}
	}
} else {
	response.sendRedirect("/login/login.jsp");
}

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tdocument.title = \"");
      out.print(webTitleString);
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("// \tif (session.getId().equals(mapLoginStatus.get(\"loginsessionid\"))) {\r\n");
      out.write("// \t\tif (!LoginState.LOGIN_STATE_LOGIN.equals(mapLoginStatus.get(\"loginflag\"))) {\r\n");
      out.write("// \talert(\"연결이 종료되었습니다. 다시 접속해 주세요.\");\r\n");
      out.write("// \tlocation.href = \"/login/login.jsp\";\r\n");
      out.write("// \t\t}\r\n");
      out.write("// \t} else {\r\n");
      out.write("// \t\tif (LoginState.LOGIN_STATE_FORCED_LOGOUT.equals(mapLoginStatus.get(\"loginflag\"))) {\r\n");
      out.write("// \talert(\"다른 관리자의 접속으로 현재의 연결이 종료되었습니다.\");\r\n");
      out.write("// \tlocation.href = \"/login/login.jsp\";\r\n");
      out.write("// \t\t} else {\r\n");
      out.write("// \talert(\"연결이 종료되었습니다. 다시 접속해 주세요.\");\r\n");
      out.write("// \tlocation.href = \"/login/login.jsp\";\r\n");
      out.write("// \t\t}\r\n");
      out.write("// \t}\r\n");
      out.write("\r\n");
      out.write("\tvar g_timeoutHandle;\r\n");
      out.write("\tvar g_isWorking = false;\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function($){\r\n");
      out.write("\t\tsetBrowserTimeout();\r\n");
      out.write("\r\n");
      out.write("\t\t$(window.document).click( function() {\r\n");
      out.write("\t\t\tclearBrowserTimeout();\r\n");
      out.write("\t\t\tsetBrowserTimeout();\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tshowMenu();\r\n");
      out.write("\r\n");
      out.write("\t\twindow.onbeforeunload = function () {\r\n");
      out.write("\t\t\tif (isBrowserClosed()) {\r\n");
      out.write("\t\t\t\tlogout();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t$('button[name=\"btnHelp\"]').button({ icons: {primary: \"ui-icon-disk\"} });\r\n");
      out.write("\r\n");
      out.write("\t\t$('#btnLogout').click(function() {\r\n");
      out.write("\t\t\tlogout();\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
 if ("darkness".equals((String) session.getAttribute("THEMENAME"))) { 
      out.write("\r\n");
      out.write("\t\t$('select[name=\"selecttheme\"] option[value=\"darkness\"]').prop(\"selected\", \"selected\");\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t\t$('select[name=\"selecttheme\"] option[value=\"default\"]').prop(\"selected\", \"selected\");\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t$('select[name=\"selecttheme\"]').change( function() {\r\n");
      out.write("\t\t\tchangeTheme($(this).val());\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tshowMenu = function() {\r\n");
      out.write("\t\tvar rowItemsCount = '1';\r\n");
      out.write("\t\tvar maximizeWidth = false;\r\n");
      out.write("\t\tif ($(window).height() < 800) {\r\n");
      out.write("\t\t\trowItemsCount = '4';\r\n");
      out.write("\t\t\t//maximizeWidth = true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$('#mega-menu-1').show();\r\n");
      out.write("\t\t$('#mega-menu-1').dcMegaMenu({\r\n");
      out.write("\t\t\trowItems: rowItemsCount,\r\n");
      out.write("\t\t\tfullWidth: maximizeWidth,\r\n");
      out.write("\t\t\tspeed: 'fast',\r\n");
      out.write("\t\t\teffect: 'fade',\r\n");
      out.write("\t\t\tfullWidth: false\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tisBrowserClosed = function() {\r\n");
      out.write("\t\tvar browserWindowWidth = 0;\r\n");
      out.write("\t\t//var browserWindowHeight = 0;\r\n");
      out.write("\r\n");
      out.write("\t\t// gets the width and height of the browser window\r\n");
      out.write("\t\tif (parseInt(navigator.appVersion) > 3) {\r\n");
      out.write("\t\t\tif (navigator.appName == \"Netscape\") {\r\n");
      out.write("\t\t\t\tbrowserWindowWidth = window.innerWidth;\r\n");
      out.write("\t\t\t\t//browserWindowHeight = window.innerHeight;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (navigator.appName.indexOf(\"Microsoft\") !=- 1) {\r\n");
      out.write("\t\t\t\tbrowserWindowWidth = top.window.document.body.offsetWidth;\r\n");
      out.write("\t\t\t\t//browserWindowHeight = top.window.document.body.offsetHeight;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// checks if the X button was closed\r\n");
      out.write("\t\t// if event.clientY < 0, then click was on the browser menu area\r\n");
      out.write("\t\t// if event.screenX > (browserWindowWidth - 25), the X button was clicked\r\n");
      out.write("\t\t// use screenX if working with multiple frames\r\n");
      out.write("\r\n");
      out.write("\t\treturn (event.clientY < 0 && event.screenX > (browserWindowWidth - 25)) ? true : false;\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tsetBrowserTimeout = function() {\r\n");
      out.write("\t\tif (!g_isWorking) {\r\n");
      out.write("\t\t\tg_timeoutHandle = setTimeout(\"logout()\", ");
      out.print(session.getMaxInactiveInterval()*1000);
      out.write(");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tclearBrowserTimeout = function() {\r\n");
      out.write("\t\tclearTimeout(g_timeoutHandle);\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tlogout = function() {\r\n");
      out.write("\t\tlocation.href = \"/login/logout.jsp\";\r\n");
      out.write("\t};\r\n");
      out.write("/*\r\n");
      out.write("\tchangeTheme = function(themeName) {\r\n");
      out.write("\t\tvar postData = getRequestChangeThemeParam(themeName);\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\tasync: false,\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"THEME 변경\", \"THEME 변경 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\twindow.location.reload(true);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"THEME 변경\", \"THEME 변경 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("*/\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div class=\"top_status_bar\">\r\n");
      out.write("\t");
      out.print((String) session.getAttribute("ADMINID"));
      out.write(" 님&nbsp;\r\n");
      out.write("\t<input type=\"button\" id=\"btnLogout\" class=\"logout-button\" value=\"LOGOUT\" />\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"top_menu_bar\">\r\n");
      out.write("\t<div class=\"first_block\">\r\n");
      out.write("\t\t<div class=\"logo-display\">\r\n");
      out.write("\t\t\t<span><a href=\"/main.jsp\" onFocus=\"this.blur();\"><img src=\"/images/");
      out.print(imageTitle);
      out.write("\" /></a></span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"second_block\">\r\n");
      out.write("\t\t<ul id=\"mega-menu-1\" class=\"mega-menu\">\r\n");
      out.write("\t\t\t<li><a href=\"#\">관리</a>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">조직 관리</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/manage/organization/organization_manage/manage.jsp\">부서/사용자 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/manage/organization/batch_user_regist/manage.jsp\">사용자 배치 등록</a></li>\r\n");
 if (AdminType.ADMIN_TYPE_COMPANY_ADMIN.equals((String) session.getAttribute("ADMINTYPE"))) { 
      out.write('\r');
      out.write('\n');
      out.write('	');
 if ("TRUE".equals(session.getServletContext().getInitParameter("activate_user_synchronization").toUpperCase())) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/manage/organization/user_synchronization/manage.jsp\">사용자 동기화</a></li>\r\n");
      out.write("\t");
 } 
      out.write('\r');
      out.write('\n');
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 if (AdminType.ADMIN_TYPE_COMPANY_ADMIN.equals((String) session.getAttribute("ADMINTYPE"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">사업장/계정 관리</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/manage/account/company_manage/manage.jsp\">사업장 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/manage/account/admin_manage/manage.jsp\">계정 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">공지 관리</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/manage/user_notice/user_notice_manage/manage.jsp\">사용자 공지</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 if ((session.getAttribute("DBPROTECTIONOPTION") == null) || SupportFunctionType.SUPPORT_FUNCTION_TYPE_ACTIVATE.equals((String) session.getAttribute("DBPROTECTIONOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">DB 보안 관리</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/manage/db_protection/db_protection_manage/manage.jsp\">DB 보안 설정</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/manage/db_protection/db_protection_log/list.jsp\">DB 보안 로그</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 } else if (SupportFunctionType.SUPPORT_FUNCTION_TYPE_DEACTIVATE.equals((String) session.getAttribute("DBPROTECTIONOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">DB 보안 관리</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"javascript:void(0);.jsp\" class=\"disabled\">DB 보안 설정</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"javascript:void(0);\" class=\"disabled\">DB 보안 로그</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 } 
      out.write('\r');
      out.write('\n');
 if ((session.getAttribute("SOFTWAREMANAGEOPTION") == null) || SupportFunctionType.SUPPORT_FUNCTION_TYPE_ACTIVATE.equals((String) session.getAttribute("SOFTWAREMANAGEOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">소프트웨어 관리</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/manage/software/software_installation/softwareinstallationperorganizationlist.jsp\">조직별 설치 내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/manage/software/software_installation/softwareinstallationpersoftwarelist.jsp\">소프트웨어별 설치 내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 } else if (SupportFunctionType.SUPPORT_FUNCTION_TYPE_DEACTIVATE.equals((String) session.getAttribute("SOFTWAREMANAGEOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">소프트웨어 관리</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"javascript:void(0);\" class=\"disabled\">조직별 설치 내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"javascript:void(0);\" class=\"disabled\">소프트웨어별 설치 내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li><a href=\"#\">설정</a>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">에이전트</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/config/agent/agent_config/manage.jsp\">에이전트 설정</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/config/agent/agent_config_status/list.jsp\">에이전트 설정 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">검사</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/config/search/force_search/manage.jsp\">강제검사</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/config/search/reserve_search/manage.jsp\">예약검사</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">결재</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/config/approval/approvator_manage/manage.jsp\">결재자 설정</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t<li style=\"display: none;\"><a href=\"#\">문서보안 권한</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/config/drm_permission/drm_permission_policy/manage.jsp\">정책 설정</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/config/drm_permission/user_belongs_drm_permission_policy_status/list.jsp\">사용자별 소속 정책 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li><a href=\"#\">조회</a>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">에이전트</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/search/agent/user_log/list.jsp\">사용자 로그</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">개인정보</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/search/privacy/search_log/list.jsp\">검사 내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/search/privacy/detect_log/list.jsp\">검출 내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/search/privacy/realtime_observation_log/list.jsp\">실시간 파일 감시 내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 if (((session.getAttribute("MEDIACONTROLOPTION") == null) || SupportFunctionType.SUPPORT_FUNCTION_TYPE_ACTIVATE.equals((String) session.getAttribute("MEDIACONTROLOPTION"))) ||
		((session.getAttribute("NETWORKSERVICECONTROLOPTION") == null) || SupportFunctionType.SUPPORT_FUNCTION_TYPE_ACTIVATE.equals((String) session.getAttribute("NETWORKSERVICECONTROLOPTION")))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">정보 유출 방지</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
 if (((session.getAttribute("MEDIACONTROLOPTION") == null) || SupportFunctionType.SUPPORT_FUNCTION_TYPE_ACTIVATE.equals((String) session.getAttribute("MEDIACONTROLOPTION"))) ||
		((session.getAttribute("NETWORKSERVICECONTROLOPTION") == null) || SupportFunctionType.SUPPORT_FUNCTION_TYPE_ACTIVATE.equals((String) session.getAttribute("NETWORKSERVICECONTROLOPTION")))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/search/media_control/media_control_log/list.jsp\">매체/네트워크 제어 내역</a></li>\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"/search/url_block/url_block_log/list.jsp\">URL 차단 내역</a></li> -->\r\n");
 } else if ((SupportFunctionType.SUPPORT_FUNCTION_TYPE_DEACTIVATE.equals((String) session.getAttribute("MEDIACONTROLOPTION"))) &&
		(SupportFunctionType.SUPPORT_FUNCTION_TYPE_DEACTIVATE.equals((String) session.getAttribute("NETWORKSERVICECONTROLOPTION")))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"javascript:void(0);\" class=\"disabled\">매체/네트워크 제어 내역</a></li>\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"javascript:void(0);\" class=\"disabled\">URL 차단 내역</a></li> -->\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">결재</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/search/approval/approval_status/list.jsp\">결재 목록</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("<!-- \t\t\t\t\t<li><a href=\"#\">안전반출</a> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t<ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"/search/safe_export/safe_export_staus/list.jsp\">안전반출 목록</a></li> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t</ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t</li> -->\r\n");
 if ("MEDISAFER".equalsIgnoreCase(oemString) || "BIZSAFER".equalsIgnoreCase(oemString)) { 
      out.write('\r');
      out.write('\n');
      out.write('	');
 if ((session.getAttribute("RANSOMWAREDETECTIONOPTION") == null) || SupportFunctionType.SUPPORT_FUNCTION_TYPE_ACTIVATE.equals((String) session.getAttribute("RANSOMWAREDETECTIONOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">랜섬웨어</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/search/ransomware/ransomware_detect_log/list.jsp\">검출 목록</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t");
 } else if (SupportFunctionType.SUPPORT_FUNCTION_TYPE_DEACTIVATE.equals((String) session.getAttribute("RANSOMWAREDETECTIONOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">랜섬웨어</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"javascript:void(0);\" class=\"disabled\">검출 목록</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t");
 } 
      out.write('\r');
      out.write('\n');
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li style=\"display: none;\"><a href=\"#\">문서보안 권한</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/search/drm_permission/drm_permission_settings_log/list.jsp\">설정 내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\r\n");
      out.write("<!-- \t\t\t\t\t<li><a href=\"#\">출력</a> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t<ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"/search/print/print_log/list.jsp\">출력 목록</a></li> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t</ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t</li> -->\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("<!-- \t\t\t\t\t<li><a href=\"#\">출력</a> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t<ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"javascript:void(0);\" class=\"disabled\">출력 목록</a></li> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t</ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t</li> -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li><a href=\"#\">통계</a>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">에이전트</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/statistics/agent/agent_install_status/status.jsp\">에이전트 설치 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">개인정보</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/statistics/privacy/search_status_per_terms/status.jsp\">기간별 검사 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/statistics/privacy/detect_status_per_terms/status.jsp\">기간별 검출 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/statistics/privacy/pattern_detect_status_per_organization/status.jsp\">조직별 패턴 검출 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/statistics/privacy/filetype_detect_status_per_organization/status.jsp\">조직별 파일 유형 검출 현황</a></li>\r\n");
 if (AdminType.ADMIN_TYPE_SITE_ADMIN.equals((String) session.getAttribute("ADMINTYPE"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/statistics/privacy/company_detect_status_per_pattern/status.jsp\">패턴별 사업장 검출 현황</a></li>\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/statistics/privacy/dept_detect_status_per_pattern/status.jsp\">패턴별 부서 검출 현황</a></li>\r\n");
 if (AdminType.ADMIN_TYPE_SITE_ADMIN.equals((String) session.getAttribute("ADMINTYPE"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/statistics/privacy/company_detect_status_per_filetype/status.jsp\">파일 유형별 사업장 검출 현황</a></li>\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/statistics/privacy/dept_detect_status_per_filetype/status.jsp\">파일 유형별 부서 검출 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("<!-- \t\t\t\t\t<li><a href=\"#\">안전반출</a> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t<ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"/statistics/safe_export/safe_export_status_per_terms/status.jsp\">기간별 반출 현황</a></li> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t</ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t</li> -->\r\n");
 if ("MEDISAFER".equalsIgnoreCase(oemString) || "BIZSAFER".equalsIgnoreCase(oemString)) { 
      out.write('\r');
      out.write('\n');
      out.write('	');
 if ((session.getAttribute("RANSOMWAREDETECTIONOPTION") == null) || SupportFunctionType.SUPPORT_FUNCTION_TYPE_ACTIVATE.equals((String) session.getAttribute("RANSOMWAREDETECTIONOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">랜섬웨어</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/statistics/ransomware/ransomware_detect_status_per_terms/status.jsp\">기간별 검출 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t");
 } else if (SupportFunctionType.SUPPORT_FUNCTION_TYPE_DEACTIVATE.equals((String) session.getAttribute("RANSOMWAREDETECTIONOPTION"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">랜섬웨어</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"javascript:void(0);\" class=\"disabled\">기간별 검출 목록</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t");
 } 
      out.write('\r');
      out.write('\n');
 } 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!-- \t\t\t\t\t<li><a href=\"#\">출력</a> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t<ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"/statistics/print/print_status_per_terms/status.jsp\">기간별 출력 현황</a></li> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t</ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t</li> -->\r\n");
      out.write("\r\n");
      out.write("<!-- \t\t\t\t\t<li><a href=\"#\">출력</a> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t<ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"javascript:void(0);\" class=\"disabled\">기간별 출력 현황</a></li> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t</ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t</li> -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li><a href=\"#\">리포트</a>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">개인정보</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/report/privacy/user_not_executed_search/list.jsp\">검사 미실행 사용자 목록</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/report/privacy/detect_status_per_user/list.jsp\">사용자별 검출 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/report/privacy/detect_status_per_dept/list.jsp\">부서별 검출 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/report/privacy/detect_file_list/list.jsp\">검출 파일 목록</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/report/privacy/detect_file_process_status_per_user/list.jsp\">사용자별 검출 파일 처리 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/report/privacy/detect_file_process_status_per_dept/list.jsp\">부서별 검출 파일 처리 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("<!-- \t\t\t\t\t<li><a href=\"#\">안전반출</a> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t<ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"/report/safe_export/safe_export_status_per_user/list.jsp\">사용자별 반출 현황</a></li> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"/report/safe_export/safe_export_status_per_dept/list.jsp\">부서별 반출 현황</a></li> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t</ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t</li> -->\r\n");
      out.write("\r\n");
      out.write("<!-- \t\t\t\t\t<li><a href=\"#\">프린트</a> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t<ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"/report/print/print_status_per_user/list.jsp\">사용자별 출력 현황</a></li> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"/report/print/print_status_per_dept/list.jsp\">부서별 출력 현황</a></li> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t</ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t</li> -->\r\n");
      out.write("\r\n");
      out.write("<!-- \t\t\t\t\t<li><a href=\"#\">프린트</a> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t<ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"javascript:void(0);\" class=\"disabled\">사용자별 출력 현황</a></li> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"javascript:void(0);\" class=\"disabled\">부서별 출력 현황</a></li> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t</ul> -->\r\n");
      out.write("<!-- \t\t\t\t\t</li> -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">보안정책 현황</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/report/security_status/monthly_report/list.jsp\">월별 보안정책 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li><a href=\"#\">모니터링</a>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">에이전트</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/monitor/agent/agent_access_status/list.jsp\">사용자 접속 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/monitor/agent/agent_system_status/list.jsp\">사용자 시스템 현황</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 if (AdminType.ADMIN_TYPE_SITE_ADMIN.equals((String) session.getAttribute("ADMINTYPE"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">서버</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/monitor/server/server_system_status/status.jsp\">서버 시스템 정보</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</li>\r\n");
 if (AdminType.ADMIN_TYPE_SITE_ADMIN.equals((String) session.getAttribute("ADMINTYPE"))) { 
      out.write("\r\n");
      out.write("\t\t\t<li><a href=\"#\">사이트 관리</a>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t");
 if (ServerType.SERVER_TYPE_ASP.equals((String) session.getAttribute("SERVERTYPE"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">서비스</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/site_manage/service/application/manage.jsp\">서비스 신청</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">사업장</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/site_manage/company/company_manage/manage.jsp\">사업장 관리</a></li>\r\n");
      out.write("\t");
 if (ServerType.SERVER_TYPE_ASP.equals((String) session.getAttribute("SERVERTYPE"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/site_manage/licence/licence_manage/manage.jsp\">라이센스 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/site_manage/licence/licence_renewal_history/list.jsp\">라이센스 갱신 목록</a></li>\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<li><a href=\"/site_manage/payment/payment_history/list.jsp\">결제 내역 목록</a></li> -->\r\n");
      out.write("\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">관리자</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/site_manage/admin/admin_manage/manage.jsp\">관리자 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/site_manage/admin/admin_log/list.jsp\">관리자 로그</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">패턴</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/site_manage/pattern/pattern_manage/manage.jsp\">패턴 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">네트워크</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/site_manage/media_control/network_service_control_program/manage.jsp\">서비스 제어 프로그램 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 if ("MEDISAFER".equalsIgnoreCase(oemString) || "BIZSAFER".equalsIgnoreCase(oemString)) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">랜섬웨어</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/site_manage/ransomware/ransomware_credential_exception_manage/manage.jsp\">신뢰정보 예외 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/site_manage/ransomware/ransomware_behavior_profile_exception_manage/manage.jsp\">행위분석 예외 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">API</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/site_manage/api/api_callable_address_manage/manage.jsp\">API 호출 가능 주소 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#\">에이전트</a>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"/site_manage/agent/agent_update_manage/manage.jsp\">업데이트 관리</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</li>\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"clear\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- \t\t<div class=\"site-map-path\"> -->\r\n");
      out.write("<!-- \t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-folder-open\"></span></li></ul> -->\r\n");
      out.write("<!-- \t\t\t<span class=\"parent-path\">관리</span> -->\r\n");
      out.write("<!-- \t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-carat-1-e\"></span></li></ul> -->\r\n");
      out.write("<!-- \t\t\t<span class=\"parent-path\">클라이언트 관리</span> -->\r\n");
      out.write("<!-- \t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-carat-1-e\"></span></li></ul> -->\r\n");
      out.write("<!-- \t\t\t<span class=\"current-path\">클라이언트 설정</span> -->\r\n");
      out.write("<!-- \t\t</div> -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"ui-layout-center\">\r\n");
      out.write("\t\t<div id=\"innerDefault\" class=\"inner-layout-container\">\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar g_objAlertDialog;\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tg_objAlertDialog = $('#dialog-alert');\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.dialog({\r\n");
      out.write("\t\t\tautoOpen: false,\r\n");
      out.write("\t\t\tresizable: false,\r\n");
      out.write("\t\t\twidth: 500,\r\n");
      out.write("\t\t\theight: 'auto',\r\n");
      out.write("\t\t\tcloseOnEscape: false,\r\n");
      out.write("\t\t\tmodal: true,\r\n");
      out.write("\t\t\topen: function() {\r\n");
      out.write("\t\t\t\t$(this).parent().find('.ui-dialog-buttonpane button:contains(\"확인\")').button({\r\n");
      out.write("\t\t\t\t\ticons: { primary: 'ui-icon-circle-check' }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".ui-dialog-titlebar-close\").hide();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tbuttons: {\r\n");
      out.write("\t\t\t\t\"확인\": function() {\r\n");
      out.write("\t\t\t\t\t$(this).dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tdisplayInfoDialog = function(dialogTitle, infoTitle, infoMessage) {\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_objAlertDialog.find('#alert-div').hasClass('ui-state-error')) {\r\n");
      out.write("\t\t\tg_objAlertDialog.find('#alert-div').removeClass('ui-state-error').addClass('ui-state-highlight');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_objAlertDialog.find('#alert-icon').hasClass('ui-icon-alert')) {\r\n");
      out.write("\t\t\tg_objAlertDialog.find('#alert-icon').removeClass('ui-icon-alert').addClass('ui-icon-info');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.find('#alert-title').html(infoTitle);\r\n");
      out.write("\t\tg_objAlertDialog.find('#alert-message').html(infoMessage);\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.dialog('option', 'title', dialogTitle);\r\n");
      out.write("\t\tg_objAlertDialog.dialog('open');\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tdisplayAlertDialog = function(dialogTitle, alertTitle, alertMessage) {\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_objAlertDialog.find('#alert-div').hasClass('ui-state-highlight')) {\r\n");
      out.write("\t\t\tg_objAlertDialog.find('#alert-div').removeClass('ui-state-highlight').addClass('ui-state-error');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_objAlertDialog.find('#alert-icon').hasClass('ui-icon-info')) {\r\n");
      out.write("\t\t\tg_objAlertDialog.find('#alert-icon').removeClass('ui-icon-info').addClass('ui-icon-alert');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.find('#alert-title').html(alertTitle);\r\n");
      out.write("\t\tg_objAlertDialog.find('#alert-message').html(alertMessage);\r\n");
      out.write("\r\n");
      out.write("\t\tg_objAlertDialog.dialog('option', 'title', dialogTitle);\r\n");
      out.write("\t\tg_objAlertDialog.dialog('open');\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"dialog-alert\" title=\"\" class=\"dialog-form\">\r\n");
      out.write("\t<div id=\"alert-div\" class=\"ui-state-highlight\" style=\"padding: 10px 10px 5px 10px;\">\r\n");
      out.write("\t\t<div class=\"icon-message-holder\">\r\n");
      out.write("\t\t\t<div class=\"icon-holder\"><span id=\"alert-icon\" class=\"ui-icon ui-icon-info\"></span></div>\r\n");
      out.write("\t\t\t<div class=\"message-holder\">\r\n");
      out.write("\t\t\t\t<div class=\"icon-message\"><strong><span id=\"alert-title\"></span></strong></div>\r\n");
      out.write("\t\t\t\t<div class=\"detail-message\"><span id=\"alert-message\"></span></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar g_objConfirmDialog;\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tg_objConfirmDialog = $('#dialog-confirm');\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tdisplayConfirmDialog = function(dialogTitle, confirmTitle, confirmMessage, funcToExec) {\r\n");
      out.write("\t\tg_objConfirmDialog.dialog({\r\n");
      out.write("\t\t\tautoOpen: false,\r\n");
      out.write("\t\t\tresizable: false,\r\n");
      out.write("\t\t\twidth: 500,\r\n");
      out.write("\t\t\theight: 'auto',\r\n");
      out.write("\t\t\tcloseOnEscape: false,\r\n");
      out.write("\t\t\tmodal: true,\r\n");
      out.write("\t\t\topen: function() {\r\n");
      out.write("\t\t\t\t$(this).parent().find('.ui-dialog-buttonpane button:contains(\"확인\")').button({\r\n");
      out.write("\t\t\t\t\ticons: { primary: 'ui-icon-circle-check' }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).parent().find('.ui-dialog-buttonpane button:contains(\"취소\")').button({\r\n");
      out.write("\t\t\t\t\ticons: { primary: 'ui-icon-circle-close' }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".ui-dialog-titlebar-close\").hide();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tbuttons: {\r\n");
      out.write("\t\t\t\t\"확인\": function() {\r\n");
      out.write("\t\t\t\t\tfuncToExec();\r\n");
      out.write("\t\t\t\t\t$(this).dialog('close');\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\"취소\": function() {\r\n");
      out.write("\t\t\t\t\t$(this).dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tg_objConfirmDialog.find('#confirm-title').html(confirmTitle);\r\n");
      out.write("\t\tg_objConfirmDialog.find('#confirm-message').html(confirmMessage);\r\n");
      out.write("\t\tg_objConfirmDialog.dialog('option', 'title', dialogTitle);\r\n");
      out.write("\r\n");
      out.write("\t\tg_objConfirmDialog.dialog('open');\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"dialog-confirm\" title=\"\" class=\"dialog-form\">\r\n");
      out.write("\t<div style=\"padding: 10px 10px 5px 10px;\">\r\n");
      out.write("\t\t<div class=\"icon-message-holder\">\r\n");
      out.write("\t\t\t<div class=\"icon-holder\"><span id=\"alert-icon\" class=\"ui-icon ui-icon-circle-check\"></span></div>\r\n");
      out.write("\t\t\t<div class=\"message-holder\">\r\n");
      out.write("\t\t\t\t<div class=\"icon-message\"><strong><span id=\"confirm-title\"></span></strong></div>\r\n");
      out.write("\t\t\t\t<div class=\"detail-message\"><span id=\"confirm-message\"></span></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar g_objSaveConfigConfirmDialog;\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tg_objSaveConfigConfirmDialog = $('#dialog-saveconfigconfirm');\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\topenSaveConfigConfirmDialog = function(dialogTitle, confirmMessage) {\r\n");
      out.write("\r\n");
      out.write("\t\tg_objSaveConfigConfirmDialog.dialog({\r\n");
      out.write("\t\t\tautoOpen: false,\r\n");
      out.write("\t\t\twidth: 400,\r\n");
      out.write("\t\t\tmaxWidth: $(document).width(),\r\n");
      out.write("\t\t\theight: 'auto',\r\n");
      out.write("\t\t\tmaxHeight: $(document).height(),\r\n");
      out.write("\t\t\tresizable: false,\r\n");
      out.write("\t\t\tmodal: true,\r\n");
      out.write("\t\t\topen: function() {\r\n");
      out.write("\t\t\t\t$(this).parent().find('.ui-dialog-buttonpane button:contains(\"확인\")').button({\r\n");
      out.write("\t\t\t\t\ticons: { primary: 'ui-icon-circle-check' }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).parent().find('.ui-dialog-buttonpane button:contains(\"취소\")').button({\r\n");
      out.write("\t\t\t\t\ticons: { primary: 'ui-icon-circle-close' }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".ui-dialog-titlebar-close\").hide();\r\n");
      out.write("\t\t\t\t$(this).parent().focus();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$('#div-saveallcompanys').hide();\r\n");
      out.write("\t\t\t\t$('#div-savealldepts').hide();\r\n");
      out.write("\t\t\t\t$('#div-saveallusers').hide();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each(function(i, node) {\r\n");
      out.write("\t\t\t\t\tif ($(node).attr('node_type') == \"company\") {\r\n");
      out.write("\t\t \t\t\t\t$('input:checkbox[name=\"checksaveallcompanys\"]').prop('checked', true);\r\n");
      out.write("\t\t\t\t\t\t$('#div-saveallcompanys').show();\r\n");
      out.write("\t\t\t\t\t} else if ($(node).attr('node_type') == \"dept\") {\r\n");
      out.write("\t\t \t\t\t\t$('input:checkbox[name=\"checksavealldepts\"]').prop('checked', true);\r\n");
      out.write("\t\t\t\t\t\t$('#div-savealldepts').show();\r\n");
      out.write("\t\t\t\t\t} else if ($(node).attr('node_type') == \"user\") {\r\n");
      out.write("\t\t \t\t\t\t$('input:checkbox[name=\"checksaveallusers\"]').prop('checked', true);\r\n");
      out.write("\t\t\t\t\t\t$('#div-saveallusers').show();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tbuttons: {\r\n");
      out.write("\t\t\t\t\"확인\": function() {\r\n");
      out.write("\t\t\t\t\tif (typeof saveConfig === \"function\") {\r\n");
      out.write("\t\t\t\t\t\tsaveConfig($('input:checkbox[name=\"checksaveallcompanys\"]').is(':checked'),\r\n");
      out.write("\t\t\t\t\t\t\t\t$('input:checkbox[name=\"checksavealldepts\"]').is(':checked'),\r\n");
      out.write("\t\t\t\t\t\t\t\t$('input:checkbox[name=\"checksaveallusers\"]').is(':checked'));\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t$(this).dialog('close');\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\"취소\": function() {\r\n");
      out.write("\t\t\t\t\t$(this).dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tclose: function() {\r\n");
      out.write("\t\t\t\t$(this).find('input:checkbox').each(function() {\r\n");
      out.write("\t\t\t\t\t$(this).prop('checked', false);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tg_objSaveConfigConfirmDialog.find('#saveconfigconfirm-message').html(confirmMessage);\r\n");
      out.write("\t\tg_objSaveConfigConfirmDialog.dialog('option', 'title', dialogTitle);\r\n");
      out.write("\t\tg_objSaveConfigConfirmDialog.dialog('open');\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"dialog-saveconfigconfirm\" title=\"\" class=\"dialog-form\">\r\n");
      out.write("\t<div class=\"dialog-contents\">\r\n");
      out.write("\t\t<div class=\"icon-message-holder\">\r\n");
      out.write("\t\t\t<div class=\"icon-holder\"><span class=\"ui-icon ui-icon-circle-check\"></span></div>\r\n");
      out.write("\t\t\t<div class=\"message-holder\">\r\n");
      out.write("\t\t\t\t<div class=\"icon-message\"><strong><span id=\"saveconfigconfirm-message\"></span></strong></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t<div style=\"margin: 10px 0 0 20px;\">\r\n");
      out.write("\t\t\t<div style=\"margin: 8px 0;\">설정 정보 저장 대상 선택:</div>\r\n");
      out.write("\t\t\t<div id=\"div-saveallcompanys\" class=\"field-line\"><label class=\"checkbox\"><input type=\"checkbox\" name=\"checksaveallcompanys\" onFocus=\"this.blur()\">선택한 ");
 if (AdminType.ADMIN_TYPE_SITE_ADMIN.equals((String)session.getAttribute("ADMINTYPE"))) { 
      out.write('모');
      out.write('든');
      out.write(' ');
 } 
      out.write("사업장</label></div>\r\n");
      out.write("\t\t\t<div id=\"div-savealldepts\" class=\"field-line\"><label class=\"checkbox\"><input type=\"checkbox\" name=\"checksavealldepts\" onFocus=\"this.blur()\">선택한 모든 부서</label></div>\r\n");
      out.write("\t\t\t<div id=\"div-saveallusers\" class=\"field-line\"><label class=\"checkbox\"><input type=\"checkbox\" name=\"checksaveallusers\" onFocus=\"this.blur()\">선택한 모든 사용자</label></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar g_objManageWaterMarkBackgroundImageDialog;\r\n");
      out.write("\tvar g_selectedImgPath = \"\";\r\n");
      out.write("\tvar g_selectedImgFileName = \"\";\r\n");
      out.write("\tvar g_selectedImgWidth = \"\";\r\n");
      out.write("\tvar g_selectedImgHeight = \"\";\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tg_objManageWaterMarkBackgroundImageDialog = $('#dialog-managewatermarkbackgroundimage');\r\n");
      out.write("\r\n");
      out.write("\t\t$('#btnUploadFiles').button({ icons: {primary: \"ui-icon-arrowthickstop-1-n\"} });\r\n");
      out.write("\t\t$('#btnSelectImage').button({ icons: {primary: \"ui-icon-check\"} });\r\n");
      out.write("\t\t$('#btnDeselectImage').button({ icons: {primary: \"ui-icon-cancel\"} });\r\n");
      out.write("\t\t$('#btnDeleteImage').button({ icons: {primary: \"ui-icon-close\"} });\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\topenManageWaterMarkBackgroundImageDialog = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tg_selectedImgPath = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimage\"]').val();\r\n");
      out.write("\t\tg_selectedImgFileName = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimagefilename\"]').val();\r\n");
      out.write("\t\tg_selectedImgWidth = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimagewidth\"]').val();\r\n");
      out.write("\t\tg_selectedImgHeight = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimageheight\"]').val();\r\n");
      out.write("\r\n");
      out.write("\t\tloadWaterMarkBackgroundImageListTable();\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_selectedImgPath.length != 0) {\r\n");
      out.write("\t\t\tdisplayThumbnail(g_selectedImgPath);\r\n");
      out.write("\t\t\t$('#btnSelectImage').button(\"enable\");\r\n");
      out.write("\t\t\t$('#btnDeselectImage').button(\"enable\");\r\n");
      out.write("\t\t\t$('#btnDeleteImage').button(\"enable\");\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\thideThumbnail();\r\n");
      out.write("\t\t\t$('#btnSelectImage').button(\"disable\");\r\n");
      out.write("\t\t\t$('#btnDeselectImage').button(\"disable\");\r\n");
      out.write("\t\t\t$('#btnDeleteImage').button(\"disable\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_objManageWaterMarkBackgroundImageDialog.find('.scroll-table').scrolltable({\r\n");
      out.write("\t\t\tstripe: true,\r\n");
      out.write("\t\t\toddClass: 'odd',\r\n");
      out.write("\t\t\tmaxHeight: 115\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tg_objManageWaterMarkBackgroundImageDialog.dialog({\r\n");
      out.write("\t\t\tautoOpen: false,\r\n");
      out.write("\t\t\tminWidth: 550,\r\n");
      out.write("\t\t\tmaxWidth: $(document).width(),\r\n");
      out.write("\t\t\twidth: $(document).width()/2,\r\n");
      out.write("\t\t\theight: 'auto',\r\n");
      out.write("\t\t\tminHeight: 480,\r\n");
      out.write("\t\t\tmaxHeight: $(document).height(),\r\n");
      out.write("\t\t\tmodal: true,\r\n");
      out.write("\t\t\topen: function() {\r\n");
      out.write("\t\t\t\t$(this).parent().find('.ui-dialog-buttonpane button:contains(\"확인\")').button({\r\n");
      out.write(" \t\t\t\t\ticons: { primary: 'ui-icon-circle-check' }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).parent().focus();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tbuttons: {\r\n");
      out.write("\t\t\t\t\"확인\": function() {\r\n");
      out.write("\t\t\t\t\t$(this).dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tclose: function() {\r\n");
      out.write("\t\t\t\tg_selectedImgPath = \"\";\r\n");
      out.write("\t\t\t\tg_selectedImgFileName = \"\";\r\n");
      out.write("\t\t\t\tg_selectedImgWidth = \"\";\r\n");
      out.write("\t\t\t\tg_selectedImgHeight = \"\";\r\n");
      out.write("\t\t\t\thideThumbnail();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t.dialogExtend({\r\n");
      out.write("\t\t\t\"closable\" : false,\r\n");
      out.write("\t\t\t\"maximizable\" : true,\r\n");
      out.write("\t\t\t\"minimizable\" : true,\r\n");
      out.write("\t\t\t\"collapsable\" : true,\r\n");
      out.write("\t\t\t\"dblclick\" : \"collapse\"\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$('button').click( function () {\r\n");
      out.write("\t\t\tif ($(this).attr('id') == 'btnUploadFiles') {\r\n");
      out.write("\t\t\t\topenUploadWaterMarkBackgroundImageDialog();\r\n");
      out.write("\t\t\t} else if ($(this).attr('id') == 'btnSelectImage') {\r\n");
      out.write("\t\t\t\tselectImage();\r\n");
      out.write("\t\t\t} else if ($(this).attr('id') == 'btnDeselectImage') {\r\n");
      out.write("\t\t\t\tdeselectImage();\r\n");
      out.write("\t\t\t} else if ($(this).attr('id') == 'btnDeleteImage') {\r\n");
      out.write("\t\t\t\tdeleteImage();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tg_objManageWaterMarkBackgroundImageDialog.dialog('open');\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tloadWaterMarkBackgroundImageListTable = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objImageList = g_objManageWaterMarkBackgroundImageDialog.find('#image-list');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objTreeReference = $.jstree._reference(g_objOrganizationTree);\r\n");
      out.write("\t\tvar targetCompanyId = \"\"; \r\n");
      out.write("\t\tif (typeof objTreeReference.get_selected().attr('companyid') != typeof undefined) {\r\n");
      out.write("\t\t\ttargetCompanyId = objTreeReference.get_selected().attr('companyid');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tvar postData = getRequestWaterMarkBackgroundImageListParam(targetCompanyId);\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\tasync: false,\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"워터마크 이미지 리스트 조회\", \"워터마크 이미지 리스트 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar htmlContents = '';\r\n");
      out.write("\t\t\t\thtmlContents += '<table id=\"image-list-table\" class=\"ui-widget-content scroll-table\">';\r\n");
      out.write("\t\t\t\thtmlContents += '<thead>';\r\n");
      out.write("\t\t\t\thtmlContents += '<tr style=\"border:none\">';\r\n");
      out.write("\t\t\t\thtmlContents += '<th width=\"40\" style=\"text-align: center;\">선택</th>';\r\n");
      out.write("\t\t\t\thtmlContents += '<th>워터마크 이미지</th>';\r\n");
      out.write("\t\t\t\thtmlContents += '<th style=\"width: 60px;\">가로 크기</th>';\r\n");
      out.write("\t\t\t\thtmlContents += '<th style=\"width: 60px;\">세로 크기</th>';\r\n");
      out.write("\t\t\t\thtmlContents += '</tr>';\r\n");
      out.write("\t\t\t\thtmlContents += '</thead>';\r\n");
      out.write("\t\t\t\thtmlContents += '<tbody>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar resultRecordCount = $(data).find('file').length;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (resultRecordCount > 0) {\r\n");
      out.write("\t\t\t\t\tvar recordCount = 1;\r\n");
      out.write("\t\t\t\t\tvar lineStyle = '';\r\n");
      out.write("\t\t\t\t\t$(data).find('file').each(function() {\r\n");
      out.write("\t\t\t\t\t\tif (recordCount%2 == 0)\r\n");
      out.write("\t\t\t\t\t\t\tlineStyle = \"list_even\";\r\n");
      out.write("\t\t\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t\t\tlineStyle = \"list_odd\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tvar fileName = $(this).find('filename').text();\r\n");
      out.write("\t\t\t\t\t\tvar filePath = $(this).find('filepath').text();\r\n");
      out.write("\t\t\t\t\t\tvar imageWidth = $(this).find('imagewidth').text();\r\n");
      out.write("\t\t\t\t\t\tvar imageHeigth = $(this).find('imageheight').text();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\thtmlContents += '<tr class=\"' + lineStyle + '\" filepath=\"' + filePath + '\" filename=\"' + fileName + '\" imagewidth=\"' + imageWidth + '\" imageheigth=\"' + imageHeigth + '\">';\r\n");
      out.write("\t\t\t\t\t\tif ( (g_selectedImgPath.length != 0) && (g_selectedImgPath == filePath) ) {\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selectfile\" filename=\"' + fileName + '\" style=\"border: 0;\" onFocus=\"this.blur()\" checked></td>';\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selectfile\" filename=\"' + fileName + '\" style=\"border: 0;\" onFocus=\"this.blur()\"></td>';\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\thtmlContents += '<td style=\"text-align: left;\" title=\"' + fileName + '\">' + fileName + '</td>';\r\n");
      out.write("\t\t\t\t\t\thtmlContents += '<td style=\"text-align: right;\">' + imageWidth + '</td>';\r\n");
      out.write("\t\t\t\t\t\thtmlContents += '<td style=\"text-align: right;\">' + imageHeigth + '</td>';\r\n");
      out.write("\t\t\t\t\t\thtmlContents += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\trecordCount++;\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\thtmlContents += '</tbody>';\r\n");
      out.write("\t\t\t\t\thtmlContents += '</table>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tobjImageList.html(htmlContents);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar inlineScriptText = \"\";\r\n");
      out.write("\t\t\t\t\tinlineScriptText += \"g_objManageWaterMarkBackgroundImageDialog.find('.scroll-table tbody tr.list_odd').hover(function() {$(this).toggleClass('list_text_over');$(this).toggleClass('list_odd')});\";\r\n");
      out.write("\t\t\t\t\tinlineScriptText += \"g_objManageWaterMarkBackgroundImageDialog.find('.scroll-table tbody tr.list_even').hover(function() {$(this).toggleClass('list_text_over');$(this).toggleClass('list_even')});\";\r\n");
      out.write("//\t\t\t\t\tinlineScriptText += \"g_objManageWaterMarkBackgroundImageDialog.find('.scroll-table tbody tr').click(function() { var isChecked = $(this).find('input:checkbox[name=selectfile]').is(':checked'); $('input:checkbox[name=selectfile]').each( function () { $(this).prop('checked', false); }); if (isChecked == true) { $(this).find('input:checkbox[name=selectfile]').prop('checked', false); g_selectedImgPath = ''; g_selectedImgWidth = ''; g_selectedImgHeight = ''; hideThumbnail(); $('#btnSelectImage').button('disable'); $('#btnDeleteImage').button('disable'); } else { $(this).find('input:checkbox[name=selectfile]').prop('checked', true); g_selectedImgPath = $(this).attr('filepath'); g_selectedImgWidth = $(this).attr('imagewidth'); g_selectedImgHeight = $(this).attr('imageheigth'); displayThumbnail($(this).attr('filepath')); $('#btnSelectImage').button('enable'); $('#btnDeleteImage').button('enable'); } });\";\r\n");
      out.write("\t\t\t\t\tinlineScriptText += \"g_objManageWaterMarkBackgroundImageDialog.find('.scroll-table tbody tr').click(function (e) { selectImageRow($(this)); });\";\r\n");
      out.write("\t\t\t\t\tinlineScriptText += \"g_objManageWaterMarkBackgroundImageDialog.find('.scroll-table tbody tr td:first-child').click(function (e) { selectImageRow($(e.target).parent()); });\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar inlineScript   = document.createElement(\"script\");\r\n");
      out.write("\t\t\t\t\tinlineScript.type  = \"text/javascript\";\r\n");
      out.write("\t\t\t\t\tinlineScript.text  = inlineScriptText;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tobjImageList.append(inlineScript);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\thtmlContents += '<tr>';\r\n");
      out.write("\t\t\t\t\thtmlContents += '<td colspan=\"4\" align=\"center\"><div style=\"padding: 10px 0; text-align: center;\">선택할 워터마크 이미지가 없습니다.</div></td>';\r\n");
      out.write("\t\t\t\t\thtmlContents += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\thtmlContents += '</tbody>';\r\n");
      out.write("\t\t\t\t\thtmlContents += '</table>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tobjImageList.html(htmlContents);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"워터마크 이미지 리스트 조회\", \"워터마크 이미지 리스트 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tdisplayThumbnail = function(srcPath) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar imgContents = '<img src=\"' + srcPath + '\" />';\r\n");
      out.write("\r\n");
      out.write("\t\t$('.nailthumb-container').html(imgContents);\r\n");
      out.write("\t\t$('.nailthumb-container').nailthumb({width:200,height:200,method:'resize',fitDirection:'top left'});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\thideThumbnail = function() {\r\n");
      out.write("\r\n");
      out.write("\t\t$('.nailthumb-container').html(\"\");\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tdeleteImage = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar arrTargetFileList = new Array();\r\n");
      out.write("\r\n");
      out.write("\t\tg_objManageWaterMarkBackgroundImageDialog.find('.scroll-table input:checkbox[name=\"selectfile\"]').filter(':checked').each( function () {\r\n");
      out.write("\t\t\tarrTargetFileList.push($(this).attr('filename'));\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar objTreeReference = $.jstree._reference(g_objOrganizationTree);\r\n");
      out.write("\t\tvar targetCompanyId = \"\"; \r\n");
      out.write("\t\tif (typeof objTreeReference.get_selected().attr('companyid') != typeof undefined) {\r\n");
      out.write("\t\t\ttargetCompanyId = objTreeReference.get_selected().attr('companyid');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tvar postData = getRequestDeleteWaterMarkBackgroundImagesParam(\r\n");
      out.write("\t\t\t\t'");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\ttargetCompanyId,\r\n");
      out.write("\t\t\t\tarrTargetFileList);\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\tasync: false,\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"워터마크 이미지 삭제\", \"워터마크 이미지 삭제 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tdisplayInfoDialog(\"워터마크 이미지 삭제\", \"정상 처리되었습니다.\", \"정상적으로 워터마크 이미지가 삭제되었습니다.\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tloadWaterMarkBackgroundImageListTable();\r\n");
      out.write("\t\t\t\t\tg_selectedImgPath = \"\";\r\n");
      out.write("\t\t\t\t\twmbackgroundimagefilename = '';\r\n");
      out.write("\t\t\t\t\tg_selectedImgWidth = \"\";\r\n");
      out.write("\t\t\t\t\tg_selectedImgHeight = \"\";\r\n");
      out.write("\t\t\t\t\thideThumbnail();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"워터마크 이미지 삭제\", \"워터마크 이미지 삭제 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("/*\r\n");
      out.write("\tselectAllImages = function() {\r\n");
      out.write("\t\tg_objManageWaterMarkBackgroundImageDialog.find('.scroll-table input:checkbox[name=selectfile]').each( function () {\r\n");
      out.write("\t\t\t$(this).prop('checked', true);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tdeselectAllImages = function() {\r\n");
      out.write("\t\tg_objManageWaterMarkBackgroundImageDialog.find('.scroll-table input:checkbox[name=selectfile]').each( function () {\r\n");
      out.write("\t\t\t$(this).prop('checked', false);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("*/\r\n");
      out.write("\r\n");
      out.write("\tselectImageRow = function(objectTarget) {\r\n");
      out.write("\t\tvar isChecked = objectTarget.find('input:checkbox[name=selectfile]').is(':checked');\r\n");
      out.write("\r\n");
      out.write("\t\t$('input:checkbox[name=selectfile]').each( function () {\r\n");
      out.write("\t\t\t$(this).prop('checked', false);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tif (isChecked == true) {\r\n");
      out.write("\t\t\tobjectTarget.find('input:checkbox[name=selectfile]').prop('checked', false);\r\n");
      out.write("\t\t\tg_selectedImgPath = '';\r\n");
      out.write("\t\t\tg_selectedImgFileName = '';\r\n");
      out.write("\t\t\tg_selectedImgWidth = '';\r\n");
      out.write("\t\t\tg_selectedImgHeight = '';\r\n");
      out.write("\t\t\thideThumbnail();\r\n");
      out.write("\t\t\t$('#btnSelectImage').button('disable');\r\n");
      out.write("\t\t\t$('#btnDeleteImage').button('disable');\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tobjectTarget.find('input:checkbox[name=selectfile]').prop('checked', true);\r\n");
      out.write("\t\t\tg_selectedImgPath = objectTarget.attr('filepath');\r\n");
      out.write("\t\t\tg_selectedImgFileName = objectTarget.attr('filename');\r\n");
      out.write("\t\t\tg_selectedImgWidth = objectTarget.attr('imagewidth');\r\n");
      out.write("\t\t\tg_selectedImgHeight = objectTarget.attr('imageheigth');\r\n");
      out.write("\t\t\tdisplayThumbnail(objectTarget.attr('filepath'));\r\n");
      out.write("\t\t\t$('#btnSelectImage').button('enable');\r\n");
      out.write("\t\t\t$('#btnDeleteImage').button('enable');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tselectImage = function() {\r\n");
      out.write("\t\tif( g_selectedImgPath != '' ) {\r\n");
      out.write("\t\t\tg_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimage\"]').val(g_selectedImgPath);\r\n");
      out.write("\t\t\tg_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimagefilename\"]').val(g_selectedImgFileName);\r\n");
      out.write("\t\t\tg_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimagewidth\"]').val(g_selectedImgWidth);\r\n");
      out.write("\t\t\tg_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimageheight\"]').val(g_selectedImgHeight);\r\n");
      out.write("\t\t\tg_objTabWaterMarkConfig.find('input[name=\"orgwmbackgroundimagewidth\"]').val(g_selectedImgWidth);\r\n");
      out.write("\t\t\tg_objTabWaterMarkConfig.find('input[name=\"orgwmbackgroundimageheight\"]').val(g_selectedImgHeight);\r\n");
      out.write("\t\t\tg_objTabWaterMarkConfig.find('#sizepercentspinner').spinner('value', 100);\r\n");
      out.write("\t\t\tg_objTabWaterMarkConfig.find('#sizepercentspinner').spinner('enable');\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objManageWaterMarkBackgroundImageDialog.dialog('close');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tdeselectImage = function() {\r\n");
      out.write("\t\tg_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimage\"]').val('');\r\n");
      out.write("\t\tg_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimagefilename\"]').val('');\r\n");
      out.write("\t\tg_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimagewidth\"]').val('');\r\n");
      out.write("\t\tg_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimageheight\"]').val('');\r\n");
      out.write("\t\tg_objTabWaterMarkConfig.find('input[name=\"orgwmbackgroundimagewidth\"]').val('');\r\n");
      out.write("\t\tg_objTabWaterMarkConfig.find('input[name=\"orgwmbackgroundimageheight\"]').val('');\r\n");
      out.write("\t\tg_objTabWaterMarkConfig.find('#sizepercentspinner').spinner('value', 100);\r\n");
      out.write("\t\tg_objTabWaterMarkConfig.find('#sizepercentspinner').spinner('disable');\r\n");
      out.write("\r\n");
      out.write("\t\tg_objManageWaterMarkBackgroundImageDialog.dialog('close');\r\n");
      out.write("\t};\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"dialog-managewatermarkbackgroundimage\" title=\"워터마크 이미지 관리\" class=\"dialog-form\">\r\n");
      out.write("\t<div class=\"dialog-contents\">\r\n");
      out.write("\t\t<div class=\"category-sub-title\">워터마크 이미지 목록</div>\r\n");
      out.write("\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t<div style=\"float: left; width: 60%;\">\r\n");
      out.write("\t\t\t\t<div id=\"image-list\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div style=\"margin-left: 65%;\">\r\n");
      out.write("\t\t\t\t<div style=\"text-align: right;\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" id=\"btnUploadFiles\" name=\"btnUploadFiles\" class=\"normal-button\" style=\"width: 100%;\">이미지 업로드</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">워터마크 이미지 상세</div>\r\n");
      out.write("\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t<div style=\"float: left; width: 60%;\">\r\n");
      out.write("\t\t\t\t<div class=\"nailthumb-container\"></div>\r\n");
      out.write("\t\t\t\t<div id=\"image-metrix\" style=\"margin-top: 10px;\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div style=\"margin-left: 65%;\">\r\n");
      out.write("\t\t\t\t<div style=\"text-align: right;\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" id=\"btnSelectImage\" name=\"btnSelectImage\" class=\"normal-button\" style=\"width: 100%;\">이미지 선택</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div style=\"text-align: right; margin-top: 8px;\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" id=\"btnDeselectImage\" name=\"btnDeselectImage\" class=\"normal-button\" style=\"width: 100%;\">이미지 선택 취소</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div style=\"text-align: right; margin-top: 8px;\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" id=\"btnDeleteImage\" name=\"btnDeleteImage\" class=\"normal-button\" style=\"width: 100%;\">이미지 삭제</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar g_objUploadWaterMarkBackgroundImageDialog;\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\t$('button[name=\"btnUpload\"]').button({ icons: {primary: \"ui-icon-arrowstop-1-n\"} });\r\n");
      out.write("\r\n");
      out.write("\t\tg_objUploadWaterMarkBackgroundImageDialog = $('#dialog-uploadwatermarkbackgroundimage');\r\n");
      out.write("\r\n");
      out.write("\t\tg_objUploadWaterMarkBackgroundImageDialog.dialog({\r\n");
      out.write("\t\t\tautoOpen: false,\r\n");
      out.write("\t\t\twidth: 400,\r\n");
      out.write("\t\t\theight: 'auto',\r\n");
      out.write("\t\t\tresizable: false,\r\n");
      out.write("\t\t\tmodal: true,\r\n");
      out.write("\t\t\topen: function() {\r\n");
      out.write("\t\t\t\t$(this).parent().find('.ui-dialog-buttonpane button:contains(\"취소\")').button({\r\n");
      out.write("\t\t\t\t\ticons: { primary: 'ui-icon-circle-close' }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".ui-dialog-titlebar-close\").hide();\r\n");
      out.write("\t\t\t\t$(this).parent().focus();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tbuttons: {\r\n");
      out.write("\t\t\t\t\"취소\": function() {\r\n");
      out.write("\t\t\t\t\t$(this).dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tclose: function() {\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\topenUploadWaterMarkBackgroundImageDialog = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tg_objUploadWaterMarkBackgroundImageDialog.dialog('open');\r\n");
      out.write("\t\tg_objUploadWaterMarkBackgroundImageDialog.parent().find('.ui-dialog-buttonpane button:contains(취소)').show();\r\n");
      out.write("\r\n");
      out.write("\t\tvar objTreeReference = $.jstree._reference(g_objOrganizationTree);\r\n");
      out.write("\t\tvar targetCompanyId = \"\"; \r\n");
      out.write("\t\tif (typeof objTreeReference.get_selected().attr('companyid') != typeof undefined) {\r\n");
      out.write("\t\t\ttargetCompanyId = objTreeReference.get_selected().attr('companyid');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$('#file-upload').fileupload({\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tacceptFileTypes: /^image\\/(bmp)$/i,\r\n");
      out.write("\t\t\tformData: {Type: 'watermark', CompanyId: targetCompanyId},\r\n");
      out.write("\t\t\turl: '/UploadWatermarkImgFile',\r\n");
      out.write("\t\t\tadd: function(e, data) {\r\n");
      out.write("\t\t\t\tvar extension = data.originalFiles[0].name.substr((data.originalFiles[0].name.lastIndexOf('.') +1));\r\n");
      out.write("\t\t\t\tif (extension != \"bmp\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"워터마크 이미지 파일 업로드\", \"워터마크 이미지는 bmp 파일만 지원합니다.\", \"\");\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tdata.submit();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tstart: function(e, data) {\r\n");
      out.write("\t\t\t\tg_objUploadWaterMarkBackgroundImageDialog.parent().find('.ui-dialog-buttonpane button:contains(취소)').prop('disabled', true);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tdone: function(e, data) {\r\n");
      out.write("\t\t\t\tg_objUploadWaterMarkBackgroundImageDialog.parent().find('.ui-dialog-buttonpane button:contains(취소)').prop('disabled', false);\r\n");
      out.write("\t\t\t\tif ($(data.result).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"워터마크 이미지 파일 업로드\", \"워터마크 이미지 파일 업로드 중 오류가 발생하였습니다.\", $(data.result).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tloadWaterMarkBackgroundImageListTable();\r\n");
      out.write("\t\t\t\tsetTimeout(function() { g_objUploadWaterMarkBackgroundImageDialog.dialog('close'); }, 100);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfail: function(e, data) {\r\n");
      out.write("\t\t\t\tif (data.jqXHR.status != 0 && data.jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"워터마크 이미지 파일 업로드\", \"워터마크 이미지 파일 업로드 중 오류가 발생하였습니다.\", data.jqXHR.statusText + \"(\" + data.jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"dialog-uploadwatermarkbackgroundimage\" title=\"워터마크 배경 이미지 업로드\" class=\"dialog-form\">\r\n");
      out.write("\t<div class=\"dialog-contents\">\r\n");
      out.write("\t\t<div class=\"info\">\r\n");
      out.write("\t\t\t<ul class=\"infolist\">\r\n");
      out.write("\t\t\t\t<li>업로드할 워터마크 이미지를 선택해주세요.</li>\r\n");
      out.write("\t\t\t\t<li>워터마크 bmp 파일만 지원합니다.</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div style=\"margin-top: 10px;\">\r\n");
      out.write("\t\t\t<span class=\"btn btn-success fileinput-button\">\r\n");
      out.write("\t\t\t\t<span><button type=\"button\" id=\"btnUpload\" name=\"btnUpload\" class=\"small-button\">파일 업로드</button></span>\r\n");
      out.write("\t\t\t\t<input type=\"file\" id=\"file-upload\" name=\"file-upload\" />\r\n");
      out.write("\t\t\t</span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar g_objReservedWordInfoDialog;\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tg_objReservedWordInfoDialog = $('#dialog-reservedwordinfo');\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\topenReservedWordInfoDialog = function() {\r\n");
      out.write("\t\tg_objReservedWordInfoDialog.dialog({\r\n");
      out.write("\t\t\tautoOpen: false,\r\n");
      out.write("\t\t\twidth: 400,\r\n");
      out.write("\t\t\tmaxWidth: $(document).width(),\r\n");
      out.write("\t\t\theight: 'auto',\r\n");
      out.write("\t\t\tmaxHeight: $(document).height(),\r\n");
      out.write("\t\t\tresizable: false,\r\n");
      out.write("\t\t\t//modal: true,\r\n");
      out.write("\t\t\topen: function() {\r\n");
      out.write("\t\t\t\t//$(\".ui-dialog-titlebar-close\").hide();\r\n");
      out.write("\t\t\t\t$(this).parent().find('.ui-dialog-buttonpane button:contains(\"확인\")').button({\r\n");
      out.write("\t\t\t\t\ticons: { primary: 'ui-icon-circle-check' }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(this).parent().find(\".ui-dialog-titlebar-close\").hide();\r\n");
      out.write("\t\t\t\t$(this).parent().focus();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tbuttons: {\r\n");
      out.write("\t\t\t\t\"확인\": function() {\r\n");
      out.write("\t\t\t\t\t$(this).dialog('close');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tg_objReservedWordInfoDialog.dialog('open');\r\n");
      out.write("\t};\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"dialog-reservedwordinfo\" title=\"예약어 정보\" class=\"dialog-form\">\r\n");
      out.write("\t<div class=\"dialog-contents\">\r\n");
      out.write("\t\t<div class=\"info\">\r\n");
      out.write("\t\t\t<div style=\"margin-bottom: 20px;\">아래의 예약어를 사용할 경우, 해당 예약어는 자동으로 해당 값으로 변환되며, 그 외의 문자열은 그대로 출력됩니다.</div>\r\n");
      out.write("\t\t\t<ul class=\"infolist\">\r\n");
      out.write("\t\t\t\t<li>[DEPTNAME]: 부서 이름</li>\r\n");
      out.write("\t\t\t\t<li>[USERSERIAL]: 사용자 ID</li>\r\n");
      out.write("\t\t\t\t<li>[USERNAME]: 사용자 이름</li>\r\n");
      out.write("\t\t\t\t<li>[COMNAME]: 컴퓨터 이름</li>\r\n");
      out.write("\t\t\t\t<li>[IP]: 출력하는 컴퓨터의 IP주소</li>\r\n");
      out.write("\t\t\t\t<li>[PRINTTIME]: 출력 시간</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t#tab-networkservicecontrolprogram > .ui-widget-header { \r\n");
      out.write("\t\tborder: none;\r\n");
      out.write("\t\tbackground: #aaa url(/js/jquery-ui-1.10.3/css/custom-theme/images/ui-bg_highlight-soft_75_e0e0e0_1x100.png) 50% 50% repeat-x;\r\n");
      out.write("\t\tborder-top-left-radius: 0px;\r\n");
      out.write("\t\tborder-top-right-radius: 0px;\r\n");
      out.write("\t\tborder-bottom-left-radius: 0px;\r\n");
      out.write("\t\tborder-bottom-right-radius: 0px;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("<!--\r\n");
      out.write("\tvar g_htOptionTypeList = new Hashtable();\r\n");
      out.write("\tvar g_htJobProcessingTypeList = new Hashtable();\r\n");
      out.write("\tvar g_htControlTypeList = new Hashtable();\r\n");
      out.write("\tvar g_htPrintModeList = new Hashtable();\r\n");
      out.write("\tvar g_htPrintLimitTypeList = new Hashtable();\r\n");
      out.write("\tvar g_htPrintMaskingTypeList = new Hashtable();\r\n");
      out.write("\tvar g_htFontStyleList = new Hashtable();\r\n");
      out.write("\tvar g_htFontNameList = new Hashtable();\r\n");
      out.write("\r\n");
      out.write("\tvar g_objOrganizationTree;\r\n");
      out.write("\r\n");
      out.write("\tvar g_objTabDefaultConfig;\r\n");
      out.write("\tvar g_objTabPatternConfig;\r\n");
      out.write("\tvar g_objTabPrintControlConfig;\r\n");
      out.write("\tvar g_objTabWaterMarkConfig;\r\n");
      out.write("\tvar g_objTabMediaControlConfig;\r\n");
      out.write("\tvar g_objTabNetworkServiceControlConfig;\r\n");
      out.write("\tvar g_objTabSystemControlConfig;\r\n");
      out.write("\tvar g_objTabWorkControlConfig;\r\n");
      out.write("\r\n");
      out.write("\tvar g_objTabEmail;\r\n");
      out.write("\tvar g_objTabFtp;\r\n");
      out.write("\tvar g_objTabP2p;\r\n");
      out.write("\tvar g_objTabMessenger;\r\n");
      out.write("\tvar g_objTabCapture;\r\n");
      out.write("\tvar g_objTabEtc;\r\n");
      out.write("\r\n");
      out.write("\tvar TAB_EMAIL = 0;\r\n");
      out.write("\tvar TAB_FTP = 1;\r\n");
      out.write("\tvar TAB_P2P = 2;\r\n");
      out.write("\tvar TAB_MESSENGER = 3;\r\n");
      out.write("\tvar TAB_CAPTURE = 4;\r\n");
      out.write("\tvar TAB_ETC = 5;\r\n");
      out.write("\r\n");
      out.write("\tvar g_selectedConfigTabIndex = TAB_DEFAULT_CONFIG;\r\n");
      out.write("\tvar g_selectedProgramTypeTabIndex = TAB_EMAIL;\r\n");
      out.write("\r\n");
      out.write("\tvar g_oldSelectedTreeNode = null;\r\n");
      out.write("\tvar g_selectedTreeNode = null;\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\r\n");
      out.write("\t\tg_objOrganizationTree = $('#organization-tree');\r\n");
      out.write("\r\n");
      out.write("\t\tg_objTabDefaultConfig = $('#tab-defaultconfig');\r\n");
      out.write("\t\tg_objTabPatternConfig = $('#tab-patternconfig');\r\n");
      out.write("\t\tg_objTabPrintControlConfig = $('#tab-printcontrolconfig');\r\n");
      out.write("\t\tg_objTabWaterMarkConfig = $('#tab-watermarkconfig');\r\n");
      out.write("\t\tg_objTabMediaControlConfig = $('#tab-mediacontrolconfig');\r\n");
      out.write("\t\tg_objTabNetworkServiceControlConfig = $('#tab-networkservicecontrolconfig');\r\n");
      out.write("\t\tg_objTabSystemControlConfig = $('#tab-systemcontrolconfig');\r\n");
      out.write("\t\tg_objTabWorkControlConfig = $('#tab-workcontrolconfig');\r\n");
      out.write("\r\n");
      out.write("\t\tg_objTabEmail = g_objTabNetworkServiceControlConfig.find('#tab-email');\r\n");
      out.write("\t\tg_objTabFtp = g_objTabNetworkServiceControlConfig.find('#tab-ftp');\r\n");
      out.write("\t\tg_objTabP2p = g_objTabNetworkServiceControlConfig.find('#tab-p2p');\r\n");
      out.write("\t\tg_objTabMessenger = g_objTabNetworkServiceControlConfig.find('#tab-messenger');\r\n");
      out.write("\t\tg_objTabCapture = g_objTabNetworkServiceControlConfig.find('#tab-capture');\r\n");
      out.write("\t\tg_objTabEtc = g_objTabNetworkServiceControlConfig.find('#tab-etc');\r\n");
      out.write("\r\n");
      out.write("\t\t$( document).tooltip({\r\n");
      out.write("\t\t\tcontent: function() {\r\n");
      out.write("\t\t\t\treturn $(this).attr('title');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$(\".job-processing-active-count-spinner\").spinner({\r\n");
      out.write("\t\t\tmin: 1,\r\n");
      out.write("\t\t\tmax: 50,\r\n");
      out.write("\t\t\tstep: 1,\r\n");
      out.write("\t\t\tnumberFormat: \"n\",\r\n");
      out.write("\t\t\tchange: function( event, ui) {\r\n");
      out.write("\t\t\t\tvar min = $(this).spinner('option', 'min');\r\n");
      out.write("\t\t\t\tvar max = $(this).spinner('option', 'max');\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (isNaN($(this).val())) {\r\n");
      out.write("\t\t\t\t\t$(this).spinner(\"value\", min);\r\n");
      out.write("\t\t\t\t} else if ($(this).val() > max) {\r\n");
      out.write("\t\t\t\t\t$(this).spinner(\"value\", max);\r\n");
      out.write("\t\t\t\t} else if ($(this).val() < min) {\r\n");
      out.write("\t\t\t\t\t$(this).spinner(\"value\", min);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t$(this).spinner(\"value\", parseInt($(this).val()));\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#sizepercentspinner\").spinner({\r\n");
      out.write("\t\t\tdisabled: true,\r\n");
      out.write("\t\t\tmin: 50,\r\n");
      out.write("\t\t\tmax: 500,\r\n");
      out.write("\t\t\tstep: 5,\r\n");
      out.write("\t\t\tnumberFormat: \"C\",\r\n");
      out.write("\t\t\tchange: function( event, ui) {\r\n");
      out.write("\t\t\t\tvar spinnerValue = $(this).spinner('value');\r\n");
      out.write("\t\t\t\tvar orgWidth = g_objTabWaterMarkConfig.find('input[name=\"orgwmbackgroundimagewidth\"]').val();\r\n");
      out.write("\t\t\t\tvar orgHeight = g_objTabWaterMarkConfig.find('input[name=\"orgwmbackgroundimageheight\"]').val();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (spinnerValue == 100) {\r\n");
      out.write("\t\t\t\t\tg_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimagewidth\"]').val(orgWidth);\r\n");
      out.write("\t\t\t\t\tg_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimageheight\"]').val(orgHeight);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tg_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimagewidth\"]').val(Math.floor(orgWidth*spinnerValue/100));\r\n");
      out.write("\t\t\t\t\tg_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimageheight\"]').val(Math.floor(orgHeight*spinnerValue/100));\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$(\".password-spinner\").spinner({\r\n");
      out.write("\t\t\tmin: 0,\r\n");
      out.write("\t\t\tmax: 50,\r\n");
      out.write("\t\t\tstep: 1,\r\n");
      out.write("\t\t\tnumberFormat: \"n\",\r\n");
      out.write("\t\t\tchange: function( event, ui) {\r\n");
      out.write("\t\t\t\tvar min = $(this).spinner('option', 'min');\r\n");
      out.write("\t\t\t\tvar max = $(this).spinner('option', 'max');\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (isNaN($(this).val())) {\r\n");
      out.write("\t\t\t\t\t$(this).spinner(\"value\", min);\r\n");
      out.write("\t\t\t\t} else if ($(this).val() > max) {\r\n");
      out.write("\t\t\t\t\t$(this).spinner(\"value\", max);\r\n");
      out.write("\t\t\t\t} else if ($(this).val() < min) {\r\n");
      out.write("\t\t\t\t\t$(this).spinner(\"value\", min);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t$(this).spinner(\"value\", parseInt($(this).val()));\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$('button').button();\r\n");
      out.write("\t\t$('button[name=\"btnResetConfig\"]').button({ icons: {primary: \"ui-icon-arrowreturnthick-1-w\"} });\r\n");
      out.write("\t\t$('button[name=\"btnSaveConfig\"]').button({ icons: {primary: \"ui-icon-disk\"} });\r\n");
      out.write("\t\t$('button[name=\"btnDeleteExclusionSearchFolder\"]').button({ icons: {primary: \"ui-icon-circle-minus\"} });\r\n");
      out.write("\t\t$('button[name=\"btnAddExclusionSearchFolder\"]').button({ icons: {primary: \"ui-icon-circle-plus\"} });\r\n");
      out.write("\t\t$('button[name=\"btnDeleteProgram\"]').button({ icons: {primary: \"ui-icon-circle-minus\"} });\r\n");
      out.write("\t\t$('button[name=\"btnSelectProgram\"]').button({ icons: {primary: \"ui-icon-check\"} });\r\n");
      out.write("\t\t$('button[name=\"btnAddProgram\"]').button({ icons: {primary: \"ui-icon-circle-plus\"} });\r\n");
      out.write("\t\t$('button[name=\"btnDeleteBlockUrl\"]').button({ icons: {primary: \"ui-icon-circle-minus\"} });\r\n");
      out.write("\t\t$('button[name=\"btnAddBlockUrl\"]').button({ icons: {primary: \"ui-icon-circle-plus\"} });\r\n");
      out.write("\r\n");
      out.write("\t\t$('#dialog:ui-dialog').dialog('destroy');\r\n");
      out.write("\r\n");
 if ("darkness".equals((String)session.getAttribute("THEMENAME"))) { 
      out.write("\r\n");
      out.write("\t\t$('.inner-center .ui-layout-content').mCustomScrollbar({ theme:\"light-2\", scrollButtons:{ enable:true }, scrollInertia:0, advanced:{ autoScrollOnFocus: false, updateOnContentResize: true, updateOnBrowserResize: true } });\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t\t$('.inner-center .ui-layout-content').mCustomScrollbar({ theme:\"dark-2\", scrollButtons:{ enable:true }, scrollInertia:0, advanced:{ autoScrollOnFocus: false, updateOnContentResize: true, updateOnBrowserResize: true } });\r\n");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\tg_htOptionTypeList = loadTypeList(\"OPTION_TYPE\");\r\n");
      out.write("\t\tif (g_htOptionTypeList.isEmpty()) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"옵션 유형 조회\", \"옵션 유형 조회 중 오류가 발생하였습니다.\", \"자세한 사항은 시스템 관리자에게 문의해 주십시오.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_htJobProcessingTypeList = loadTypeList(\"JOB_PROCESSING_TYPE\");\r\n");
      out.write("\t\tif (g_htJobProcessingTypeList.isEmpty()) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"검출파일 처리 유형 조회\", \"검출파일 처리 유형 조회 중 오류가 발생하였습니다.\", \"자세한 사항은 시스템 관리자에게 문의해 주십시오.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_htControlTypeList = loadTypeList(\"CONTROL_TYPE\");\r\n");
      out.write("\t\tif (g_htControlTypeList.isEmpty()) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"제어 유형 조회\", \"제어 유형 조회 중 오류가 발생하였습니다.\", \"자세한 사항은 시스템 관리자에게 문의해 주십시오.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_htPrintModeList = loadTypeList(\"PRINT_MODE\");\r\n");
      out.write("\t\tif (g_htPrintModeList.isEmpty()) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"출력 모드 유형 조회\", \"출력 모드 유형 조회 중 오류가 발생하였습니다.\", \"자세한 사항은 시스템 관리자에게 문의해 주십시오.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_htPrintLimitTypeList = loadTypeList(\"PRINT_LIMIT_TYPE\");\r\n");
      out.write("\t\tif (g_htPrintLimitTypeList.isEmpty()) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"출력 제한 유형 조회\", \"출력 제한 유형 조회 중 오류가 발생하였습니다.\", \"자세한 사항은 시스템 관리자에게 문의해 주십시오.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_htPrintMaskingTypeList = loadTypeList(\"PRINT_MASKING_TYPE\");\r\n");
      out.write("\t\tif (g_htPrintMaskingTypeList.isEmpty()) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"출력 마스킹 유형 조회\", \"출력 마스킹 유형 조회 중 오류가 발생하였습니다.\", \"자세한 사항은 시스템 관리자에게 문의해 주십시오.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_htFontStyleList = loadTypeList(\"FONT_STYLE\");\r\n");
      out.write("\t\tif (g_htFontStyleList.isEmpty()) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"출력 모드 유형 조회\", \"출력 모드 유형 조회 중 오류가 발생하였습니다.\", \"자세한 사항은 시스템 관리자에게 문의해 주십시오.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tg_htFontNameList = loadFontList();\r\n");
      out.write("\r\n");
      out.write("\t\tinitControl();\r\n");
      out.write("\r\n");
      out.write("\t\tinnerDefaultLayout.show(\"west\");\r\n");
      out.write("\t\tloadOrganizationTreeView();\r\n");
      out.write("\r\n");
      out.write("\t\t$('button').click( function () {\r\n");
      out.write("\t\t\tif ($(this).attr('id') == 'btnSaveConfig') {\r\n");
      out.write("\t\t\t\tif (g_objOrganizationTree.find(\".jstree-checked\").length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"설정 저장 대상 오류\", $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 정보를 저장할 대상을 선택해 주세요.\", '');\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\topenSaveConfigConfirmDialog($('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 저장\", \"설정된 값으로 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 정보를 저장하시겠습니까?\");\r\n");
      out.write("\t\t\t} else if ($(this).attr('id') == 'btnReservedWordInfo') {\r\n");
      out.write("\t\t\t\topenReservedWordInfoDialog();\r\n");
      out.write("\t\t\t} else if ($(this).attr('id') == 'btnManageBackgroundImage') {\r\n");
      out.write("\t\t\t\topenManageWaterMarkBackgroundImageDialog();\r\n");
      out.write("\t\t\t} else if ($(this).attr('id') == 'btnAddExclusionSearchFolder') {\r\n");
      out.write("\t\t\t\taddExclusionSearchFolderToList();\r\n");
      out.write("\t\t\t} else if ($(this).attr('id') == 'btnDeleteExclusionSearchFolder') {\r\n");
      out.write("\t\t\t\tdeleteExclusionSearchFolderFromList();\r\n");
      out.write("\t\t\t} else if ($(this).attr('id') == 'btnSelectProgram') {\r\n");
      out.write("\t\t\t\tselectProgramToList();\r\n");
      out.write("\t\t\t} else if ($(this).attr('id') == 'btnDeleteProgram') {\r\n");
      out.write("\t\t\t\tdeleteProgramFromList();\r\n");
      out.write("\t\t\t} else if ($(this).attr('id') == 'btnAddProgram') {\r\n");
      out.write("\t\t\t\taddProgramToList();\r\n");
      out.write("\t\t\t} else if ($(this).attr('id') == 'btnAddBlockUrl') {\r\n");
      out.write("\t\t\t\taddBlockUrlToList();\r\n");
      out.write("\t\t\t} else if ($(this).attr('id') == 'btnDeleteBlockUrl') {\r\n");
      out.write("\t\t\t\tdeleteBlockUrlFromList();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$('input[type=\"radio\"]').change( function(event) {\r\n");
      out.write("\t\t\tif ($(this).filter(':checked').val() == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t$(this).closest('.field-line').siblings().each( function() {\r\n");
      out.write("\t\t\t\t\t$(this).show();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$(this).closest('.field-line').siblings().each( function() {\r\n");
      out.write("\t\t\t\t\t$(this).hide();\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tg_objTabDefaultConfig.find('select[name=\"jobprocessingtype\"]').change( function() {\r\n");
      out.write("\t\t\tif ($(this).val() == '");
      out.print(JobProcessingType.JOB_PROCESSING_TYPE_DELETE);
      out.write("') {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog('검출파일 처리 유형 설정 확인', '검출파일 처리 유형을 \"삭제\"로 설정할 경우, 개인정보가 검출된 파일은 삭제되어 복구할 수 없습니다.', '');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$('select[name=\"programlist\"]').click( function() {\r\n");
      out.write("\t\t\tif ($(this).children('option').filter(\":selected\").length == 1) {\r\n");
      out.write("\t\t\t\t$(this).closest('.tab-contents').find('#newprogramname').val($(this).children('option').filter(\":selected\").text());\r\n");
      out.write("\t\t\t\t$(this).closest('.tab-contents').find('#newfilename').val($(this).children('option').filter(\":selected\").val());\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$(document).on(\"keyup\", \"input.numeric\", function() { $(this).val($(this).val().replace(/[^\\d]/,'')); });\r\n");
      out.write("\t\t$(document).on(\"mouseenter\", \".list-table th\", function() { if (typeof $(this).attr('id') != typeof undefined) { if (!$(this).hasClass('ui-state-hover')) { $(this).addClass('ui-state-hover'); } $(this).css({'cursor': 'pointer'}); } else { $(this).css({'cursor': 'default'}); }; });\r\n");
      out.write("\t\t$(document).on(\"mouseleave\", \".list-table th\", function() { if ($(this).hasClass('ui-state-hover')) { $(this).removeClass('ui-state-hover'); }; $(this).css({'cursor': 'default'}); });\r\n");
      out.write("\t\t$(document).on(\"mouseenter\", \".list-table tbody tr\", function() { $(this).addClass('list_text_over'); });\r\n");
      out.write("\t\t$(document).on(\"mouseleave\", \".list-table tbody tr\", function() { $(this).removeClass('list_text_over'); });\r\n");
      out.write("\t\t$(document).on(\"click\", \".list-table thead tr th:first-child\", function (e) { if (!$(e.target).is(':checkbox')) { $(this).find('input:checkbox').prop('checked', !$(this).find('input:checkbox').is(':checked')); } var checkState = $(this).find('input:checkbox').is(':checked'); $(this).closest('table').find('tbody input:checkbox').each( function () { $(this).prop('checked', checkState); }); });\t\r\n");
      out.write("\t\t$(document).on(\"click\", \".list-table tbody tr\", function(e) { if (!$(e.target).is(':checkbox')) { $(this).find('input:checkbox').prop('checked', !$(this).find('input:checkbox').is(':checked')); } if ($(this).find('input:checkbox').is(':checked')) { if ($(this).closest('tbody').find('tr').length == $(this).closest('tbody').find('input:checkbox').filter(':checked').length) { $(this).closest('table').find('thead input:checkbox').prop('checked', true); } } else { $(this).closest('table').find('thead input:checkbox').prop('checked', false); }; });\r\n");
      out.write("\t\t$(document).on(\"click\", \"#tab-networkservicecontrolconfig .list-table tbody tr td:nth-child(4)\", function (e) { e.stopPropagation(); });\t\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tloadFontList = function(companyId) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar g_htList = new Hashtable();\r\n");
      out.write("\t\tvar postData = getRequestFontListParam();\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\tasync: false,\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"폰트 리스트 조회\", \"폰트 리스트 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (!g_htList.isEmpty()) g_htList.clear();\r\n");
      out.write("\t\t\t\t\t$(data).find('font').each( function() {\r\n");
      out.write("\t\t\t\t\t\tg_htList.put($(this).find('name').text(), $(this).find('name').text());\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"폰트 리스트 조회\", \"폰트 리스트 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\treturn g_htList;\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tloadNetworkServiceControlProgram = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar postData = getRequestNetworkServiceControlProgramListParam('',\r\n");
      out.write("\t\t\t\t'',\r\n");
      out.write("\t\t\t\t'PROGRAMTYPE, PROGRAMNAME',\r\n");
      out.write("\t\t\t\t'ASC',\r\n");
      out.write("\t\t\t\t'',\r\n");
      out.write("\t\t\t\t'');\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\tasync: false,\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 프로그램 리스트 조회\", \"네트워크 서비스 제어 프로그램 리스트 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tg_objTabEmail.find('#programlist').empty();\r\n");
      out.write("\t\t\t\tg_objTabFtp.find('#programlist').empty();\r\n");
      out.write("\t\t\t\tg_objTabP2p.find('#programlist').empty();\r\n");
      out.write("\t\t\t\tg_objTabMessenger.find('#programlist').empty();\r\n");
      out.write("\t\t\t\tg_objTabCapture.find('#programlist').empty();\r\n");
      out.write("\t\t\t\tg_objTabEtc.find('#programlist').empty();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$(data).find('record').each( function() {\r\n");
      out.write("\t\t\t\t\tvar programName = $(this).find('programname').text();\r\n");
      out.write("\t\t\t\t\tvar fileName = $(this).find('filename').text();\r\n");
      out.write("\t\t\t\t\tvar programType = $(this).find('programtype').text();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar objOption = new Option(programName, fileName);\r\n");
      out.write("\t\t\t\t\t$(objOption).html(programName);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (programType == \"");
      out.print(ProgramType.PROGRAM_TYPE_EMAIL);
      out.write("\") {\r\n");
      out.write("\t\t\t\t\t\tg_objTabEmail.find('#programlist').append(objOption);\r\n");
      out.write("\t\t\t\t\t} else if (programType == \"");
      out.print(ProgramType.PROGRAM_TYPE_FTP);
      out.write("\") {\r\n");
      out.write("\t\t\t\t\t\tg_objTabFtp.find('#programlist').append(objOption);\r\n");
      out.write("\t\t\t\t\t} else if (programType == \"");
      out.print(ProgramType.PROGRAM_TYPE_P2P);
      out.write("\") {\r\n");
      out.write("\t\t\t\t\t\tg_objTabP2p.find('#programlist').append(objOption);\r\n");
      out.write("\t\t\t\t\t} else if (programType == \"");
      out.print(ProgramType.PROGRAM_TYPE_MESSENGER);
      out.write("\") {\r\n");
      out.write("\t\t\t\t\t\tg_objTabMessenger.find('#programlist').append(objOption);\r\n");
      out.write("\t\t\t\t\t} else if (programType == \"");
      out.print(ProgramType.PROGRAM_TYPE_CAPTURE);
      out.write("\") {\r\n");
      out.write("\t\t\t\t\t\tg_objTabCapture.find('#programlist').append(objOption);\r\n");
      out.write("\t\t\t\t\t} else if (programType == \"");
      out.print(ProgramType.PROGRAM_TYPE_ETC);
      out.write("\") {\r\n");
      out.write("\t\t\t\t\t\tg_objTabEtc.find('#programlist').append(objOption);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$('#tab-networkservicecontrolprogram').tabs({\r\n");
      out.write("\t\t\t\t\thide: {\r\n");
      out.write("\t\t\t\t\t\tduration: 200\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tactivate: function(event, ui) {\r\n");
      out.write("\t\t\t\t\t\tg_selectedProgramTypeTabIndex = ui.newTab.index();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 프로그램 리스트 조회\", \"네트워크 서비스 제어 프로그램 리스트 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tloadCompanyNode = function(companyId) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar nodeData = \"\"; \r\n");
      out.write("\t\tvar postData = getRequestCompanyTreeNodesParam('");
      out.print(TreeViewType.TREE_VIEW_TYPE_ORGANIZATION);
      out.write("', '', companyId);\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\tasync: false,\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"사업장 노드 조회\", \"사업장 노드 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tvar startTag = \"<root>\";\r\n");
      out.write("\t\t\t\t\tvar endTag = \"</root>\";\r\n");
      out.write("\t\t\t\t\tnodeData = new XMLSerializer().serializeToString(data);\r\n");
      out.write("\t\t\t\t\tnodeData = nodeData.substr(nodeData.indexOf(startTag), nodeData.lastIndexOf(endTag)-nodeData.indexOf(startTag)+endTag.length);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"사업장 노드 조회\", \"사업장 노드 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\treturn nodeData;\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tloadOrganizationTreeView = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar xmlTreeData = '';\r\n");
 if (AdminType.ADMIN_TYPE_SITE_ADMIN.equals((String)session.getAttribute("ADMINTYPE"))) { 
      out.write("\r\n");
      out.write("\t\txmlTreeData += '<root>';\r\n");
      out.write("\t\txmlTreeData += '<item id=\"root\" node_type=\"root\" state=\"closed\">';\r\n");
      out.write("\t\txmlTreeData += '<content><name><![CDATA[전체 사업장]]></name></content>';\r\n");
      out.write("\t\txmlTreeData += '</item>';\r\n");
      out.write("\t\txmlTreeData += '</root>';\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t\txmlTreeData = loadCompanyNode('");
      out.print((String)session.getAttribute("COMPANYID"));
      out.write("');\r\n");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\tg_objOrganizationTree.jstree({\r\n");
      out.write("\t\t\t\"xml_data\" : {\r\n");
      out.write("\t\t\t\t\"data\" : xmlTreeData,\r\n");
      out.write("\t\t\t\t\"ajax\": {\r\n");
      out.write("\t\t\t\t\t\"type\": 'POST',\r\n");
      out.write("\t\t\t\t\t\"url\": \"/CommandService\",\r\n");
      out.write("\t\t\t\t\t\"data\": function (node) {\r\n");
      out.write("\t\t\t\t\t\tif (!$.isEmptyObject(node)) {\r\n");
      out.write("\t\t\t\t\t\t\tvar includeUserNodes = '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("';\r\n");
      out.write("\t\t\t\t\t\t\tif (node.attr(\"node_type\") == 'company_category') {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar categoryCode = node.children('a').text().trim();\r\n");
      out.write("\t\t\t\t\t\t\t\tvar postData = getRequestCompanyTreeNodesParam('");
      out.print(TreeViewType.TREE_VIEW_TYPE_ORGANIZATION);
      out.write("', categoryCode, '');\r\n");
      out.write("\t\t\t\t\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsendmsg : postData\r\n");
      out.write("\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t} else if (node.attr(\"node_type\") == 'company') {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar postData = getRequestDeptTreeNodesParam(node.attr('companyid'), '', includeUserNodes);\r\n");
      out.write("\t\t\t\t\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsendmsg : postData\r\n");
      out.write("\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t} else if (node.attr(\"node_type\") == 'dept') {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar postData = getRequestDeptTreeNodesParam(node.attr('companyid'), node.attr('deptcode'), includeUserNodes);\r\n");
      out.write("\t\t\t\t\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsendmsg : postData\r\n");
      out.write("\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
 if (AdminType.ADMIN_TYPE_SITE_ADMIN.equals((String)session.getAttribute("ADMINTYPE"))) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar postData = getRequestCompanyTreeNodesParam('");
      out.print(TreeViewType.TREE_VIEW_TYPE_ORGANIZATION);
      out.write("', '', '');\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar postData = getRequestDeptTreeNodesParam('");
      out.print((String)session.getAttribute("COMPANYID"));
      out.write("', '', includeUserNodes);\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsendmsg : postData\r\n");
      out.write("\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\"dataType\": \"xml\",\r\n");
      out.write("\t\t\t\t\t\"cache\": false,\r\n");
      out.write("\t\t\t\t\t\"async\": false,\r\n");
      out.write("\t\t\t\t\t\"success\": function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\t\t\tdisplayAlertDialog(\"조직 구성도 조회\", \"조직 구성도 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tvar startTag = \"<root>\";\r\n");
      out.write("\t\t\t\t\t\t\tvar endTag = \"</root>\";\r\n");
      out.write("\t\t\t\t\t\t\treturn data.substr(data.indexOf(startTag), data.lastIndexOf(endTag)-data.indexOf(startTag)+endTag.length);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\t\t\tdisplayAlertDialog(\"조직 구성도 조회\", \"조직 구성도 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t\"themes\": {\r\n");
      out.write("\t\t\t\t\"theme\": \"");
      out.print((String)session.getAttribute("THEMENAME"));
      out.write("\",\r\n");
      out.write("\t\t\t\t\"dots\": true,\r\n");
      out.write("\t\t\t\t\"icons\": false\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t\"ui\": {\r\n");
      out.write("\t\t\t\t\"select_limit\": 1,\r\n");
      out.write("\t\t\t\t\"select_multiple_modifier\": \"none\"\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t\"types\": {\r\n");
      out.write("\t\t\t\t\"AM\": {\r\n");
      out.write("\t\t\t\t\t\"hover_node\": false,\r\n");
      out.write("\t\t\t\t\t\"select_node\": false\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\"AF\": {\r\n");
      out.write("\t\t\t\t\t\"hover_node\": false,\r\n");
      out.write("\t\t\t\t\t\"select_node\": false\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\"Role\": {\r\n");
      out.write("\t\t\t\t// i dont know if possible to be done here? add class?\r\n");
      out.write("\t\t\t\t// this.css(\"color\", \"red\")\r\n");
      out.write("\t\t\t\t//{ font-weight:bold}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t\"contextmenu\" : {\r\n");
      out.write("\t\t\t\t\"items\" : null\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t\"plugins\" : [ \"themes\", \"xml_data\", \"ui\", \"Select\", \"types\", \"crrm\", \"contextmenu\", \"checkbox\" ]\r\n");
      out.write("\t\t}).bind('loaded.jstree', function (event, data) {\r\n");
 if ("darkness".equals((String)session.getAttribute("THEMENAME"))) { 
      out.write("\r\n");
      out.write("\t\t\tdata.inst.get_container().mCustomScrollbar({ theme:\"light-2\", scrollButtons:{ enable:true }, scrollInertia:0, advanced:{ autoScrollOnFocus: false, updateOnContentResize: true, updateOnBrowserResize: true } });\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t\t\tdata.inst.get_container().mCustomScrollbar({ theme:\"dark-2\", scrollButtons:{ enable:true }, scrollInertia:0, advanced:{ autoScrollOnFocus: false, updateOnContentResize: true, updateOnBrowserResize: true } });\r\n");
 } 
      out.write('\r');
      out.write('\n');
 if (AdminType.ADMIN_TYPE_SITE_ADMIN.equals((String)session.getAttribute("ADMINTYPE"))) { 
      out.write("\r\n");
      out.write("\t\t\tdata.inst._get_node('ul > li:first').children('a').first().find('.jstree-checkbox').hide();\r\n");
 } 
      out.write("\r\n");
      out.write("\t\t\tsetTimeout(function() { data.inst.select_node('ul > li:first'); }, 500);\r\n");
      out.write("\t\t}).bind('load_node.jstree', function (event, data) {\r\n");
      out.write("\t\t\tdata.inst._get_children(data.rslt.obj).each( function() {\r\n");
      out.write("\t\t\t\tif (($(this).attr('node_type') == \"company\") || ($(this).attr('node_type') == \"user\")) {\r\n");
      out.write("\t\t\t\t\tif ($(this).attr('servicestate') == ");
      out.print(ServiceState.SERVICE_STATE_STOP);
      out.write(") {\r\n");
      out.write("\t\t\t\t\t\tif (!$(this).find('a').first().hasClass('state-abnormal')) {\r\n");
      out.write("\t\t\t\t\t\t\t$(this).find('a').first().addClass('state-abnormal');\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tif (!$(this).find('a').first().hasClass('state-abnormal')) {\r\n");
      out.write("\t\t\t\t\t\t\t$(this).find('a').first().removeClass('state-abnormal');\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}).bind('open_node.jstree', function (event, data) {\r\n");
      out.write("\t\t\tdata.inst._get_children(data.rslt.obj).each( function() {\r\n");
      out.write("\t\t\t\tif ($(this).attr('node_type') == \"company_category\") {\r\n");
      out.write("\t\t\t\t\t$(this).children('a').first().find('.jstree-checkbox').hide();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (data.inst.is_checked($(this))) {\r\n");
      out.write("\t\t\t\t\t\tif (!data.inst.is_open($(this))) {\r\n");
      out.write("\t\t\t\t\t\t\tdata.inst.open_node($(this));\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}).bind('check_node.jstree', function (event, data) {\r\n");
      out.write("\t\t\tif (!data.inst.is_open(data.rslt.obj)) {\r\n");
      out.write("\t\t\t\tdata.inst.open_node(data.rslt.obj);\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tdata.rslt.obj.find(\"li > a\").each( function() {\r\n");
      out.write("\t\t\t\t//data.inst._get_children(data.rslt.obj).each( function() {\r\n");
      out.write("\t\t\t\t\tif (!data.inst.is_open($(this))) {\r\n");
      out.write("\t\t\t\t\t\tdata.inst.open_node($(this));\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\texpandChilds($(this));\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}).bind('select_node.jstree', function (event, data) {\r\n");
      out.write("\t\t\tg_oldSelectedTreeNode = g_selectedTreeNode;\r\n");
      out.write("\t\t\tg_selectedTreeNode = data.rslt.obj;\r\n");
      out.write("\t\t\tif (!data.inst.is_open(data.rslt.obj)) {\r\n");
      out.write("\t\t\t\tdata.inst.open_node(data.rslt.obj);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("// \t\t\tif (typeof data.rslt.obj.attr('companyid') != typeof undefined) {\r\n");
      out.write("// \t\t\t\tif (!data.inst.is_checked(data.rslt.obj)) {\r\n");
      out.write("// \t\t\t\t\tdata.inst.check_node(data.rslt.obj);\r\n");
      out.write("// \t\t\t\t}\r\n");
      out.write("// \t\t\t}\r\n");
      out.write("\t\t\tif (!data.rslt.obj.is(g_oldSelectedTreeNode)) {\r\n");
      out.write("\t\t\t\tif (data.rslt.obj.attr('node_type') != \"company_category\") {\r\n");
      out.write("\t\t\t\t\tif (data.rslt.obj.attr('node_type') == 'company') {\r\n");
      out.write("\t\t\t\t\t\t$('.inner-center .pane-header').text('사업장 설정 정보 - [' + data.inst.get_text(data.rslt.obj) + ']');\r\n");
      out.write("\t\t\t\t\t} else if (data.rslt.obj.attr('node_type') == 'dept') {\r\n");
      out.write("\t\t\t\t\t\t$('.inner-center .pane-header').text('부서 설정 정보 - [' + data.inst.get_text(data.rslt.obj) + ']');\r\n");
      out.write("\t\t\t\t\t} else if (data.rslt.obj.attr(\"node_type\") == \"user\") {\r\n");
      out.write("\t\t\t\t\t\t$('.inner-center .pane-header').text('사용자 설정 정보 - [' + data.inst.get_text(data.rslt.obj) + ']');\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t$('.inner-center .pane-header').text('기본 설정 정보');\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tloadConfig();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}).bind('deselect_node.jstree', function (event, data) {\r\n");
      out.write("\t\t\tg_selectedTreeNode = null;\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tfunction expandChilds(node) {\r\n");
      out.write("\t\tvar objTreeReference = $.jstree._reference(g_objOrganizationTree);\r\n");
      out.write("\t\tobjTreeReference._get_children(node).each( function() {\r\n");
      out.write("\t\t\tif (objTreeReference.is_checked($(this))) {\r\n");
      out.write("\t\t\t\tif (!objTreeReference.is_open($(this))) {\r\n");
      out.write("\t\t\t\t\tobjTreeReference.open_node($(this));\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tfunction loadConfig() {\r\n");
      out.write("\t\tif (g_selectedConfigTabIndex == TAB_DEFAULT_CONFIG) {\r\n");
      out.write("\t\t\tloadDefaultConfigInfo();\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_PATTERN_CONFIG) {\r\n");
      out.write("\t\t\tloadPatternConfigInfo();\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_PRINT_CONTROL_CONFIG) {\r\n");
      out.write("\t\t\tloadPrintControlConfigInfo();\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_WATERMARK_CONFIG) {\r\n");
      out.write("\t\t\tloadWaterMarkConfigInfo();\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_MEDIA_CONTROL_CONFIG) {\r\n");
      out.write("\t\t\tloadMediaControlConfigInfo();\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_NETWORKSERVICE_CONTROL_CONFIG) {\r\n");
      out.write("\t\t\tloadNetworkServiceControlConfigInfo();\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_SYSTEM_CONTROL_CONFIG) {\r\n");
      out.write("\t\t\tloadSystemControlConfigInfo();\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_WORK_CONTROL_CONFIG) {\r\n");
      out.write("\t\t\tloadWorkControlConfigInfo();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tloadDefaultConfigInfo = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objJobProcessingType = g_objTabDefaultConfig.find('select[name=\"jobprocessingtype\"]');\r\n");
      out.write("\t\tvar objForcedTermination = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"forcedtermination\"]');\r\n");
      out.write("\t\tvar objForcedTerminationPwd = g_objTabDefaultConfig.find('input[name=\"forcedterminationpwd\"]');\r\n");
      out.write("\t\tvar objDecordingPermission = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"decordingpermission\"]');\r\n");
      out.write("\t\tvar objSafeExport = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"safeexport\"]');\r\n");
      out.write("\t\tvar objContentCopyPrevention = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"contentcopyprevention\"]');\r\n");
      out.write("\t\tvar objRealtimeObservation = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"realtimeobservation\"]');\r\n");
      out.write("\t\tvar objPasswordExpirationFlag = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"passwordexpirationflag\"]');\r\n");
      out.write("\t\tvar objPasswordExpirationPeriod = g_objTabDefaultConfig.find('input[name=\"passwordexpirationperiod\"]');\r\n");
      out.write("\t\tvar objExpiration = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"expiration\"]');\r\n");
      out.write("\t\tvar objExpirationPeriod = g_objTabDefaultConfig.find('input[name=\"expirationperiod\"]');\r\n");
      out.write("\t\tvar objExpirationJobProcessingType = g_objTabDefaultConfig.find('select[name=\"expirationjobprocessingtype\"]');\r\n");
      out.write("\t\tvar objUseServerOcrFlag = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"useserverocrflag\"]');\r\n");
      out.write("\t\tvar objOcrServerIpAddress = g_objTabDefaultConfig.find('input[name=\"ocrserveripaddress\"]');\r\n");
      out.write("\t\tvar objOcrServerPort = g_objTabDefaultConfig.find('input[name=\"ocrserverport\"]');\r\n");
      out.write("\t\tvar objExclusionSearchFolderList = g_objTabDefaultConfig.find('#exclusionsearchfolderlist');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objRowForcedTerminationPwd = g_objTabDefaultConfig.find('#row-forcedterminationpwd');\r\n");
      out.write("\t\tvar objRowPasswordExpirationPeriod = g_objTabDefaultConfig.find('#row-passwordexpirationperiod');\r\n");
      out.write("\t\tvar objRowExpirationPeriod = g_objTabDefaultConfig.find('#row-expirationperiod');\r\n");
      out.write("\t\tvar objRowExpirationJobProcessingType = g_objTabDefaultConfig.find('#row-expirationjobprocessingtype');\r\n");
      out.write("\t\tvar objRowOcrServerIpAddress = g_objTabDefaultConfig.find('#row-ocrserveripaddress');\r\n");
      out.write("\t\tvar objRowOcrServerPort = g_objTabDefaultConfig.find('#row-ocrserverport');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objTreeReference = $.jstree._reference(g_objOrganizationTree);\r\n");
      out.write("\t\tvar selectedNode = objTreeReference.get_selected();\r\n");
      out.write("\r\n");
      out.write("\t\tvar postData =  \"\";\r\n");
      out.write("\t\tif (selectedNode.attr(\"node_type\") == 'company') {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyDefaultConfigInfoParam(selectedNode.attr('companyid'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == 'dept') {\r\n");
      out.write("\t\t\tpostData = getRequestDeptDefaultConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('deptcode'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == \"user\") {\r\n");
      out.write("\t\t\tpostData = getRequestUserDefaultConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('userid'));\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyDefaultConfigInfoParam(\"\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\t//async: false,\r\n");
      out.write("\t\t\tbeforeSend: function() {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').block({ message: '<div style=\"height:20px;\"><img src=\"/images/processing.gif\" width=\"16\" height=\"16\" style=\"vertical-align: middle;\" /> <span style=\"position:relative; bottom: -1px;line-height: 20px;\">처리중...</span></div>', themedCSS: { margin: '0', padding: '0', 'min-width': '180px', 'width': '25%', height: '42px', backgroundColor: '#fff', border: '1px solid #aaa', color: '#fff', '-webkit-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', '-moz-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', 'box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)' }, overlayCSS: { backgroundColor:'#000', opacity: .3, cursor: 'wait' }, fadeIn: 0, fadeOut: 0 });\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcomplete: function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').unblock();\r\n");
      out.write("\t\t\t\t$('.inner-center .ui-layout-content').mCustomScrollbar('update');\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"기본 설정 정보 조회\", \"기본 설정 정보 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar jobProcessingType = $(data).find('jobprocessingtype').text();\r\n");
      out.write("\t\t\t\tvar forcedTerminationFlag = $(data).find('forcedterminationflag').text();\r\n");
      out.write("\t\t\t\tvar forcedTerminationPwd = $(data).find('forcedterminationpwd').text();\r\n");
      out.write("\t\t\t\tvar decordingPermissionFlag = $(data).find('decordingpermissionflag').text();\r\n");
      out.write("\t\t\t\tvar safeExportFlag = $(data).find('safeexportflag').text();\r\n");
      out.write("\t\t\t\tvar contentCopyPreventionFlag = $(data).find('contentcopypreventionflag').text();\r\n");
      out.write("\t\t\t\tvar realtimeObservationFlag = $(data).find('realtimeobservationflag').text();\r\n");
      out.write("\t\t\t\tvar passwordExpirationFlag = $(data).find('passwordexpirationflag').text();\r\n");
      out.write("\t\t\t\tvar passwordExpirationPeriod = $(data).find('passwordexpirationperiod').text();\r\n");
      out.write("\t\t\t\tvar expirationFlag = $(data).find('expirationflag').text();\r\n");
      out.write("\t\t\t\tvar expirationPeriod = $(data).find('expirationperiod').text();\r\n");
      out.write("\t\t\t\tvar expirationJobProcessingType = $(data).find('expirationjobprocessingtype').text();\r\n");
      out.write("\t\t\t\tvar useServerOcrFlag = $(data).find('useserverocrflag').text();\r\n");
      out.write("\t\t\t\tvar ocrServerIpAddress = $(data).find('ocrserveripaddress').text();\r\n");
      out.write("\t\t\t\tvar ocrServerPort = $(data).find('ocrserverport').text();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjJobProcessingType.val(jobProcessingType);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjForcedTermination.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjForcedTermination.filter('[value=' + forcedTerminationFlag + ']').prop('checked', true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjForcedTerminationPwd.val(forcedTerminationPwd);\r\n");
      out.write("\t\t\t\tif (forcedTerminationFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tobjRowForcedTerminationPwd.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowForcedTerminationPwd.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjDecordingPermission.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjDecordingPermission.filter('[value=' + decordingPermissionFlag + ']').prop('checked', true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjSafeExport.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjSafeExport.filter('[value=' + safeExportFlag + ']').prop('checked', true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjContentCopyPrevention.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjContentCopyPrevention.filter('[value=' + contentCopyPreventionFlag + ']').prop('checked', true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjRealtimeObservation.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjRealtimeObservation.filter('[value=' + realtimeObservationFlag + ']').prop('checked', true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (passwordExpirationFlag.length > 0) {\r\n");
      out.write("\t\t\t\t\tobjPasswordExpirationFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\t\tobjPasswordExpirationFlag.filter('[value=' + passwordExpirationFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\t\tobjPasswordExpirationPeriod.val(passwordExpirationPeriod);\r\n");
      out.write("\t\t\t\t\tif (passwordExpirationFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\t\tobjRowPasswordExpirationPeriod.show();\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tobjRowPasswordExpirationPeriod.hide();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (expirationFlag.length > 0) {\r\n");
      out.write("\t\t\t\t\tobjExpiration.prop('checked', false);\r\n");
      out.write("\t\t\t\t\tobjExpiration.filter('[value=' + expirationFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\t\tobjExpirationPeriod.val(expirationPeriod);\r\n");
      out.write("\t\t\t\t\tobjExpirationJobProcessingType.val(expirationJobProcessingType);\r\n");
      out.write("\t\t\t\t\tif (expirationFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\t\tobjRowExpirationPeriod.show();\r\n");
      out.write("\t\t\t\t\t\tobjRowExpirationJobProcessingType.show();\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tobjRowExpirationPeriod.hide();\r\n");
      out.write("\t\t\t\t\t\tobjRowExpirationJobProcessingType.hide();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (useServerOcrFlag.length > 0) {\r\n");
      out.write("\t\t\t\t\tobjUseServerOcrFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\t\tobjUseServerOcrFlag.filter('[value=' + useServerOcrFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\t\tobjOcrServerIpAddress.val(ocrServerIpAddress);\r\n");
      out.write("\t\t\t\t\tobjOcrServerPort.val(ocrServerPort);\r\n");
      out.write("\t\t\t\t\tif (useServerOcrFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\t\tobjRowOcrServerIpAddress.show();\r\n");
      out.write("\t\t\t\t\t\tobjRowOcrServerPort.show();\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tobjRowOcrServerIpAddress.hide();\r\n");
      out.write("\t\t\t\t\t\tobjRowOcrServerPort.hide();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar tableHtml = '';\r\n");
      out.write("\t\t\t\ttableHtml += '<table class=\"list-table\">';\r\n");
      out.write("\t\t\t\ttableHtml += '<thead>';\r\n");
      out.write("\t\t\t\ttableHtml += '<tr>';\r\n");
      out.write("\t\t\t\ttableHtml += '<th width=\"40\" class=\"ui-state-default\" style=\"text-align: center;\">';\r\n");
      out.write("\t\t\t\ttableHtml += '<input type=\"checkbox\" name=\"All\" style=\"border: 0;\" onFocus=\"this.blur();\">';\r\n");
      out.write("\t\t\t\ttableHtml += '</th>';\r\n");
      out.write("\t\t\t\ttableHtml += '<th class=\"ui-state-default\">폴더 경로</th>';\r\n");
      out.write("\t\t\t\ttableHtml += '</tr>';\r\n");
      out.write("\t\t\t\ttableHtml += '</thead>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\ttableHtml += '<tbody>';\r\n");
      out.write("\t\t\t\t$(data).find('exclusionsearchfolderlist').find('folder').each( function(index) {\r\n");
      out.write("\t\t\t\t\tvar lineStyle = '';\r\n");
      out.write("\t\t\t\t\tif (index%2 == 0)\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_odd\";\r\n");
      out.write("\t\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_even\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\ttableHtml += '<tr class=\"' + lineStyle + '\">';\r\n");
      out.write("\t\t\t\t\ttableHtml += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selectfolder\" exclusionsearchfolderpath=\"' + $(this).find('path').text() + '\" style=\"border: 0;\"></td>';\r\n");
      out.write("\t\t\t\t\ttableHtml += '<td>' + $(this).find('path').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableHtml += '</tr>';\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\ttableHtml += '</tbody>';\r\n");
      out.write("\t\t\t\ttableHtml += '</table>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjExclusionSearchFolderList.html(tableHtml);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"기본 설정 정보 조회\", \"기본 설정 정보 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tloadPatternConfigInfo = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objTreeReference = $.jstree._reference(g_objOrganizationTree);\r\n");
      out.write("\t\tvar selectedNode = objTreeReference.get_selected();\r\n");
      out.write("\r\n");
      out.write("\t\tvar postData =  \"\";\r\n");
      out.write("\t\tif (selectedNode.attr(\"node_type\") == 'company') {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyPatternConfigInfoParam(selectedNode.attr('companyid'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == 'dept') {\r\n");
      out.write("\t\t\tpostData = getRequestDeptPatternConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('deptcode'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == \"user\") {\r\n");
      out.write("\t\t\tpostData = getRequestUserPatternConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('userid'));\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyPatternConfigInfoParam(\"\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\t//async: false,\r\n");
      out.write("\t\t\tbeforeSend: function() {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').block({ message: '<div style=\"height:20px;\"><img src=\"/images/processing.gif\" width=\"16\" height=\"16\" style=\"vertical-align: middle;\" /> <span style=\"position:relative; bottom: -1px;line-height: 20px;\">처리중...</span></div>', themedCSS: { margin: '0', padding: '0', 'min-width': '180px', 'width': '25%', height: '42px', backgroundColor: '#fff', border: '1px solid #aaa', color: '#fff', '-webkit-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', '-moz-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', 'box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)' }, overlayCSS: { backgroundColor:'#000', opacity: .3, cursor: 'wait' }, fadeIn: 0, fadeOut: 0 });\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcomplete: function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').unblock();\r\n");
      out.write("\t\t\t\t$('.inner-center .ui-layout-content').mCustomScrollbar('update');\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"패턴 설정 정보 조회\", \"패턴 설정 정보 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar htmlContents = '';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar beforePatternId = \"\";\r\n");
      out.write("\t\t\t\tvar recordCount = 1;\r\n");
      out.write("\t\t\t\tvar tableColumnCount = 0;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif ($(data).find('pattern').length > 0) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t$(data).find('pattern').each( function() {\r\n");
      out.write("\t\t\t\t\t\tvar patternId = $(this).find('patternid').text();\r\n");
      out.write("\t\t\t\t\t\tvar patternCategoryName = $(this).find('patterncategoryname').text();\r\n");
      out.write("\t\t\t\t\t\tvar patternSubId = $(this).find('patternsubid').text();\r\n");
      out.write("\t\t\t\t\t\tvar patternName = $(this).find('patternname').text();\r\n");
      out.write("\t\t\t\t\t\tvar defaultSearchFlag = $(this).find('defaultsearchflag').text();\r\n");
      out.write("\t\t\t\t\t\tvar jobProcessingActiveCount = $(this).find('jobprocessingactivecount').text();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif (beforePatternId.length == 0) {\r\n");
      out.write("\t\t\t\t\t\t\tif (recordCount == 1) {\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<div class=\"category-pattern\" style=\"margin-bottom: 5px;\">';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<div class=\"category-sub-title\">';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<div style=\"float: left; margin-top: 4px;\">';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<label class=\"checkbox\"><input type=\"checkbox\" name=\"checkAll\" patternid=\"' + patternId + '\" onFocus=\"this.blur();\" />' + patternCategoryName + '</label>';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '</div>';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<div style=\"float: right;\">';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '처리 활성화 수: <input id=\"jobprocessingactivecount\" name=\"jobprocessingactivecount\" value=\"' + jobProcessingActiveCount + '\" class=\"job-processing-active-count-spinner\" style=\"width: 40px; font-size:0.9em; text-align: right;\" /> 건';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '</div>';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<div class=\"clear\"></div>';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '</div>';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<div class=\"category-sub-contents\">';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<table class=\"list-table\">';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<tbody>';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<tr>';\r\n");
      out.write("\t\t\t\t\t\t\t} else if (tableColumnCount == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '</tr>';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<tr>';\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t} else if (beforePatternId != patternId) {\r\n");
      out.write("\t\t\t\t\t\t\tif (tableColumnCount != 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<td colspan=\"' + (5 - tableColumnCount) + '\">&nbsp;</td>';\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '</tr>';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '</tbody>';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '</table>';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '</div>';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '</div>';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<div class=\"category-pattern\" style=\"margin-bottom: 5px;\">';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<div class=\"category-sub-title\">';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<div style=\"float: left; margin-top: 4px;\">';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<label class=\"checkbox\"><input type=\"checkbox\" name=\"checkAll\" patternid=\"' + patternId + '\" onFocus=\"this.blur();\" />' + patternCategoryName + '</label>';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '</div>';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<div style=\"float: right;\">';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '처리 활성화 수: <input id=\"jobprocessingactivecount\" name=\"jobprocessingactivecount\" value=\"' + jobProcessingActiveCount + '\" class=\"job-processing-active-count-spinner\" style=\"width: 40px; font-size:0.9em; text-align: right;\" /> 건';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '</div>';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<div class=\"clear\"></div>';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '</div>';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<div class=\"category-sub-contents\">';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<table class=\"list-table\">';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<tbody>';\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\ttableColumnCount = 0;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tif (tableColumnCount == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '</tr>';\r\n");
      out.write("\t\t\t\t\t\t\t\thtmlContents += '<tr>';\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif (defaultSearchFlag == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<td width=\"20%\" style=\"text-align: left;\"><label class=\"checkbox\"><input type=\"checkbox\" name=\"checkboxpattern\" patternid=\"' + patternId + '\" patternsubid=\"' + patternSubId + '\" onFocus=\"this.blur()\" checked>' + patternName + '</label></td>';\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\thtmlContents += '<td width=\"20%\" style=\"text-align: left;\"><label class=\"checkbox\"><input type=\"checkbox\" name=\"checkboxpattern\" patternid=\"' + patternId + '\" patternsubid=\"' + patternSubId + '\" onFocus=\"this.blur()\">' + patternName + '</label></td>';\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tbeforePatternId = patternId;\r\n");
      out.write("\t\t\t\t\t\trecordCount++;\r\n");
      out.write("\t\t\t\t\t\ttableColumnCount = (tableColumnCount + 1) % 5;\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (tableColumnCount != 0) {\r\n");
      out.write("\t\t\t\t\t\thtmlContents += '<td colspan=\"' + (5 - tableColumnCount) + '\">&nbsp;</td>';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\thtmlContents += '</tr>';\r\n");
      out.write("\t\t\t\t\thtmlContents += '</tbody>';\r\n");
      out.write("\t\t\t\t\thtmlContents += '</table>';\r\n");
      out.write("\t\t\t\t\thtmlContents += '</div>';\r\n");
      out.write("\t\t\t\t\thtmlContents += '</div>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tg_objTabPatternConfig.find('#patterninfo').html(htmlContents);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t$(\".job-processing-active-count-spinner\").spinner({\r\n");
      out.write("\t\t\t\t\t\tmin: 1,\r\n");
      out.write("\t\t\t\t\t\tmax: 50,\r\n");
      out.write("\t\t\t\t\t\tstep: 1,\r\n");
      out.write("\t\t\t\t\t\tnumberFormat: \"n\",\r\n");
      out.write("\t\t\t\t\t\tchange: function( event, ui) {\r\n");
      out.write("\t\t\t\t\t\t\tvar min = $(this).spinner('option', 'min');\r\n");
      out.write("\t\t\t\t\t\t\tvar max = $(this).spinner('option', 'max');\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (isNaN($(this).val())) {\r\n");
      out.write("\t\t\t\t\t\t\t\t$(this).spinner(\"value\", min);\r\n");
      out.write("\t\t\t\t\t\t\t} else if ($(this).val() > max) {\r\n");
      out.write("\t\t\t\t\t\t\t\t$(this).spinner(\"value\", max);\r\n");
      out.write("\t\t\t\t\t\t\t} else if ($(this).val() < min) {\r\n");
      out.write("\t\t\t\t\t\t\t\t$(this).spinner(\"value\", min);\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t$(this).spinner(\"value\", parseInt($(this).val()));\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar inlineScriptText = \"\";\r\n");
      out.write("\t\t\t\t\tinlineScriptText += \"g_objTabPatternConfig.find('#patterninfo .category-sub-title input:checkbox').click( function () { var checkState = $(this).is(':checked'); $(this).closest('.category-pattern').find('.list-table input:checkbox').each( function () { $(this).prop('checked', checkState); }); });\";\r\n");
      out.write("\t\t\t\t\tinlineScriptText += \"g_objTabPatternConfig.find('#patterninfo .category-sub-contents input:checkbox').click( function () { if ($(this).is(':checked')) { if ($(this).closest('table').find('input:checkbox').length == $(this).closest('table').find('input:checkbox').filter(':checked').length) { $(this).closest('.category-pattern').find('.category-sub-title input:checkbox').prop('checked', true); } } else { $(this).closest('.category-pattern').find('.category-sub-title input:checkbox').prop('checked', false); } });\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar inlineScript   = document.createElement(\"script\");\r\n");
      out.write("\t\t\t\t\tinlineScript.type  = \"text/javascript\";\r\n");
      out.write("\t\t\t\t\tinlineScript.text  = inlineScriptText;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tg_objTabPatternConfig.find('#patterninfo').append(inlineScript);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"패턴 설정 정보 조회\", \"패턴 설정 정보 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tloadPrintControlConfigInfo = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objPrintControlFlag = g_objTabPrintControlConfig.find('input[type=\"radio\"][name=\"printcontrolflag\"]');\r\n");
      out.write("\t\tvar objPrintLimitFlag = g_objTabPrintControlConfig.find('input[type=\"radio\"][name=\"printlimitflag\"]');\r\n");
      out.write("\t\tvar objPrintLimitType = g_objTabPrintControlConfig.find('select[name=\"printlimittype\"]');\r\n");
      out.write("\t\tvar objPrintLimitCount = g_objTabPrintControlConfig.find('input[name=\"printlimitcount\"]');\r\n");
      out.write("\t\tvar objMaskingFlag = g_objTabPrintControlConfig.find('input[type=\"radio\"][name=\"maskingflag\"]');\r\n");
      out.write("\t\tvar objMaskingType = g_objTabPrintControlConfig.find('select[name=\"maskingtype\"]');\r\n");
      out.write("\t\tvar objJuminSexNotMaskingFlag = g_objTabPrintControlConfig.find('input[type=\"checkbox\"][name=\"juminsexnotmaskingflag\"]');\r\n");
      out.write("\t\tvar objLogCollectorIpAddress = g_objTabPrintControlConfig.find('input[name=\"logcollectoripaddress\"]');\r\n");
      out.write("\t\tvar objLogCollectorPortNo = g_objTabPrintControlConfig.find('input[name=\"logcollectorportno\"]');\r\n");
      out.write("\t\tvar objLogCollectorAccountId = g_objTabPrintControlConfig.find('input[name=\"logcollectoraccountid\"]');\r\n");
      out.write("\t\tvar objLogCollectorAccountPwd = g_objTabPrintControlConfig.find('input[name=\"logcollectoraccountpwd\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objRowPrintLimitType = g_objTabPrintControlConfig.find('#row-printlimittype');\r\n");
      out.write("\t\tvar objRowMaskingType = g_objTabPrintControlConfig.find('#row-maskingtype');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objTreeReference = $.jstree._reference(g_objOrganizationTree);\r\n");
      out.write("\t\tvar selectedNode = objTreeReference.get_selected();\r\n");
      out.write("\r\n");
      out.write("\t\tvar postData =  \"\";\r\n");
      out.write("\t\tif (selectedNode.attr(\"node_type\") == 'company') {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyPrintControlConfigInfoParam(selectedNode.attr('companyid'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == 'dept') {\r\n");
      out.write("\t\t\tpostData = getRequestDeptPrintControlConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('deptcode'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == \"user\") {\r\n");
      out.write("\t\t\tpostData = getRequestUserPrintControlConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('userid'));\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyPrintControlConfigInfoParam(\"\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\t//async: false,\r\n");
      out.write("\t\t\tbeforeSend: function() {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').block({ message: '<div style=\"height:20px;\"><img src=\"/images/processing.gif\" width=\"16\" height=\"16\" style=\"vertical-align: middle;\" /> <span style=\"position:relative; bottom: -1px;line-height: 20px;\">처리중...</span></div>', themedCSS: { margin: '0', padding: '0', 'min-width': '180px', 'width': '25%', height: '42px', backgroundColor: '#fff', border: '1px solid #aaa', color: '#fff', '-webkit-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', '-moz-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', 'box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)' }, overlayCSS: { backgroundColor:'#000', opacity: .3, cursor: 'wait' }, fadeIn: 0, fadeOut: 0 });\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcomplete: function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').unblock();\r\n");
      out.write("\t\t\t\t$('.inner-center .ui-layout-content').mCustomScrollbar('update');\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"출력 제어 설정 정보 조회\", \"출력 제어 설정 정보 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar printControlFlag = $(data).find('printcontrolflag').text();\r\n");
      out.write("\t\t\t\tvar printLimitFlag = $(data).find('printlimitflag').text();\r\n");
      out.write("\t\t\t\tvar printLimitType = $(data).find('printlimittype').text();\r\n");
      out.write("\t\t\t\tvar printLimitCount = $(data).find('printlimitcount').text();\r\n");
      out.write("\t\t\t\tvar maskingFlag = $(data).find('maskingflag').text();\r\n");
      out.write("\t\t\t\tvar maskingType = $(data).find('maskingtype').text();\r\n");
      out.write("\t\t\t\tvar juminSexNotMaskingFlag = $(data).find('juminsexnotmaskingflag').text();\r\n");
      out.write("\t\t\t\tvar logCollectorIpAddress = $(data).find('logcollectoripaddress').text();\r\n");
      out.write("\t\t\t\tvar logCollectorPortNo = $(data).find('logcollectorportno').text();\r\n");
      out.write("\t\t\t\tvar logCollectorAccountId = $(data).find('logcollectoraccountid').text();\r\n");
      out.write("\t\t\t\tvar logCollectorAccountPwd = $(data).find('logcollectoraccountpwd').text();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjPrintControlFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjPrintControlFlag.filter('[value=' + printControlFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\tobjPrintLimitFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjPrintLimitFlag.filter('[value=' + printLimitFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\tobjPrintLimitType.val(printLimitType);\r\n");
      out.write("\t\t\t\tobjPrintLimitCount.val(printLimitCount);\r\n");
      out.write("\t\t\t\tif (printLimitFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tobjRowPrintLimitType.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowPrintLimitType.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tobjMaskingFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjMaskingFlag.filter('[value=' + maskingFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\tobjMaskingType.val(maskingType);\r\n");
      out.write("\t\t\t\tif (maskingFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tobjRowMaskingType.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowMaskingType.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (juminSexNotMaskingFlag == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\t\tobjJuminSexNotMaskingFlag.prop('checked', true);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjJuminSexNotMaskingFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tobjLogCollectorIpAddress.val(logCollectorIpAddress);\r\n");
      out.write("\t\t\t\tobjLogCollectorPortNo.val(logCollectorPortNo);\r\n");
      out.write("\t\t\t\tobjLogCollectorAccountId.val(logCollectorAccountId);\r\n");
      out.write("\t\t\t\tobjLogCollectorAccountPwd.val(logCollectorAccountPwd);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"출력 제어 설정 정보 조회\", \"출력 제어 설정 정보 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tloadWaterMarkConfigInfo = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objWmPrintMode = g_objTabWaterMarkConfig.find('select[name=\"wmprintmode\"]');\r\n");
      out.write("\t\tvar objWm3StepWaterMark = g_objTabWaterMarkConfig.find('select[name=\"wm3stepwatermark\"]');\r\n");
      out.write("\t\tvar objWmTextRepeatSize = g_objTabWaterMarkConfig.find('select[name=\"wmtextrepeatsize\"]');\r\n");
      out.write("\t\tvar objWmOutlineMode = g_objTabWaterMarkConfig.find('select[name=\"wmoutlinemode\"]');\r\n");
      out.write("\t\tvar objWmPrintTime = g_objTabWaterMarkConfig.find('select[name=\"wmprinttime\"]');\r\n");
      out.write("\t\tvar objWmTextMain = g_objTabWaterMarkConfig.find('input[name=\"wmtextmain\"]');\r\n");
      out.write("\t\tvar objWmTextSub = g_objTabWaterMarkConfig.find('input[name=\"wmtextsub\"]');\r\n");
      out.write("\t\tvar objWmTextTopLeft = g_objTabWaterMarkConfig.find('input[name=\"wmtexttopleft\"]');\r\n");
      out.write("\t\tvar objWmTextTopRight = g_objTabWaterMarkConfig.find('input[name=\"wmtexttopright\"]');\r\n");
      out.write("\t\tvar objWmTextBottomLeft = g_objTabWaterMarkConfig.find('input[name=\"wmtextbottomleft\"]');\r\n");
      out.write("\t\tvar objWmTextBottomRight = g_objTabWaterMarkConfig.find('input[name=\"wmtextbottomright\"]');\r\n");
      out.write("\t\tvar objWmMainFontName = g_objTabWaterMarkConfig.find('select[name=\"wmmainfontname\"]');\r\n");
      out.write("\t\tvar objWmMainFontSize = g_objTabWaterMarkConfig.find('select[name=\"wmmainfontsize\"]');\r\n");
      out.write("\t\tvar objWmMainFontStyle = g_objTabWaterMarkConfig.find('select[name=\"wmmainfontstyle\"]');\r\n");
      out.write("\t\tvar objWmSubFontName = g_objTabWaterMarkConfig.find('select[name=\"wmsubfontname\"]');\r\n");
      out.write("\t\tvar objWmSubFontSize = g_objTabWaterMarkConfig.find('select[name=\"wmsubfontsize\"]');\r\n");
      out.write("\t\tvar objWmSubFontStyle = g_objTabWaterMarkConfig.find('select[name=\"wmsubfontstyle\"]');\r\n");
      out.write("\t\tvar objWmTextFontName = g_objTabWaterMarkConfig.find('select[name=\"wmtextfontname\"]');\r\n");
      out.write("\t\tvar objWmTextFontSize = g_objTabWaterMarkConfig.find('select[name=\"wmtextfontsize\"]');\r\n");
      out.write("\t\tvar objWmTextFontStyle = g_objTabWaterMarkConfig.find('select[name=\"wmtextfontstyle\"]');\r\n");
      out.write("\t\tvar objWmFontMainAngle = g_objTabWaterMarkConfig.find('input[name=\"wmfontmainangle\"]');\r\n");
      out.write("\t\tvar objWmFontDensityMain = g_objTabWaterMarkConfig.find('select[name=\"wmfontdensitymain\"]');\r\n");
      out.write("\t\tvar objWmFontDensityText = g_objTabWaterMarkConfig.find('select[name=\"wmfontdensitytext\"]');\r\n");
      out.write("\t\tvar objWmBackgroundMode = g_objTabWaterMarkConfig.find('select[name=\"wmbackgroundmode\"]');\r\n");
      out.write("\t\tvar objWmBackgroundImage = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimage\"]');\r\n");
      out.write("\t\tvar objWmBackgroundImageFileName = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimagefilename\"]');\r\n");
      out.write("\t\tvar objWmBackgroundPositionX = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundpositionx\"]');\r\n");
      out.write("\t\tvar objWmBackgroundPositionY = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundpositiony\"]');\r\n");
      out.write("\t\tvar objWmBackgroundImageWidth = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimagewidth\"]');\r\n");
      out.write("\t\tvar objWmBackgroundImageHeight = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimageheight\"]');\r\n");
      out.write("\t\tvar objOrgWmBackgroundImageWidth = g_objTabWaterMarkConfig.find('input[name=\"orgwmbackgroundimagewidth\"]');\r\n");
      out.write("\t\tvar objOrgWmBackgroundImageHeight = g_objTabWaterMarkConfig.find('input[name=\"orgwmbackgroundimageheight\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objTreeReference = $.jstree._reference(g_objOrganizationTree);\r\n");
      out.write("\t\tvar selectedNode = objTreeReference.get_selected();\r\n");
      out.write("\r\n");
      out.write("\t\tvar postData =  \"\";\r\n");
      out.write("\t\tif (selectedNode.attr(\"node_type\") == 'company') {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyWaterMarkConfigInfoParam(selectedNode.attr('companyid'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == 'dept') {\r\n");
      out.write("\t\t\tpostData = getRequestDeptWaterMarkConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('deptcode'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == \"user\") {\r\n");
      out.write("\t\t\tpostData = getRequestUserWaterMarkConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('userid'));\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyWaterMarkConfigInfoParam(\"\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\t//async: false,\r\n");
      out.write("\t\t\tbeforeSend: function() {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').block({ message: '<div style=\"height:20px;\"><img src=\"/images/processing.gif\" width=\"16\" height=\"16\" style=\"vertical-align: middle;\" /> <span style=\"position:relative; bottom: -1px;line-height: 20px;\">처리중...</span></div>', themedCSS: { margin: '0', padding: '0', 'min-width': '180px', 'width': '25%', height: '42px', backgroundColor: '#fff', border: '1px solid #aaa', color: '#fff', '-webkit-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', '-moz-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', 'box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)' }, overlayCSS: { backgroundColor:'#000', opacity: .3, cursor: 'wait' }, fadeIn: 0, fadeOut: 0 });\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcomplete: function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').unblock();\r\n");
      out.write("\t\t\t\t$('.inner-center .ui-layout-content').mCustomScrollbar('update');\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"워터마크 설정 정보 조회\", \"워터마크 설정 정보 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar wmPrintMode = $(data).find('wmprintmode').text();\r\n");
      out.write("\t\t\t\tvar wm3StepWaterMark = $(data).find('wm3stepwatermark').text();\r\n");
      out.write("\t\t\t\tvar wmTextRepeatSize = $(data).find('wmtextrepeatsize').text();\r\n");
      out.write("\t\t\t\tvar wmOutlineMode = $(data).find('wmoutlinemode').text();\r\n");
      out.write("\t\t\t\tvar wmPrintTime = $(data).find('wmprinttime').text();\r\n");
      out.write("\t\t\t\tvar wmTextMain = $(data).find('wmtextmain').text();\r\n");
      out.write("\t\t\t\tvar wmTextSub = $(data).find('wmtextsub').text();\r\n");
      out.write("\t\t\t\tvar wmTextTopLeft = $(data).find('wmtexttopleft').text();\r\n");
      out.write("\t\t\t\tvar wmTextTopRight = $(data).find('wmtexttopright').text();\r\n");
      out.write("\t\t\t\tvar wmTextBottomLeft = $(data).find('wmtextbottomleft').text();\r\n");
      out.write("\t\t\t\tvar wmTextBottomRight = $(data).find('wmtextbottomright').text();\r\n");
      out.write("\t\t\t\tvar wmMainFontName = $(data).find('wmmainfontname').text();\r\n");
      out.write("\t\t\t\tvar wmMainFontSize = $(data).find('wmmainfontsize').text();\r\n");
      out.write("\t\t\t\tvar wmMainFontStyle = $(data).find('wmmainfontstyle').text();\r\n");
      out.write("\t\t\t\tvar wmSubFontName = $(data).find('wmsubfontname').text();\r\n");
      out.write("\t\t\t\tvar wmSubFontSize = $(data).find('wmsubfontsize').text();\r\n");
      out.write("\t\t\t\tvar wmSubFontStyle = $(data).find('wmsubfontstyle').text();\r\n");
      out.write("\t\t\t\tvar wmTextFontName = $(data).find('wmtextfontname').text();\r\n");
      out.write("\t\t\t\tvar wmTextFontSize = $(data).find('wmtextfontsize').text();\r\n");
      out.write("\t\t\t\tvar wmTextFontStyle = $(data).find('wmtextfontstyle').text();\r\n");
      out.write("\t\t\t\tvar wmFontMainAngle = $(data).find('wmfontmainangle').text();\r\n");
      out.write("\t\t\t\tvar wmFontDensityMain = $(data).find('wmfontdensitymain').text();\r\n");
      out.write("\t\t\t\tvar wmFontDensityText = $(data).find('wmfontdensitytext').text();\r\n");
      out.write("\t\t\t\tvar wmBackgroundMode = $(data).find('wmbackgroundmode').text();\r\n");
      out.write("\t\t\t\tvar wmBackgroundImage = $(data).find('wmbackgroundimage').text();\r\n");
      out.write("\t\t\t\tvar wmBackgroundPositionX = $(data).find('wmbackgroundpositionx').text();\r\n");
      out.write("\t\t\t\tvar wmBackgroundPositionY = $(data).find('wmbackgroundpositiony').text();\r\n");
      out.write("\t\t\t\tvar wmBackgroundImageWidth = $(data).find('wmbackgroundimagewidth').text();\r\n");
      out.write("\t\t\t\tvar wmBackgroundImageHeight = $(data).find('wmbackgroundimageheight').text();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjWmPrintMode.val(wmPrintMode);\r\n");
      out.write("\t\t\t\tobjWm3StepWaterMark.val(wm3StepWaterMark);\r\n");
      out.write("\t\t\t\tobjWmTextRepeatSize.val(wmTextRepeatSize);\r\n");
      out.write("\t\t\t\tobjWmOutlineMode.val(wmOutlineMode);\r\n");
      out.write("\t\t\t\tobjWmPrintTime.val(wmPrintTime);\r\n");
      out.write("\t\t\t\tobjWmTextMain.val(wmTextMain);\r\n");
      out.write("\t\t\t\tobjWmTextSub.val(wmTextSub);\r\n");
      out.write("\t\t\t\tobjWmTextTopLeft.val(wmTextTopLeft);\r\n");
      out.write("\t\t\t\tobjWmTextTopRight.val(wmTextTopRight);\r\n");
      out.write("\t\t\t\tobjWmTextBottomLeft.val(wmTextBottomLeft);\r\n");
      out.write("\t\t\t\tobjWmTextBottomRight.val(wmTextBottomRight);\r\n");
      out.write("\t\t\t\tobjWmMainFontName.val(wmMainFontName);\r\n");
      out.write("\t\t\t\tobjWmMainFontSize.val(wmMainFontSize);\r\n");
      out.write("\t\t\t\tobjWmMainFontStyle.val(wmMainFontStyle);\r\n");
      out.write("\t\t\t\tobjWmSubFontName.val(wmSubFontName);\r\n");
      out.write("\t\t\t\tobjWmSubFontSize.val(wmSubFontSize);\r\n");
      out.write("\t\t\t\tobjWmSubFontStyle.val(wmSubFontStyle);\r\n");
      out.write("\t\t\t\tobjWmTextFontName.val(wmTextFontName);\r\n");
      out.write("\t\t\t\tobjWmTextFontSize.val(wmTextFontSize);\r\n");
      out.write("\t\t\t\tobjWmTextFontStyle.val(wmTextFontStyle);\r\n");
      out.write("\t\t\t\tobjWmFontMainAngle.val(wmFontMainAngle);\r\n");
      out.write("\t\t\t\tobjWmFontDensityMain.val(wmFontDensityMain);\r\n");
      out.write("\t\t\t\tobjWmFontDensityText.val(wmFontDensityText);\r\n");
      out.write("\t\t\t\tobjWmBackgroundMode.val(wmBackgroundMode);\r\n");
      out.write("\t\t\t\tobjWmBackgroundImage.val(wmBackgroundImage);\r\n");
      out.write("\t\t\t\tvar pathArray = wmBackgroundImage.split(\"/\");\r\n");
      out.write("\t\t\t\tvar wmBackgroundImageFileName = pathArray[pathArray.length - 1];\r\n");
      out.write("\t\t\t\tobjWmBackgroundImageFileName.val(wmBackgroundImageFileName);\r\n");
      out.write("\t\t\t\tobjWmBackgroundPositionX.val(wmBackgroundPositionX);\r\n");
      out.write("\t\t\t\tobjWmBackgroundPositionY.val(wmBackgroundPositionY);\r\n");
      out.write("\t\t\t\tobjWmBackgroundImageWidth.val(wmBackgroundImageWidth);\r\n");
      out.write("\t\t\t\tobjWmBackgroundImageHeight.val(wmBackgroundImageHeight);\r\n");
      out.write("\t\t\t\tobjOrgWmBackgroundImageWidth.val(wmBackgroundImageWidth);\r\n");
      out.write("\t\t\t\tobjOrgWmBackgroundImageHeight.val(wmBackgroundImageHeight);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (wmBackgroundImage.length > 0) {\r\n");
      out.write("\t\t\t\t\tg_objTabWaterMarkConfig.find('#sizepercentspinner').spinner('enable');\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tg_objTabWaterMarkConfig.find('#sizepercentspinner').spinner('disable');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif ((selectedNode.attr(\"node_type\") == 'company') ||\r\n");
      out.write("\t\t\t\t\t(selectedNode.attr(\"node_type\") == 'dept') ||\r\n");
      out.write("\t\t\t\t\t(selectedNode.attr(\"node_type\") == \"user\")) {\r\n");
      out.write("\t\t\t\t\t$('button[name=\"btnManageBackgroundImage\"]').show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t$('button[name=\"btnManageBackgroundImage\"]').hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"워터마크 설정 정보 조회\", \"워터마크 설정 정보 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tloadMediaControlConfigInfo = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objUsbControlFlag = g_objTabMediaControlConfig.find('input[type=\"radio\"][name=\"usbcontrolflag\"]');\r\n");
      out.write("\t\tvar objUsbControlType = g_objTabMediaControlConfig.find('select[name=\"usbcontroltype\"]');\r\n");
      out.write("\t\tvar objCdRomControlFlag = g_objTabMediaControlConfig.find('input[type=\"radio\"][name=\"cdromcontrolflag\"]');\r\n");
      out.write("\t\tvar objCdRomControlType = g_objTabMediaControlConfig.find('select[name=\"cdromcontroltype\"]');\r\n");
      out.write("\t\tvar objPublicFolderControlFlag = g_objTabMediaControlConfig.find('input[type=\"radio\"][name=\"publicfoldercontrolflag\"]');\r\n");
      out.write("\t\tvar objPublicFolderControlType = g_objTabMediaControlConfig.find('select[name=\"publicfoldercontroltype\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objRowUsbControlType = g_objTabMediaControlConfig.find('#row-usbcontroltype');\r\n");
      out.write("\t\tvar objRowCdRomControlType = g_objTabMediaControlConfig.find('#row-cdromcontroltype');\r\n");
      out.write("\t\tvar objRowPublicFolderControlType = g_objTabMediaControlConfig.find('#row-publicfoldercontroltype');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objTreeReference = $.jstree._reference(g_objOrganizationTree);\r\n");
      out.write("\t\tvar selectedNode = objTreeReference.get_selected();\r\n");
      out.write("\r\n");
      out.write("\t\tvar postData =  \"\";\r\n");
      out.write("\t\tif (selectedNode.attr(\"node_type\") == 'company') {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyMediaControlConfigInfoParam(selectedNode.attr('companyid'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == 'dept') {\r\n");
      out.write("\t\t\tpostData = getRequestDeptMediaControlConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('deptcode'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == \"user\") {\r\n");
      out.write("\t\t\tpostData = getRequestUserMediaControlConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('userid'));\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyMediaControlConfigInfoParam(\"\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\t//async: false,\r\n");
      out.write("\t\t\tbeforeSend: function() {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').block({ message: '<div style=\"height:20px;\"><img src=\"/images/processing.gif\" width=\"16\" height=\"16\" style=\"vertical-align: middle;\" /> <span style=\"position:relative; bottom: -1px;line-height: 20px;\">처리중...</span></div>', themedCSS: { margin: '0', padding: '0', 'min-width': '180px', 'width': '25%', height: '42px', backgroundColor: '#fff', border: '1px solid #aaa', color: '#fff', '-webkit-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', '-moz-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', 'box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)' }, overlayCSS: { backgroundColor:'#000', opacity: .3, cursor: 'wait' }, fadeIn: 0, fadeOut: 0 });\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcomplete: function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').unblock();\r\n");
      out.write("\t\t\t\t$('.inner-center .ui-layout-content').mCustomScrollbar('update');\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"매체 제어 설정 정보 조회\", \"매체 제어 설정 정보 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar usbControlFlag = $(data).find('usbcontrolflag').text();\r\n");
      out.write("\t\t\t\tvar usbControlType = $(data).find('usbcontroltype').text();\r\n");
      out.write("\t\t\t\tvar cdRomControlFlag = $(data).find('cdromcontrolflag').text();\r\n");
      out.write("\t\t\t\tvar cdRomControlType = $(data).find('cdromcontroltype').text();\r\n");
      out.write("\t\t\t\tvar publicFolderControlFlag = $(data).find('publicfoldercontrolflag').text();\r\n");
      out.write("\t\t\t\tvar publicFolderControlType = $(data).find('publicfoldercontroltype').text();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjUsbControlFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjUsbControlFlag.filter('[value=' + usbControlFlag + ']').prop('checked', true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjUsbControlType.val(usbControlType);\r\n");
      out.write("\t\t\t\tif (usbControlFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tobjRowUsbControlType.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowUsbControlType.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjCdRomControlFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjCdRomControlFlag.filter('[value=' + cdRomControlFlag + ']').prop('checked', true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjCdRomControlType.val(cdRomControlType);\r\n");
      out.write("\t\t\t\tif (cdRomControlFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tobjRowCdRomControlType.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowCdRomControlType.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjPublicFolderControlFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjPublicFolderControlFlag.filter('[value=' + publicFolderControlFlag + ']').prop('checked', true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjPublicFolderControlType.val(publicFolderControlType);\r\n");
      out.write("\t\t\t\tif (publicFolderControlFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tobjRowPublicFolderControlType.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowPublicFolderControlType.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"매체 제어 설정 정보 조회\", \"매체 제어 설정 정보 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tloadNetworkServiceControlConfigInfo = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objNetworkServiceControlFlag = g_objTabNetworkServiceControlConfig.find('input[type=\"radio\"][name=\"networkservicecontrolflag\"]');\r\n");
      out.write("\t\tvar objEmailSelectedProgramList = g_objTabEmail.find('#selectedprogramlist');\r\n");
      out.write("\t\tvar objFtpSelectedProgramList = g_objTabFtp.find('#selectedprogramlist');\r\n");
      out.write("\t\tvar objP2pSelectedProgramList = g_objTabP2p.find('#selectedprogramlist');\r\n");
      out.write("\t\tvar objMessengerSelectedProgramList = g_objTabMessenger.find('#selectedprogramlist');\r\n");
      out.write("\t\tvar objCaptureSelectedProgramList = g_objTabCapture.find('#selectedprogramlist');\r\n");
      out.write("\t\tvar objEtcSelectedProgramList = g_objTabEtc.find('#selectedprogramlist');\r\n");
      out.write("\t\tvar objBlockSpecificUrlsFlag = g_objTabNetworkServiceControlConfig.find('input[type=\"radio\"][name=\"blockspecificurlsflag\"]');\r\n");
      out.write("\t\tvar objBlockSpecificUrlsList = g_objTabNetworkServiceControlConfig.find('#blockspecificurlslist');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objRowNetworkServiceControlProgram = g_objTabNetworkServiceControlConfig.find('#row-networkservicecontrolprogram');\r\n");
      out.write("\t\tvar objRowBlockSpecificUrls = g_objTabNetworkServiceControlConfig.find('#row-blockspecificurls');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objTreeReference = $.jstree._reference(g_objOrganizationTree);\r\n");
      out.write("\t\tvar selectedNode = objTreeReference.get_selected();\r\n");
      out.write("\r\n");
      out.write("\t\tvar postData =  \"\";\r\n");
      out.write("\t\tif (selectedNode.attr(\"node_type\") == 'company') {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyNetworkServiceControlConfigInfoParam(selectedNode.attr('companyid'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == 'dept') {\r\n");
      out.write("\t\t\tpostData = getRequestDeptNetworkServiceControlConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('deptcode'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == \"user\") {\r\n");
      out.write("\t\t\tpostData = getRequestUserNetworkServiceControlConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('userid'));\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyNetworkServiceControlConfigInfoParam(\"\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\t//async: false,\r\n");
      out.write("\t\t\tbeforeSend: function() {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').block({ message: '<div style=\"height:20px;\"><img src=\"/images/processing.gif\" width=\"16\" height=\"16\" style=\"vertical-align: middle;\" /> <span style=\"position:relative; bottom: -1px;line-height: 20px;\">처리중...</span></div>', themedCSS: { margin: '0', padding: '0', 'min-width': '180px', 'width': '25%', height: '42px', backgroundColor: '#fff', border: '1px solid #aaa', color: '#fff', '-webkit-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', '-moz-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', 'box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)' }, overlayCSS: { backgroundColor:'#000', opacity: .3, cursor: 'wait' }, fadeIn: 0, fadeOut: 0 });\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcomplete: function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').unblock();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 설정 정보 조회\", \"네트워크 서비스 제어 설정 정보 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar networkControlServiceFlag = $(data).find('networkservicecontrolflag').text();\r\n");
      out.write("\t\t\t\tvar blockSpecificUrlsFlag = $(data).find('blockspecificurlsflag').text();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjNetworkServiceControlFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjNetworkServiceControlFlag.filter('[value=' + networkControlServiceFlag + ']').prop('checked', true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (networkControlServiceFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tobjRowNetworkServiceControlProgram.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowNetworkServiceControlProgram.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar tableHeader = '';\r\n");
      out.write("\t\t\t\ttableHeader += '<table class=\"list-table\">';\r\n");
      out.write("\t\t\t\ttableHeader += '<thead>';\r\n");
      out.write("\t\t\t\ttableHeader += '<tr>';\r\n");
      out.write("\t\t\t\ttableHeader += '<th width=\"40\" class=\"ui-state-default\" style=\"text-align: center;\">';\r\n");
      out.write("\t\t\t\ttableHeader += '<input type=\"checkbox\" name=\"All\" style=\"border: 0;\" onFocus=\"this.blur()\">';\r\n");
      out.write("\t\t\t\ttableHeader += '</th>';\r\n");
      out.write("\t\t\t\ttableHeader += '<th class=\"ui-state-default\">프로그램 명</th>';\r\n");
      out.write("\t\t\t\ttableHeader += '<th class=\"ui-state-default\">파일 명</th>';\r\n");
      out.write("\t\t\t\ttableHeader += '<th width=\"110\" class=\"ui-state-default\">제어 유형</th>';\r\n");
      out.write("\t\t\t\ttableHeader += '</tr>';\r\n");
      out.write("\t\t\t\ttableHeader += '</thead>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar tableTail = '</table>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar recordCount = 1;\r\n");
      out.write("\t\t\t\tvar lineStyle = '';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar tableBody = '<tbody>';\r\n");
      out.write("\t\t\t\t$(data).find('emailprogramlist').find('program').each( function() {\r\n");
      out.write("\t\t\t\t\tif (recordCount%2 == 0)\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_even\";\r\n");
      out.write("\t\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_odd\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\ttableBody += '<tr class=\"' + lineStyle + '\">';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selectprogram\" programname=\"' + $(this).find('programname').text() + '\" filename=\"' + $(this).find('filename').text() + '\" style=\"border: 0;\"></td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td title=' + $(this).find('programname').text() + '>' + $(this).find('programname').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td title=' + $(this).find('filename').text() + '>' + $(this).find('filename').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<select id=\"controltype\" name=\"controltype\">';\r\n");
      out.write("\t\t\t\t\tvar controlType = $(this).find('controltype').text();\r\n");
      out.write("\t\t\t\t\tif (!g_htControlTypeList.isEmpty()) {\r\n");
      out.write("\t\t\t\t\t\tg_htControlTypeList.each( function(value, name) {\r\n");
      out.write("\t\t\t\t\t\t\tif ((value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_ENCRYPT_FILE);
      out.write("') &&\r\n");
      out.write("\t\t\t\t\t\t\t\t\t(value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_READ);
      out.write("')) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (value == controlType) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttableBody += '<option value=\"' + value + '\" selected>' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttableBody += '<option value=\"' + value + '\">' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\ttableBody += '</select>';\r\n");
      out.write("\t\t\t\t\ttableBody += '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\trecordCount++;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\ttableBody += '</tbody>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjEmailSelectedProgramList.html(tableHeader + tableBody + tableTail);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\trecordCount = 1;\r\n");
      out.write("\t\t\t\tlineStyle = '';\r\n");
      out.write("\t\t\t\ttableBody = '<tbody>';\r\n");
      out.write("\t\t\t\t$(data).find('ftpprogramlist').find('program').each( function() {\r\n");
      out.write("\t\t\t\t\tif (recordCount%2 == 0)\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_even\";\r\n");
      out.write("\t\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_odd\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\ttableBody += '<tr class=\"' + lineStyle + '\">';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selectprogram\" programname=\"' + $(this).find('programname').text() + '\" filename=\"' + $(this).find('filename').text() + '\" style=\"border: 0;\"></td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>' + $(this).find('programname').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>' + $(this).find('filename').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<select id=\"controltype\" name=\"controltype\">';\r\n");
      out.write("\t\t\t\t\tvar controlType = $(this).find('controltype').text();\r\n");
      out.write("\t\t\t\t\tif (!g_htControlTypeList.isEmpty()) {\r\n");
      out.write("\t\t\t\t\t\tg_htControlTypeList.each( function(value, name) {\r\n");
      out.write("\t\t\t\t\t\t\tif ((value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_ENCRYPT_FILE);
      out.write("') &&\r\n");
      out.write("\t\t\t\t\t\t\t\t\t(value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_READ);
      out.write("')) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (value == controlType) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttableBody += '<option value=\"' + value + '\" selected>' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttableBody += '<option value=\"' + value + '\">' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\ttableBody += '</select>';\r\n");
      out.write("\t\t\t\t\ttableBody += '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\trecordCount++;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\ttableBody += '</tbody>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjFtpSelectedProgramList.html(tableHeader + tableBody + tableTail);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\trecordCount = 1;\r\n");
      out.write("\t\t\t\tlineStyle = '';\r\n");
      out.write("\t\t\t\ttableBody = '<tbody>';\r\n");
      out.write("\t\t\t\t$(data).find('p2pprogramlist').find('program').each( function() {\r\n");
      out.write("\t\t\t\t\tif (recordCount%2 == 0)\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_even\";\r\n");
      out.write("\t\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_odd\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\ttableBody += '<tr class=\"' + lineStyle + '\">';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selectprogram\" programname=\"' + $(this).find('programname').text() + '\" filename=\"' + $(this).find('filename').text() + '\" style=\"border: 0;\"></td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>' + $(this).find('programname').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>' + $(this).find('filename').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<select id=\"controltype\" name=\"controltype\">';\r\n");
      out.write("\t\t\t\t\tvar controlType = $(this).find('controltype').text();\r\n");
      out.write("\t\t\t\t\tif (!g_htControlTypeList.isEmpty()) {\r\n");
      out.write("\t\t\t\t\t\tg_htControlTypeList.each( function(value, name) {\r\n");
      out.write("\t\t\t\t\t\t\tif ((value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_ENCRYPT_FILE);
      out.write("') &&\r\n");
      out.write("\t\t\t\t\t\t\t\t\t(value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_READ);
      out.write("')) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (value == controlType) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttableBody += '<option value=\"' + value + '\" selected>' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttableBody += '<option value=\"' + value + '\">' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\ttableBody += '</select>';\r\n");
      out.write("\t\t\t\t\ttableBody += '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\trecordCount++;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\ttableBody += '</tbody>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjP2pSelectedProgramList.html(tableHeader + tableBody + tableTail);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\trecordCount = 1;\r\n");
      out.write("\t\t\t\tlineStyle = '';\r\n");
      out.write("\t\t\t\ttableBody = '<tbody>';\r\n");
      out.write("\t\t\t\t$(data).find('messengerprogramlist').find('program').each( function() {\r\n");
      out.write("\t\t\t\t\tif (recordCount%2 == 0)\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_even\";\r\n");
      out.write("\t\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_odd\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\ttableBody += '<tr class=\"' + lineStyle + '\">';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selectprogram\" programname=\"' + $(this).find('programname').text() + '\" filename=\"' + $(this).find('filename').text() + '\" style=\"border: 0;\"></td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>' + $(this).find('programname').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>' + $(this).find('filename').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<select id=\"controltype\" name=\"controltype\">';\r\n");
      out.write("\t\t\t\t\tvar controlType = $(this).find('controltype').text();\r\n");
      out.write("\t\t\t\t\tif (!g_htControlTypeList.isEmpty()) {\r\n");
      out.write("\t\t\t\t\t\tg_htControlTypeList.each( function(value, name) {\r\n");
      out.write("\t\t\t\t\t\t\tif ((value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_ENCRYPT_FILE);
      out.write("') &&\r\n");
      out.write("\t\t\t\t\t\t\t\t\t(value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_READ);
      out.write("')) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (value == controlType) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttableBody += '<option value=\"' + value + '\" selected>' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttableBody += '<option value=\"' + value + '\">' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\ttableBody += '</select>';\r\n");
      out.write("\t\t\t\t\ttableBody += '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\trecordCount++;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\ttableBody += '</tbody>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjMessengerSelectedProgramList.html(tableHeader + tableBody + tableTail);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\trecordCount = 1;\r\n");
      out.write("\t\t\t\tlineStyle = '';\r\n");
      out.write("\t\t\t\ttableBody = '<tbody>';\r\n");
      out.write("\t\t\t\t$(data).find('captureprogramlist').find('program').each( function() {\r\n");
      out.write("\t\t\t\t\tif (recordCount%2 == 0)\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_even\";\r\n");
      out.write("\t\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_odd\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\ttableBody += '<tr class=\"' + lineStyle + '\">';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selectprogram\" programname=\"' + $(this).find('programname').text() + '\" filename=\"' + $(this).find('filename').text() + '\" style=\"border: 0;\"></td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>' + $(this).find('programname').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>' + $(this).find('filename').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<select id=\"controltype\" name=\"controltype\">';\r\n");
      out.write("\t\t\t\t\tvar controlType = $(this).find('controltype').text();\r\n");
      out.write("\t\t\t\t\tif (!g_htControlTypeList.isEmpty()) {\r\n");
      out.write("\t\t\t\t\t\tg_htControlTypeList.each( function(value, name) {\r\n");
      out.write("\t\t\t\t\t\t\tif ((value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_ENCRYPT_FILE);
      out.write("') &&\r\n");
      out.write("\t\t\t\t\t\t\t\t\t(value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_READ);
      out.write("')) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (value == controlType) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttableBody += '<option value=\"' + value + '\" selected>' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttableBody += '<option value=\"' + value + '\">' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\ttableBody += '</select>';\r\n");
      out.write("\t\t\t\t\ttableBody += '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\trecordCount++;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\ttableBody += '</tbody>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjCaptureSelectedProgramList.html(tableHeader + tableBody + tableTail);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\trecordCount = 1;\r\n");
      out.write("\t\t\t\tlineStyle = '';\r\n");
      out.write("\t\t\t\ttableBody = '<tbody>';\r\n");
      out.write("\t\t\t\t$(data).find('etcprogramlist').find('program').each( function() {\r\n");
      out.write("\t\t\t\t\tif (recordCount%2 == 0)\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_even\";\r\n");
      out.write("\t\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_odd\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\ttableBody += '<tr class=\"' + lineStyle + '\">';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selectprogram\" programname=\"' + $(this).find('programname').text() + '\" filename=\"' + $(this).find('filename').text() + '\" style=\"border: 0;\"></td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>' + $(this).find('programname').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>' + $(this).find('filename').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '<select id=\"controltype\" name=\"controltype\">';\r\n");
      out.write("\t\t\t\t\tvar controlType = $(this).find('controltype').text();\r\n");
      out.write("\t\t\t\t\tif (!g_htControlTypeList.isEmpty()) {\r\n");
      out.write("\t\t\t\t\t\tg_htControlTypeList.each( function(value, name) {\r\n");
      out.write("\t\t\t\t\t\t\tif ((value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_ENCRYPT_FILE);
      out.write("') &&\r\n");
      out.write("\t\t\t\t\t\t\t\t\t(value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_READ);
      out.write("')) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (value == controlType) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttableBody += '<option value=\"' + value + '\" selected>' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttableBody += '<option value=\"' + value + '\">' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\ttableBody += '</select>';\r\n");
      out.write("\t\t\t\t\ttableBody += '</td>';\r\n");
      out.write("\t\t\t\t\ttableBody += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\trecordCount++;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\ttableBody += '</tbody>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjEtcSelectedProgramList.html(tableHeader + tableBody + tableTail);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjBlockSpecificUrlsFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjBlockSpecificUrlsFlag.filter('[value=' + blockSpecificUrlsFlag + ']').prop('checked', true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar tableHtml = '';\r\n");
      out.write("\t\t\t\ttableHtml += '<table class=\"list-table\">';\r\n");
      out.write("\t\t\t\ttableHtml += '<thead>';\r\n");
      out.write("\t\t\t\ttableHtml += '<tr>';\r\n");
      out.write("\t\t\t\ttableHtml += '<th width=\"40\" class=\"ui-state-default\" style=\"text-align: center;\">';\r\n");
      out.write("\t\t\t\ttableHtml += '<input type=\"checkbox\" name=\"All\" style=\"border: 0;\" onFocus=\"this.blur();\">';\r\n");
      out.write("\t\t\t\ttableHtml += '</th>';\r\n");
      out.write("\t\t\t\ttableHtml += '<th class=\"ui-state-default\">차단 URL</th>';\r\n");
      out.write("\t\t\t\ttableHtml += '</tr>';\r\n");
      out.write("\t\t\t\ttableHtml += '</thead>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\ttableHtml += '<tbody>';\r\n");
      out.write("\t\t\t\t$(data).find('blockspecificurlslist').find('blockspecificurls').each( function(index) {\r\n");
      out.write("\t\t\t\t\tvar lineStyle = '';\r\n");
      out.write("\t\t\t\t\tif (index%2 == 0)\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_odd\";\r\n");
      out.write("\t\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t\tlineStyle = \"list_even\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\ttableHtml += '<tr class=\"' + lineStyle + '\">';\r\n");
      out.write("\t\t\t\t\ttableHtml += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selecturl\" blockurl=\"' + $(this).find('blockurl').text() + '\" style=\"border: 0;\"></td>';\r\n");
      out.write("\t\t\t\t\ttableHtml += '<td>' + $(this).find('blockurl').text() + '</td>';\r\n");
      out.write("\t\t\t\t\ttableHtml += '</tr>';\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\ttableHtml += '</tbody>';\r\n");
      out.write("\t\t\t\ttableHtml += '</table>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjBlockSpecificUrlsList.html(tableHtml);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (blockSpecificUrlsFlag == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\t\tobjRowBlockSpecificUrls.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowBlockSpecificUrls.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 설정 정보 조회\", \"네트워크 서비스 제어 설정 정보 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tloadSystemControlConfigInfo = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objSystemPasswordSetupFlag = g_objTabSystemControlConfig.find('input[type=\"radio\"][name=\"systempasswordsetupflag\"]');\r\n");
      out.write("\t\tvar objSystemPasswordMinLength = g_objTabSystemControlConfig.find('#systempasswordminlength');\r\n");
      out.write("\t\tvar objSystemPasswordMaxLength = g_objTabSystemControlConfig.find('#systempasswordmaxlength');\r\n");
      out.write("\t\tvar objSystemPasswordExpirationFlag = g_objTabSystemControlConfig.find('input[type=\"radio\"][name=\"systempasswordexpirationflag\"]');\r\n");
      out.write("\t\tvar objSystemPasswordExpirationPeriod = g_objTabSystemControlConfig.find('select[name=\"systempasswordexpirationperiod\"]');\r\n");
      out.write("\t\tvar objScreenSaverActivationFlag = g_objTabSystemControlConfig.find('input[type=\"radio\"][name=\"screensaveractivationflag\"]');\r\n");
      out.write("\t\tvar objScreenSaverWaitingMinutes = g_objTabSystemControlConfig.find('select[name=\"screensaverwaitingminutes\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objRowSystemPasswordMinLength = g_objTabSystemControlConfig.find('#row-systempasswordminlength');\r\n");
      out.write("\t\tvar objRowSystemPasswordMaxLength = g_objTabSystemControlConfig.find('#row-systempasswordmaxlength');\r\n");
      out.write("\t\tvar objRowSystemPasswordExpirationPeriod = g_objTabSystemControlConfig.find('#row-systempasswordexpirationperiod');\r\n");
      out.write("\t\tvar objRowScreenSaverWaitingMinutes = g_objTabSystemControlConfig.find('#row-screensaverwaitingminutes');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objTreeReference = $.jstree._reference(g_objOrganizationTree);\r\n");
      out.write("\t\tvar selectedNode = objTreeReference.get_selected();\r\n");
      out.write("\r\n");
      out.write("\t\tvar postData =  \"\";\r\n");
      out.write("\t\tif (selectedNode.attr(\"node_type\") == 'company') {\r\n");
      out.write("\t\t\tpostData = getRequestCompanySystemControlConfigInfoParam(selectedNode.attr('companyid'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == 'dept') {\r\n");
      out.write("\t\t\tpostData = getRequestDeptSystemControlConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('deptcode'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == \"user\") {\r\n");
      out.write("\t\t\tpostData = getRequestUserSystemControlConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('userid'));\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tpostData = getRequestCompanySystemControlConfigInfoParam(\"\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\t//async: false,\r\n");
      out.write("\t\t\tbeforeSend: function() {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').block({ message: '<div style=\"height:20px;\"><img src=\"/images/processing.gif\" width=\"16\" height=\"16\" style=\"vertical-align: middle;\" /> <span style=\"position:relative; bottom: -1px;line-height: 20px;\">처리중...</span></div>', themedCSS: { margin: '0', padding: '0', 'min-width': '180px', 'width': '25%', height: '42px', backgroundColor: '#fff', border: '1px solid #aaa', color: '#fff', '-webkit-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', '-moz-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', 'box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)' }, overlayCSS: { backgroundColor:'#000', opacity: .3, cursor: 'wait' }, fadeIn: 0, fadeOut: 0 });\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcomplete: function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').unblock();\r\n");
      out.write("\t\t\t\t$('.inner-center .ui-layout-content').mCustomScrollbar('update');\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"시스템 제어 설정 정보 조회\", \"시스템 제어 설정 정보 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar systemPasswordSetupFlag = $(data).find('systempasswordsetupflag').text();\r\n");
      out.write("\t\t\t\tvar systemPasswordMinLength = $(data).find('systempasswordminlength').text();\r\n");
      out.write("\t\t\t\tvar systemPasswordMaxLength = $(data).find('systempasswordmaxlength').text();\r\n");
      out.write("\t\t\t\tvar systemPasswordExpirationFlag = $(data).find('systempasswordexpirationflag').text();\r\n");
      out.write("\t\t\t\tvar systemPasswordExpirationPeriod = $(data).find('systempasswordexpirationperiod').text();\r\n");
      out.write("\t\t\t\tvar screenSaverActivationFlag = $(data).find('screensaveractivationflag').text();\r\n");
      out.write("\t\t\t\tvar screenSaverWaitingMinutes = $(data).find('screensaverwaitingminutes').text();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjSystemPasswordSetupFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjSystemPasswordSetupFlag.filter('[value=' + systemPasswordSetupFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\t//objSystemPasswordMinLength.val(systemPasswordMinLength);\r\n");
      out.write("\t\t\t\tobjSystemPasswordMinLength.spinner(\"value\", systemPasswordMinLength);\r\n");
      out.write("\t\t\t\t//objSystemPasswordMaxLength.val(systemPasswordMaxLength);\r\n");
      out.write("\t\t\t\tobjSystemPasswordMaxLength.spinner(\"value\", systemPasswordMaxLength);\r\n");
      out.write("\t\t\t\tif (systemPasswordSetupFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tobjRowSystemPasswordMinLength.show();\r\n");
      out.write("\t\t\t\t\tobjRowSystemPasswordMaxLength.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowSystemPasswordMinLength.hide();\r\n");
      out.write("\t\t\t\t\tobjRowSystemPasswordMaxLength.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tobjSystemPasswordExpirationFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjSystemPasswordExpirationFlag.filter('[value=' + systemPasswordExpirationFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\tobjSystemPasswordExpirationPeriod.val(systemPasswordExpirationPeriod);\r\n");
      out.write("\t\t\t\t//objSystemPasswordExpirationPeriod.spinner(\"value\", systemPasswordExpirationPeriod);\r\n");
      out.write("\t\t\t\tif (systemPasswordExpirationFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tobjRowSystemPasswordExpirationPeriod.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowSystemPasswordExpirationPeriod.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tobjScreenSaverActivationFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjScreenSaverActivationFlag.filter('[value=' + screenSaverActivationFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\tobjScreenSaverWaitingMinutes.val(screenSaverWaitingMinutes);\r\n");
      out.write("\t\t\t\t//objScreenSaverWaitingMinutes.spinner(\"value\", screenSaverWaitingMinutes);\r\n");
      out.write("\t\t\t\tif (screenSaverActivationFlag == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\t\tobjRowScreenSaverWaitingMinutes.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowScreenSaverWaitingMinutes.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"시스템 제어 설정 정보 조회\", \"시스템 제어 설정 정보 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tloadWorkControlConfigInfo = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objSystemStartHours = g_objTabWorkControlConfig.find('select[name=\"systemstarthours\"]');\r\n");
      out.write("\t\tvar objSystemStartMinutes = g_objTabWorkControlConfig.find('select[name=\"systemstartminutes\"]');\r\n");
      out.write("\t\tvar objSystemEndHours = g_objTabWorkControlConfig.find('select[name=\"systemendhours\"]');\r\n");
      out.write("\t\tvar objSystemEndMinutes = g_objTabWorkControlConfig.find('select[name=\"systemendminutes\"]');\r\n");
      out.write("\t\tvar objWorkStartHours = g_objTabWorkControlConfig.find('select[name=\"workstarthours\"]');\r\n");
      out.write("\t\tvar objWorkStartMinutes = g_objTabWorkControlConfig.find('select[name=\"workstartminutes\"]');\r\n");
      out.write("\t\tvar objWorkEndHours = g_objTabWorkControlConfig.find('select[name=\"workendhours\"]');\r\n");
      out.write("\t\tvar objWorkEndMinutes = g_objTabWorkControlConfig.find('select[name=\"workendminutes\"]');\r\n");
      out.write("\t\tvar objAlertSystemEndAlarmFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"alertsystemendalarmflag\"]');\r\n");
      out.write("\t\tvar objSystemEndAlarmStart = g_objTabWorkControlConfig.find('select[name=\"systemendalarmstart\"]');\r\n");
      out.write("\t\tvar objSystemEndAlarmInterval = g_objTabWorkControlConfig.find('select[name=\"systemendalarminterval\"]');\r\n");
      out.write("\t\tvar objAlertWorkEndAlarmFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"alertworkendalarmflag\"]');\r\n");
      out.write("\t\tvar objWorkEndAlarmStart = g_objTabWorkControlConfig.find('select[name=\"workendalarmstart\"]');\r\n");
      out.write("\t\tvar objWorkEndAlarmInterval = g_objTabWorkControlConfig.find('select[name=\"workendalarminterval\"]');\r\n");
      out.write("\t\tvar objLockWhenIdleFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"lockwhenidleflag\"]');\r\n");
      out.write("\t\tvar objIdleTimeForLock = g_objTabWorkControlConfig.find('select[name=\"idletimeforlock\"]');\r\n");
      out.write("\t\tvar objPermitExtendedWorkFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"permitextendedworkflag\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objRowSystemEndAlarmStart = g_objTabWorkControlConfig.find('#row-systemendalarmstart');\r\n");
      out.write("\t\tvar objRowSystemEndAlarmInterval = g_objTabWorkControlConfig.find('#row-systemendalarminterval');\r\n");
      out.write("\t\tvar objRowWorkEndAlarmStart = g_objTabWorkControlConfig.find('#row-workendalarmstart');\r\n");
      out.write("\t\tvar objRowWorkEndAlarmInterval = g_objTabWorkControlConfig.find('#row-workendalarminterval');\r\n");
      out.write("\t\tvar objRowIdleTimeForLock = g_objTabWorkControlConfig.find('#row-idletimeforlock');\r\n");
      out.write("\r\n");
      out.write("\t\tvar objTreeReference = $.jstree._reference(g_objOrganizationTree);\r\n");
      out.write("\t\tvar selectedNode = objTreeReference.get_selected();\r\n");
      out.write("\r\n");
      out.write("\t\tvar postData =  \"\";\r\n");
      out.write("\t\tif (selectedNode.attr(\"node_type\") == 'company') {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyWorkControlConfigInfoParam(selectedNode.attr('companyid'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == 'dept') {\r\n");
      out.write("\t\t\tpostData = getRequestDeptWorkControlConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('deptcode'));\r\n");
      out.write("\t\t} else if (selectedNode.attr(\"node_type\") == \"user\") {\r\n");
      out.write("\t\t\tpostData = getRequestUserWorkControlConfigInfoParam(selectedNode.attr('companyid'), selectedNode.attr('userid'));\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tpostData = getRequestCompanyWorkControlConfigInfoParam(\"\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\t//async: false,\r\n");
      out.write("\t\t\tbeforeSend: function() {\r\n");
      out.write("\t\t\t\t$('#tab-agentconfig .ui-layout-content').block({ message: '<div style=\"height:20px;\"><img src=\"/images/processing.gif\" width=\"16\" height=\"16\" style=\"vertical-align: middle;\" /> <span style=\"position:relative; bottom: -1px;line-height: 20px;\">처리중...</span></div>', themedCSS: { margin: '0', padding: '0', 'min-width': '180px', 'width': '25%', height: '42px', backgroundColor: '#fff', border: '1px solid #aaa', color: '#fff', '-webkit-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', '-moz-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', 'box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)' }, overlayCSS: { backgroundColor:'#000', opacity: .3, cursor: 'wait' }, fadeIn: 0, fadeOut: 0 });\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcomplete: function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t$('#tab-agentconfig .ui-layout-content').unblock();\r\n");
      out.write("\t\t\t\t$('.inner-center .ui-layout-content').mCustomScrollbar('update');\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"업무 설정 설정 정보 조회\", \"업무 설정 설정 정보 조회 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar systemStartTime = $(data).find('systemstarttime').text();\r\n");
      out.write("\t\t\t\tvar systemEndTime = $(data).find('systemendtime').text();\r\n");
      out.write("\t\t\t\tvar workStartTime = $(data).find('workstarttime').text();\r\n");
      out.write("\t\t\t\tvar workEndTime = $(data).find('workendtime').text();\r\n");
      out.write("\t\t\t\tvar alertSystemEndAlarmFlag = $(data).find('alertsystemendalarmflag').text();\r\n");
      out.write("\t\t\t\tvar systemEndAlarmStart = $(data).find('systemendalarmstart').text();\r\n");
      out.write("\t\t\t\tvar systemEndAlarmInterval = $(data).find('systemendalarminterval').text();\r\n");
      out.write("\t\t\t\tvar alertWorkEndAlarmFlag = $(data).find('alertworkendalarmflag').text();\r\n");
      out.write("\t\t\t\tvar workEndAlarmStart = $(data).find('workendalarmstart').text();\r\n");
      out.write("\t\t\t\tvar workEndAlarmInterval = $(data).find('workendalarminterval').text();\r\n");
      out.write("\t\t\t\tvar lockWhenIdleFlag = $(data).find('lockwhenidleflag').text();\r\n");
      out.write("\t\t\t\tvar idleTimeForLock = $(data).find('idletimeforlock').text();\r\n");
      out.write("\t\t\t\tvar permitExtendedWorkFlag = $(data).find('permitextendedworkflag').text();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar arrSystemStartTime = systemStartTime.split(':');\r\n");
      out.write("\t\t\t\tvar systemStartHours = arrSystemStartTime[0];\r\n");
      out.write("\t\t\t\tvar systemStartMinutes = arrSystemStartTime[1];\r\n");
      out.write("\t\t\t\tvar arrSystemEndTime = systemEndTime.split(':');\r\n");
      out.write("\t\t\t\tvar systemEndHours = arrSystemEndTime[0];\r\n");
      out.write("\t\t\t\tvar systemEndMinutes = arrSystemEndTime[1];\r\n");
      out.write("\t\t\t\tvar arrWorkStartTime = workStartTime.split(':');\r\n");
      out.write("\t\t\t\tvar workStartHours = arrWorkStartTime[0];\r\n");
      out.write("\t\t\t\tvar workStartMinutes = arrWorkStartTime[1];\r\n");
      out.write("\t\t\t\tvar arrWorkEndTime = workEndTime.split(':');\r\n");
      out.write("\t\t\t\tvar workEndHours = arrWorkEndTime[0];\r\n");
      out.write("\t\t\t\tvar workEndMinutes = arrWorkEndTime[1];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjSystemStartHours.val(systemStartHours);\r\n");
      out.write("\t\t\t\tobjSystemStartMinutes.val(systemStartMinutes);\r\n");
      out.write("\t\t\t\tobjSystemEndHours.val(systemEndHours);\r\n");
      out.write("\t\t\t\tobjSystemEndMinutes.val(systemEndMinutes);\r\n");
      out.write("\t\t\t\tobjWorkStartHours.val(workStartHours);\r\n");
      out.write("\t\t\t\tobjWorkStartMinutes.val(workStartMinutes);\r\n");
      out.write("\t\t\t\tobjWorkEndHours.val(workEndHours);\r\n");
      out.write("\t\t\t\tobjWorkEndMinutes.val(workEndMinutes);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjAlertSystemEndAlarmFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjAlertSystemEndAlarmFlag.filter('[value=' + alertSystemEndAlarmFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\tobjSystemEndAlarmStart.val(systemEndAlarmStart);\r\n");
      out.write("\t\t\t\tobjSystemEndAlarmInterval.val(systemEndAlarmInterval);\r\n");
      out.write("\t\t\t\tif (alertSystemEndAlarmFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tobjRowSystemEndAlarmStart.show();\r\n");
      out.write("\t\t\t\t\tobjRowSystemEndAlarmInterval.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowSystemEndAlarmStart.hide();\r\n");
      out.write("\t\t\t\t\tobjRowSystemEndAlarmInterval.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjAlertWorkEndAlarmFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjAlertWorkEndAlarmFlag.filter('[value=' + alertWorkEndAlarmFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\tobjWorkEndAlarmStart.val(workEndAlarmStart);\r\n");
      out.write("\t\t\t\tobjWorkEndAlarmInterval.val(workEndAlarmInterval);\r\n");
      out.write("\t\t\t\tif (alertWorkEndAlarmFlag == '");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("') {\r\n");
      out.write("\t\t\t\t\tobjRowWorkEndAlarmStart.show();\r\n");
      out.write("\t\t\t\t\tobjRowWorkEndAlarmInterval.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowWorkEndAlarmStart.hide();\r\n");
      out.write("\t\t\t\t\tobjRowWorkEndAlarmInterval.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjLockWhenIdleFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjLockWhenIdleFlag.filter('[value=' + lockWhenIdleFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t\tobjIdleTimeForLock.val(idleTimeForLock);\r\n");
      out.write("\t\t\t\tif (lockWhenIdleFlag == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\t\tobjRowIdleTimeForLock.show();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tobjRowIdleTimeForLock.hide();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjPermitExtendedWorkFlag.prop('checked', false);\r\n");
      out.write("\t\t\t\tobjPermitExtendedWorkFlag.filter('[value=' + permitExtendedWorkFlag + ']').prop('checked', true);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"업무 설정 설정 정보 조회\", \"업무 설정 설정 정보 조회 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tsaveConfig = function(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig) {\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_selectedConfigTabIndex == TAB_DEFAULT_CONFIG) {\r\n");
      out.write("\t\t\tif (validateDefaultConfigData()) {\r\n");
      out.write("\t\t\t\tsaveDefaultConfig(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_PATTERN_CONFIG) {\r\n");
      out.write("\t\t\tsavePatternConfig(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig);\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_PRINT_CONTROL_CONFIG) {\r\n");
      out.write("\t\t\tif (validatePrintControlConfigData()) {\r\n");
      out.write("\t\t\t\tsavePrintControlConfig(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_WATERMARK_CONFIG) {\r\n");
      out.write("\t\t\tif (validateWaterMarkConfigData()) {\r\n");
      out.write("\t\t\t\tsaveWaterMarkConfig(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_MEDIA_CONTROL_CONFIG) {\r\n");
      out.write("\t\t\tif (validateMediaControlConfigData()) {\r\n");
      out.write("\t\t\t\tsaveMediaControlConfig(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_NETWORKSERVICE_CONTROL_CONFIG) {\r\n");
      out.write("\t\t\tif (validateNetworkServiceControlConfigData()) {\r\n");
      out.write("\t\t\t\tsaveNetworkServiceControlConfig(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_SYSTEM_CONTROL_CONFIG) {\r\n");
      out.write("\t\t\tif (validateSystemControlConfigData()) {\r\n");
      out.write("\t\t\t\tsaveSystemControlConfig(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} else if (g_selectedConfigTabIndex == TAB_WORK_CONTROL_CONFIG) {\r\n");
      out.write("\t\t\tif (validateWorkControlConfigData()) {\r\n");
      out.write("\t\t\t\tsaveWorkControlConfig(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tsaveDefaultConfig = function(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objJobProcessingType = g_objTabDefaultConfig.find('select[name=\"jobprocessingtype\"]');\r\n");
      out.write("\t\tvar objForcedTermination = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"forcedtermination\"]');\r\n");
      out.write("\t\tvar objForcedTerminationPwd = g_objTabDefaultConfig.find('input[name=\"forcedterminationpwd\"]');\r\n");
      out.write("\t\tvar objDecordingPermission = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"decordingpermission\"]');\r\n");
      out.write("\t\tvar objSafeExport = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"safeexport\"]');\r\n");
      out.write("\t\tvar objContentCopyPrevention = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"contentcopyprevention\"]');\r\n");
      out.write("\t\tvar objRealtimeObservation = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"realtimeobservation\"]');\r\n");
      out.write("\t\tvar objPasswordExpirationFlag = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"passwordexpirationflag\"]');\r\n");
      out.write("\t\tvar objPasswordExpirationPeriod = g_objTabDefaultConfig.find('input[name=\"passwordexpirationperiod\"]');\r\n");
      out.write("\t\tvar objExpiration = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"expiration\"]');\r\n");
      out.write("\t\tvar objExpirationPeriod = g_objTabDefaultConfig.find('input[name=\"expirationperiod\"]');\r\n");
      out.write("\t\tvar objExpirationJobProcessingType = g_objTabDefaultConfig.find('select[name=\"expirationjobprocessingtype\"]');\r\n");
      out.write("\t\tvar objUseServerOcrFlag = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"useserverocrflag\"]');\r\n");
      out.write("\t\tvar objOcrServerIpAddress = g_objTabDefaultConfig.find('input[name=\"ocrserveripaddress\"]');\r\n");
      out.write("\t\tvar objOcrServerPort = g_objTabDefaultConfig.find('input[name=\"ocrserverport\"]');\r\n");
      out.write("\t\tvar objExclusionSearchFolderList = g_objTabDefaultConfig.find('#exclusionsearchfolderlist');\r\n");
      out.write("\r\n");
      out.write("\t\tvar htDefaultConfigData = new Hashtable();\r\n");
      out.write("\t\thtDefaultConfigData.put(\"jobprocessingtype\", objJobProcessingType.val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"forcedterminationflag\", objForcedTermination.filter(':checked').val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"forcedterminationpwd\", objForcedTerminationPwd.val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"decordingpermissionflag\", objDecordingPermission.filter(':checked').val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"safeexportflag\", objSafeExport.filter(':checked').val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"contentcopypreventionflag\", objContentCopyPrevention.filter(':checked').val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"realtimeobservationflag\", objRealtimeObservation.filter(':checked').val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"passwordexpirationflag\", objPasswordExpirationFlag.filter(':checked').val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"passwordexpirationperiod\", objPasswordExpirationPeriod.val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"expirationflag\", objExpiration.filter(':checked').val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"expirationperiod\", objExpirationPeriod.val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"useserverocrflag\", objUseServerOcrFlag.filter(':checked').val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"ocrserveripaddress\", objOcrServerIpAddress.val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"ocrserverport\", objOcrServerPort.val());\r\n");
      out.write("\t\thtDefaultConfigData.put(\"expirationjobprocessingtype\", objExpirationJobProcessingType.val());\r\n");
      out.write("\r\n");
      out.write("\t\tvar arrExclusionSearchFolderList = new Array();\r\n");
      out.write("\t\tobjExclusionSearchFolderList.find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tarrExclusionSearchFolderList.push($(this).find('td:eq(1)').text());\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveCompanyConfig) {\r\n");
      out.write("\t\t\tvar arrCompanyList = new Array();\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"company\") {\r\n");
      out.write("\t\t\t\t\tarrCompanyList.push($(this).attr('companyid'));\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveCompanyDefaultConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrCompanyList,\r\n");
      out.write("\t\t\t\t\thtDefaultConfigData,\r\n");
      out.write("\t\t\t\t\tarrExclusionSearchFolderList);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사업장 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveDeptConfig) {\r\n");
      out.write("\t\t\tvar arrDeptList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrDept = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"dept\") {\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('deptcode'));\r\n");
      out.write("\t\t\t\t\tarrDeptList.push(arrDept);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveDeptDefaultConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrDeptList,\r\n");
      out.write("\t\t\t\t\thtDefaultConfigData,\r\n");
      out.write("\t\t\t\t\tarrExclusionSearchFolderList);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"부서 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveUserConfig) {\r\n");
      out.write("\t\t\tvar arrUserList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrUser = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"user\") {\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('userid'));\r\n");
      out.write("\t\t\t\t\tarrUserList.push(arrUser);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveUserDefaultConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrUserList,\r\n");
      out.write("\t\t\t\t\thtDefaultConfigData,\r\n");
      out.write("\t\t\t\t\tarrExclusionSearchFolderList);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사용자 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tdisplayInfoDialog($('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 저장\", \"정상 처리되었습니다.\", \"정상적으로 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 정보가 저장되었습니다.\");\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tsavePatternConfig = function(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar arrPatternList = new Array();\r\n");
      out.write("\r\n");
      out.write("\t\tg_objTabPatternConfig.find('#patterninfo input:checkbox[name=\"checkboxpattern\"]').each( function () {\r\n");
      out.write("\t\t\tvar arrPattern = new Array();\r\n");
      out.write("\t\t\tarrPattern.push($(this).attr('patternid'));\r\n");
      out.write("\t\t\tarrPattern.push($(this).attr('patternsubid'));\r\n");
      out.write("\t\t\tif ($(this).is(\":checked\")){\r\n");
      out.write("\t\t\t\tarrPattern.push(\"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\");\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tarrPattern.push(\"");
      out.print(OptionType.OPTION_TYPE_NO);
      out.write("\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tarrPattern.push($(this).closest(\".category-pattern\").find(\"#jobprocessingactivecount\").spinner(\"value\"));\r\n");
      out.write("\t\t\tarrPatternList.push(arrPattern);\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveCompanyConfig) {\r\n");
      out.write("\t\t\tvar arrCompanyList = new Array();\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"company\") {\r\n");
      out.write("\t\t\t\t\tarrCompanyList.push($(this).attr('companyid'));\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveCompanyPatternConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrCompanyList,\r\n");
      out.write("\t\t\t\t\tarrPatternList);\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사업장 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveDeptConfig) {\r\n");
      out.write("\t\t\tvar arrDeptList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrDept = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"dept\") {\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('deptcode'));\r\n");
      out.write("\t\t\t\t\tarrDeptList.push(arrDept);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveDeptPatternConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrDeptList,\r\n");
      out.write("\t\t\t\t\tarrPatternList);\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"부서 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveUserConfig) {\r\n");
      out.write("\t\t\tvar arrUserList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrUser = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"user\") {\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('userid'));\r\n");
      out.write("\t\t\t\t\tarrUserList.push(arrUser);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveUserPatternConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrUserList,\r\n");
      out.write("\t\t\t\t\tarrPatternList);\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사용자 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tdisplayInfoDialog($('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 저장\", \"정상 처리되었습니다.\", \"정상적으로 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 정보가 저장되었습니다.\");\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tsavePrintControlConfig = function(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objPrintControlFlag = g_objTabPrintControlConfig.find('input[type=\"radio\"][name=\"printcontrolflag\"]');\r\n");
      out.write("\t\tvar objPrintLimitFlag = g_objTabPrintControlConfig.find('input[type=\"radio\"][name=\"printlimitflag\"]');\r\n");
      out.write("\t\tvar objPrintLimitType = g_objTabPrintControlConfig.find('select[name=\"printlimittype\"]');\r\n");
      out.write("\t\tvar objPrintLimitCount = g_objTabPrintControlConfig.find('input[name=\"printlimitcount\"]');\r\n");
      out.write("\t\tvar objMaskingFlag = g_objTabPrintControlConfig.find('input[type=\"radio\"][name=\"maskingflag\"]');\r\n");
      out.write("\t\tvar objMaskingType = g_objTabPrintControlConfig.find('select[name=\"maskingtype\"]');\r\n");
      out.write("\t\tvar objJuminSexNotMaskingFlag = g_objTabPrintControlConfig.find('input[type=\"checkbox\"][name=\"juminsexnotmaskingflag\"]');\r\n");
      out.write("\t\tvar objLogCollectorIpAddress = g_objTabPrintControlConfig.find('input[name=\"logcollectoripaddress\"]');\r\n");
      out.write("\t\tvar objLogCollectorPortNo = g_objTabPrintControlConfig.find('input[name=\"logcollectorportno\"]');\r\n");
      out.write("\t\tvar objLogCollectorAccountId = g_objTabPrintControlConfig.find('input[name=\"logcollectoraccountid\"]');\r\n");
      out.write("\t\tvar objLogCollectorAccountPwd = g_objTabPrintControlConfig.find('input[name=\"logcollectoraccountpwd\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tvar htPrintControlConfigData = new Hashtable();\r\n");
      out.write("\t\thtPrintControlConfigData.put(\"printcontrolflag\", objPrintControlFlag.filter(':checked').val());\r\n");
      out.write("\t\thtPrintControlConfigData.put(\"printlimitflag\", objPrintLimitFlag.filter(':checked').val());\r\n");
      out.write("\t\thtPrintControlConfigData.put(\"printlimittype\", objPrintLimitType.val());\r\n");
      out.write("\t\thtPrintControlConfigData.put(\"printlimitcount\", objPrintLimitCount.val());\r\n");
      out.write("\t\thtPrintControlConfigData.put(\"maskingflag\", objMaskingFlag.filter(':checked').val());\r\n");
      out.write("\t\thtPrintControlConfigData.put(\"maskingtype\", objMaskingType.val());\r\n");
      out.write("\t\tvar juminSexNotMaskingFlag;\r\n");
      out.write("\t\tif(objJuminSexNotMaskingFlag.is(':checked')) {\r\n");
      out.write("\t\t\tjuminSexNotMaskingFlag = \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\";\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tjuminSexNotMaskingFlag = \"");
      out.print(OptionType.OPTION_TYPE_NO);
      out.write("\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\thtPrintControlConfigData.put(\"juminsexnotmaskingflag\", juminSexNotMaskingFlag);\r\n");
      out.write("\t\thtPrintControlConfigData.put(\"logcollectoripaddress\", objLogCollectorIpAddress.val());\r\n");
      out.write("\t\thtPrintControlConfigData.put(\"logcollectorportno\", objLogCollectorPortNo.val());\r\n");
      out.write("\t\thtPrintControlConfigData.put(\"logcollectoraccountid\", objLogCollectorAccountId.val());\r\n");
      out.write("\t\thtPrintControlConfigData.put(\"logcollectoraccountpwd\", objLogCollectorAccountPwd.val());\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveCompanyConfig) {\r\n");
      out.write("\t\t\tvar arrCompanyList = new Array();\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"company\") {\r\n");
      out.write("\t\t\t\t\tarrCompanyList.push($(this).attr('companyid'));\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveCompanyPrintControlConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrCompanyList,\r\n");
      out.write("\t\t\t\t\thtPrintControlConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사업장 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveDeptConfig) {\r\n");
      out.write("\t\t\tvar arrDeptList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrDept = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"dept\") {\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('deptcode'));\r\n");
      out.write("\t\t\t\t\tarrDeptList.push(arrDept);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveDeptPrintControlConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrDeptList,\r\n");
      out.write("\t\t\t\t\thtPrintControlConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"부서 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveUserConfig) {\r\n");
      out.write("\t\t\tvar arrUserList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrUser = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"user\") {\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('userid'));\r\n");
      out.write("\t\t\t\t\tarrUserList.push(arrUser);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveUserPrintControlConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrUserList,\r\n");
      out.write("\t\t\t\t\thtPrintControlConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사용자 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tdisplayInfoDialog($('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 저장\", \"정상 처리되었습니다.\", \"정상적으로 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 정보가 저장되었습니다.\");\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tsaveWaterMarkConfig = function(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objWmPrintMode = g_objTabWaterMarkConfig.find('select[name=\"wmprintmode\"]');\r\n");
      out.write("\t\tvar objWm3StepWaterMark = g_objTabWaterMarkConfig.find('select[name=\"wm3stepwatermark\"]');\r\n");
      out.write("\t\tvar objWmTextRepeatSize = g_objTabWaterMarkConfig.find('select[name=\"wmtextrepeatsize\"]');\r\n");
      out.write("\t\tvar objWmOutlineMode = g_objTabWaterMarkConfig.find('select[name=\"wmoutlinemode\"]');\r\n");
      out.write("\t\tvar objWmPrintTime = g_objTabWaterMarkConfig.find('select[name=\"wmprinttime\"]');\r\n");
      out.write("\t\tvar objWmTextMain = g_objTabWaterMarkConfig.find('input[name=\"wmtextmain\"]');\r\n");
      out.write("\t\tvar objWmTextSub = g_objTabWaterMarkConfig.find('input[name=\"wmtextsub\"]');\r\n");
      out.write("\t\tvar objWmTextTopLeft = g_objTabWaterMarkConfig.find('input[name=\"wmtexttopleft\"]');\r\n");
      out.write("\t\tvar objWmTextTopRight = g_objTabWaterMarkConfig.find('input[name=\"wmtexttopright\"]');\r\n");
      out.write("\t\tvar objWmTextBottomLeft = g_objTabWaterMarkConfig.find('input[name=\"wmtextbottomleft\"]');\r\n");
      out.write("\t\tvar objWmTextBottomRight = g_objTabWaterMarkConfig.find('input[name=\"wmtextbottomright\"]');\r\n");
      out.write("\t\tvar objWmMainFontName = g_objTabWaterMarkConfig.find('select[name=\"wmmainfontname\"]');\r\n");
      out.write("\t\tvar objWmMainFontSize = g_objTabWaterMarkConfig.find('select[name=\"wmmainfontsize\"]');\r\n");
      out.write("\t\tvar objWmMainFontStyle = g_objTabWaterMarkConfig.find('select[name=\"wmmainfontstyle\"]');\r\n");
      out.write("\t\tvar objWmSubFontName = g_objTabWaterMarkConfig.find('select[name=\"wmsubfontname\"]');\r\n");
      out.write("\t\tvar objWmSubFontSize = g_objTabWaterMarkConfig.find('select[name=\"wmsubfontsize\"]');\r\n");
      out.write("\t\tvar objWmSubFontStyle = g_objTabWaterMarkConfig.find('select[name=\"wmsubfontstyle\"]');\r\n");
      out.write("\t\tvar objWmTextFontName = g_objTabWaterMarkConfig.find('select[name=\"wmtextfontname\"]');\r\n");
      out.write("\t\tvar objWmTextFontSize = g_objTabWaterMarkConfig.find('select[name=\"wmtextfontsize\"]');\r\n");
      out.write("\t\tvar objWmTextFontStyle = g_objTabWaterMarkConfig.find('select[name=\"wmtextfontstyle\"]');\r\n");
      out.write("\t\tvar objWmFontMainAngle = g_objTabWaterMarkConfig.find('input[name=\"wmfontmainangle\"]');\r\n");
      out.write("\t\tvar objWmFontDensityMain = g_objTabWaterMarkConfig.find('select[name=\"wmfontdensitymain\"]');\r\n");
      out.write("\t\tvar objWmFontDensityText = g_objTabWaterMarkConfig.find('select[name=\"wmfontdensitytext\"]');\r\n");
      out.write("\t\tvar objWmBackgroundMode = g_objTabWaterMarkConfig.find('select[name=\"wmbackgroundmode\"]');\r\n");
      out.write("\t\tvar objWmBackgroundImage = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimage\"]');\r\n");
      out.write("\t\tvar objWmBackgroundPositionX = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundpositionx\"]');\r\n");
      out.write("\t\tvar objWmBackgroundPositionY = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundpositiony\"]');\r\n");
      out.write("\t\tvar objWmBackgroundImageWidth = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimagewidth\"]');\r\n");
      out.write("\t\tvar objWmBackgroundImageHeight = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimageheight\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tvar htWaterMarkConfigData = new Hashtable();\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmprintmode\", objWmPrintMode.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wm3stepwatermark\", objWm3StepWaterMark.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmtextrepeatsize\", objWmTextRepeatSize.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmoutlinemode\", objWmOutlineMode.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmprinttime\", objWmPrintTime.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmtextmain\", objWmTextMain.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmtextsub\", objWmTextSub.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmtexttopleft\", objWmTextTopLeft.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmtexttopright\", objWmTextTopRight.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmtextbottomleft\", objWmTextBottomLeft.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmtextbottomright\", objWmTextBottomRight.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmmainfontname\", objWmMainFontName.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmmainfontsize\", objWmMainFontSize.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmmainfontstyle\", objWmMainFontStyle.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmsubfontname\", objWmSubFontName.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmsubfontsize\", objWmSubFontSize.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmsubfontstyle\", objWmSubFontStyle.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmtextfontname\", objWmTextFontName.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmtextfontsize\", objWmTextFontSize.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmtextfontstyle\", objWmTextFontStyle.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmfontmainangle\", objWmFontMainAngle.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmfontdensitymain\", objWmFontDensityMain.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmfontdensitytext\", objWmFontDensityText.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmbackgroundmode\", objWmBackgroundMode.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmbackgroundimage\", objWmBackgroundImage.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmbackgroundpositionx\", objWmBackgroundPositionX.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmbackgroundpositiony\", objWmBackgroundPositionY.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmbackgroundimagewidth\", objWmBackgroundImageWidth.val());\r\n");
      out.write("\t\thtWaterMarkConfigData.put(\"wmbackgroundimageheight\", objWmBackgroundImageHeight.val());\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveCompanyConfig) {\r\n");
      out.write("\t\t\tvar arrCompanyList = new Array();\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"company\") {\r\n");
      out.write("\t\t\t\t\tarrCompanyList.push($(this).attr('companyid'));\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveCompanyWaterMarkConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrCompanyList,\r\n");
      out.write("\t\t\t\t\thtWaterMarkConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사업장 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveDeptConfig) {\r\n");
      out.write("\t\t\tvar arrDeptList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrDept = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"dept\") {\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('deptcode'));\r\n");
      out.write("\t\t\t\t\tarrDeptList.push(arrDept);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveDeptWaterMarkConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrDeptList,\r\n");
      out.write("\t\t\t\t\thtWaterMarkConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"부서 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveUserConfig) {\r\n");
      out.write("\t\t\tvar arrUserList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrUser = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"user\") {\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('userid'));\r\n");
      out.write("\t\t\t\t\tarrUserList.push(arrUser);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveUserWaterMarkConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrUserList,\r\n");
      out.write("\t\t\t\t\thtWaterMarkConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사용자 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tdisplayInfoDialog($('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 저장\", \"정상 처리되었습니다.\", \"정상적으로 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 정보가 저장되었습니다.\");\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tsaveMediaControlConfig = function(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objUsbControlFlag = g_objTabMediaControlConfig.find('input[type=\"radio\"][name=\"usbcontrolflag\"]');\r\n");
      out.write("\t\tvar objUsbControlType = g_objTabMediaControlConfig.find('select[name=\"usbcontroltype\"]');\r\n");
      out.write("\t\tvar objCdRomControlFlag = g_objTabMediaControlConfig.find('input[type=\"radio\"][name=\"cdromcontrolflag\"]');\r\n");
      out.write("\t\tvar objCdRomControlType = g_objTabMediaControlConfig.find('select[name=\"cdromcontroltype\"]');\r\n");
      out.write("\t\tvar objPublicFolderControlFlag = g_objTabMediaControlConfig.find('input[type=\"radio\"][name=\"publicfoldercontrolflag\"]');\r\n");
      out.write("\t\tvar objPublicFolderControlType = g_objTabMediaControlConfig.find('select[name=\"publicfoldercontroltype\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tvar htMediaControlConfigData = new Hashtable();\r\n");
      out.write("\t\thtMediaControlConfigData.put(\"usbcontrolflag\", objUsbControlFlag.filter(':checked').val());\r\n");
      out.write("\t\thtMediaControlConfigData.put(\"usbcontroltype\", objUsbControlType.val());\r\n");
      out.write("\t\thtMediaControlConfigData.put(\"cdromcontrolflag\", objCdRomControlFlag.filter(':checked').val());\r\n");
      out.write("\t\thtMediaControlConfigData.put(\"cdromcontroltype\", objCdRomControlType.val());\r\n");
      out.write("\t\thtMediaControlConfigData.put(\"publicfoldercontrolflag\", objPublicFolderControlFlag.filter(':checked').val());\r\n");
      out.write("\t\thtMediaControlConfigData.put(\"publicfoldercontroltype\", objPublicFolderControlType.val());\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveCompanyConfig) {\r\n");
      out.write("\t\t\tvar arrCompanyList = new Array();\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"company\") {\r\n");
      out.write("\t\t\t\t\tarrCompanyList.push($(this).attr('companyid'));\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveCompanyMediaControlConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrCompanyList,\r\n");
      out.write("\t\t\t\t\thtMediaControlConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사업장 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveDeptConfig) {\r\n");
      out.write("\t\t\tvar arrDeptList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrDept = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"dept\") {\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('deptcode'));\r\n");
      out.write("\t\t\t\t\tarrDeptList.push(arrDept);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveDeptMediaControlConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrDeptList,\r\n");
      out.write("\t\t\t\t\thtMediaControlConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"부서 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveUserConfig) {\r\n");
      out.write("\t\t\tvar arrUserList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrUser = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"user\") {\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('userid'));\r\n");
      out.write("\t\t\t\t\tarrUserList.push(arrUser);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveUserMediaControlConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrUserList,\r\n");
      out.write("\t\t\t\t\thtMediaControlConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사용자 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tdisplayInfoDialog($('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 저장\", \"정상 처리되었습니다.\", \"정상적으로 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 정보가 저장되었습니다.\");\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tsaveNetworkServiceControlConfig = function(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objNetworkServiceControlFlag = g_objTabNetworkServiceControlConfig.find('input[type=\"radio\"][name=\"networkservicecontrolflag\"]');\r\n");
      out.write("\t\tvar objBlockSpecificUrlsFlag = g_objTabNetworkServiceControlConfig.find('input[type=\"radio\"][name=\"blockspecificurlsflag\"]');\r\n");
      out.write("\t\tvar objBlockSpecificUrlsList = g_objTabNetworkServiceControlConfig.find('#blockspecificurlslist');\r\n");
      out.write("\r\n");
      out.write("\t\tvar htNetworkServiceControlConfigData = new Hashtable();\r\n");
      out.write("\t\thtNetworkServiceControlConfigData.put(\"networkservicecontrolflag\", objNetworkServiceControlFlag.filter(':checked').val());\r\n");
      out.write("\t\thtNetworkServiceControlConfigData.put(\"blockspecificurlsflag\", objBlockSpecificUrlsFlag.filter(':checked').val());\r\n");
      out.write("\r\n");
      out.write("\t\tvar arrEmailControlProgramList = new Array();\r\n");
      out.write("\t\tg_objTabEmail.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tvar arrProgram = new Array();\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(1)').text());\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(2)').text());\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(3)').find('select[name=\"controltype\"]').val());\r\n");
      out.write("\t\t\tarrEmailControlProgramList.push(arrProgram);\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar arrFtpControlProgramList = new Array();\r\n");
      out.write("\t\tg_objTabFtp.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tvar arrProgram = new Array();\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(1)').text());\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(2)').text());\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(3)').find('select[name=\"controltype\"]').val());\r\n");
      out.write("\t\t\tarrFtpControlProgramList.push(arrProgram);\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar arrP2pControlProgramList = new Array();\r\n");
      out.write("\t\tg_objTabP2p.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tvar arrProgram = new Array();\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(1)').text());\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(2)').text());\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(3)').find('select[name=\"controltype\"]').val());\r\n");
      out.write("\t\t\tarrP2pControlProgramList.push(arrProgram);\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar arrMessengerControlProgramList = new Array();\r\n");
      out.write("\t\tg_objTabMessenger.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tvar arrProgram = new Array();\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(1)').text());\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(2)').text());\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(3)').find('select[name=\"controltype\"]').val());\r\n");
      out.write("\t\t\tarrMessengerControlProgramList.push(arrProgram);\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar arrCaptureControlProgramList = new Array();\r\n");
      out.write("\t\tg_objTabCapture.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tvar arrProgram = new Array();\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(1)').text());\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(2)').text());\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(3)').find('select[name=\"controltype\"]').val());\r\n");
      out.write("\t\t\tarrCaptureControlProgramList.push(arrProgram);\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar arrEtcControlProgramList = new Array();\r\n");
      out.write("\t\tg_objTabEtc.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tvar arrProgram = new Array();\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(1)').text());\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(2)').text());\r\n");
      out.write("\t\t\tarrProgram.push($(this).find('td:eq(3)').find('select[name=\"controltype\"]').val());\r\n");
      out.write("\t\t\tarrEtcControlProgramList.push(arrProgram);\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar arrBlockSpecificUrlsList = new Array();\r\n");
      out.write("\t\tobjBlockSpecificUrlsList.find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tarrBlockSpecificUrlsList.push($(this).find('td:eq(1)').text());\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveCompanyConfig) {\r\n");
      out.write("\t\t\tvar arrCompanyList = new Array();\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"company\") {\r\n");
      out.write("\t\t\t\t\tarrCompanyList.push($(this).attr('companyid'));\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveCompanyNetworkServiceControlConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrCompanyList,\r\n");
      out.write("\t\t\t\t\thtNetworkServiceControlConfigData,\r\n");
      out.write("\t\t\t\t\tarrEmailControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrFtpControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrP2pControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrMessengerControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrCaptureControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrEtcControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrBlockSpecificUrlsList);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사업장 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveDeptConfig) {\r\n");
      out.write("\t\t\tvar arrDeptList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrDept = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"dept\") {\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('deptcode'));\r\n");
      out.write("\t\t\t\t\tarrDeptList.push(arrDept);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveDeptNetworkServiceControlConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrDeptList,\r\n");
      out.write("\t\t\t\t\thtNetworkServiceControlConfigData,\r\n");
      out.write("\t\t\t\t\tarrEmailControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrFtpControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrP2pControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrMessengerControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrCaptureControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrEtcControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrBlockSpecificUrlsList);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"부서 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveUserConfig) {\r\n");
      out.write("\t\t\tvar arrUserList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrUser = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"user\") {\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('userid'));\r\n");
      out.write("\t\t\t\t\tarrUserList.push(arrUser);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveUserNetworkServiceControlConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrUserList,\r\n");
      out.write("\t\t\t\t\thtNetworkServiceControlConfigData,\r\n");
      out.write("\t\t\t\t\tarrEmailControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrFtpControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrP2pControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrMessengerControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrCaptureControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrEtcControlProgramList,\r\n");
      out.write("\t\t\t\t\tarrBlockSpecificUrlsList);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사용자 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tdisplayInfoDialog($('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 저장\", \"정상 처리되었습니다.\", \"정상적으로 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 정보가 저장되었습니다.\");\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tsaveSystemControlConfig = function(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objSystemPasswordSetupFlag = g_objTabSystemControlConfig.find('input[type=\"radio\"][name=\"systempasswordsetupflag\"]');\r\n");
      out.write("\t\tvar objSystemPasswordMinLength = g_objTabSystemControlConfig.find('#systempasswordminlength');\r\n");
      out.write("\t\tvar objSystemPasswordMaxLength = g_objTabSystemControlConfig.find('#systempasswordmaxlength');\r\n");
      out.write("\t\tvar objSystemPasswordExpirationFlag = g_objTabSystemControlConfig.find('input[type=\"radio\"][name=\"systempasswordexpirationflag\"]');\r\n");
      out.write("\t\tvar objSystemPasswordExpirationPeriod = g_objTabSystemControlConfig.find('select[name=\"systempasswordexpirationperiod\"]');\r\n");
      out.write("\t\tvar objScreenSaverActivationFlag = g_objTabSystemControlConfig.find('input[type=\"radio\"][name=\"screensaveractivationflag\"]');\r\n");
      out.write("\t\tvar objScreenSaverWaitingMinutes = g_objTabSystemControlConfig.find('select[name=\"screensaverwaitingminutes\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tvar htSystemControlConfigData = new Hashtable();\r\n");
      out.write("\t\thtSystemControlConfigData.put(\"systempasswordsetupflag\", objSystemPasswordSetupFlag.filter(':checked').val());\r\n");
      out.write("\t\thtSystemControlConfigData.put(\"systempasswordminlength\", objSystemPasswordMinLength.spinner(\"value\"));\r\n");
      out.write("\t\thtSystemControlConfigData.put(\"systempasswordmaxlength\", objSystemPasswordMaxLength.spinner(\"value\"));\r\n");
      out.write("\t\thtSystemControlConfigData.put(\"systempasswordexpirationflag\", objSystemPasswordExpirationFlag.filter(':checked').val());\r\n");
      out.write("\t\thtSystemControlConfigData.put(\"systempasswordexpirationperiod\", objSystemPasswordExpirationPeriod.val());\r\n");
      out.write("\t\thtSystemControlConfigData.put(\"screensaveractivationflag\", objScreenSaverActivationFlag.filter(':checked').val());\r\n");
      out.write("\t\thtSystemControlConfigData.put(\"screensaverwaitingminutes\", objScreenSaverWaitingMinutes.val());\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveCompanyConfig) {\r\n");
      out.write("\t\t\tvar arrCompanyList = new Array();\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"company\") {\r\n");
      out.write("\t\t\t\t\tarrCompanyList.push($(this).attr('companyid'));\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveCompanySystemControlConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrCompanyList,\r\n");
      out.write("\t\t\t\t\thtSystemControlConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사업장 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveDeptConfig) {\r\n");
      out.write("\t\t\tvar arrDeptList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrDept = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"dept\") {\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('deptcode'));\r\n");
      out.write("\t\t\t\t\tarrDeptList.push(arrDept);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveDeptSystemControlConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrDeptList,\r\n");
      out.write("\t\t\t\t\thtSystemControlConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"부서 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveUserConfig) {\r\n");
      out.write("\t\t\tvar arrUserList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrUser = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"user\") {\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('userid'));\r\n");
      out.write("\t\t\t\t\tarrUserList.push(arrUser);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveUserSystemControlConfigParam('");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrUserList,\r\n");
      out.write("\t\t\t\t\thtSystemControlConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사용자 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tdisplayInfoDialog($('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 저장\", \"정상 처리되었습니다.\", \"정상적으로 \" + $('#tab-clientconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 정보가 저장되었습니다.\");\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tsaveWorkControlConfig = function(bSaveCompanyConfig, bSaveDeptConfig, bSaveUserConfig) {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objSystemStartHours = g_objTabWorkControlConfig.find('select[name=\"systemstarthours\"]');\r\n");
      out.write("\t\tvar objSystemStartMinutes = g_objTabWorkControlConfig.find('select[name=\"systemstartminutes\"]');\r\n");
      out.write("\t\tvar objSystemEndHours = g_objTabWorkControlConfig.find('select[name=\"systemendhours\"]');\r\n");
      out.write("\t\tvar objSystemEndMinutes = g_objTabWorkControlConfig.find('select[name=\"systemendminutes\"]');\r\n");
      out.write("\t\tvar objWorkStartHours = g_objTabWorkControlConfig.find('select[name=\"workstarthours\"]');\r\n");
      out.write("\t\tvar objWorkStartMinutes = g_objTabWorkControlConfig.find('select[name=\"workstartminutes\"]');\r\n");
      out.write("\t\tvar objWorkEndHours = g_objTabWorkControlConfig.find('select[name=\"workendhours\"]');\r\n");
      out.write("\t\tvar objWorkEndMinutes = g_objTabWorkControlConfig.find('select[name=\"workendminutes\"]');\r\n");
      out.write("\t\tvar objAlertSystemEndAlarmFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"alertsystemendalarmflag\"]');\r\n");
      out.write("\t\tvar objSystemEndAlarmStart = g_objTabWorkControlConfig.find('select[name=\"systemendalarmstart\"]');\r\n");
      out.write("\t\tvar objSystemEndAlarmInterval = g_objTabWorkControlConfig.find('select[name=\"systemendalarminterval\"]');\r\n");
      out.write("\t\tvar objAlertWorkEndAlarmFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"alertworkendalarmflag\"]');\r\n");
      out.write("\t\tvar objWorkEndAlarmStart = g_objTabWorkControlConfig.find('select[name=\"workendalarmstart\"]');\r\n");
      out.write("\t\tvar objWorkEndAlarmInterval = g_objTabWorkControlConfig.find('select[name=\"workendalarminterval\"]');\r\n");
      out.write("\t\tvar objLockWhenIdleFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"lockwhenidleflag\"]');\r\n");
      out.write("\t\tvar objIdleTimeForLock = g_objTabWorkControlConfig.find('select[name=\"idletimeforlock\"]');\r\n");
      out.write("\t\tvar objPermitExtendedWorkFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"permitextendedworkflag\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tvar htWorkControlConfigData = new Hashtable();\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"systemstarttime\", objSystemStartHours.val() + \":\" + objSystemStartMinutes.val() + \":00\");\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"systemendtime\", objSystemEndHours.val() + \":\" + objSystemEndMinutes.val() + \":00\");\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"workstarttime\", objWorkStartHours.val() + \":\" + objWorkStartMinutes.val() + \":00\");\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"workendtime\", objWorkEndHours.val() + \":\" + objWorkEndMinutes.val() + \":00\");\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"alertsystemendalarmflag\", objAlertSystemEndAlarmFlag.filter(':checked').val());\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"systemendalarmstart\", objSystemEndAlarmStart.val());\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"systemendalarminterval\", objSystemEndAlarmInterval.val());\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"alertworkendalarmflag\", objAlertWorkEndAlarmFlag.filter(':checked').val());\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"workendalarmstart\", objWorkEndAlarmStart.val());\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"workendalarminterval\", objWorkEndAlarmInterval.val());\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"lockwhenidleflag\", objLockWhenIdleFlag.filter(':checked').val());\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"idletimeforlock\", objIdleTimeForLock.val());\r\n");
      out.write("\t\thtWorkControlConfigData.put(\"permitextendedworkflag\", objPermitExtendedWorkFlag.filter(':checked').val());\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveCompanyConfig) {\r\n");
      out.write("\t\t\tvar arrCompanyList = new Array();\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"company\") {\r\n");
      out.write("\t\t\t\t\tarrCompanyList.push($(this).attr('companyid'));\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveCompanyWorkControlConfigParam(\r\n");
      out.write("\t\t\t\t\t'");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrCompanyList,\r\n");
      out.write("\t\t\t\t\thtWorkControlConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사업장 \" + $('#tab-agentconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveDeptConfig) {\r\n");
      out.write("\t\t\tvar arrDeptList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrDept = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"dept\") {\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrDept.push($(this).attr('deptcode'));\r\n");
      out.write("\t\t\t\t\tarrDeptList.push(arrDept);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveDeptWorkControlConfigParam(\r\n");
      out.write("\t\t\t\t\t'");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrDeptList,\r\n");
      out.write("\t\t\t\t\thtWorkControlConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"부서 \" + $('#tab-agentconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (bSaveUserConfig) {\r\n");
      out.write("\t\t\tvar arrUserList = new Array();\r\n");
      out.write("\t\t\tg_objOrganizationTree.find(\".jstree-checked\").each( function(i, node) {\r\n");
      out.write("\t\t\t\tvar arrUser = new Array();\r\n");
      out.write("\t\t\t\tif ($(node).attr('node_type') == \"user\") {\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('companyid'));\r\n");
      out.write("\t\t\t\t\tarrUser.push($(this).attr('userid'));\r\n");
      out.write("\t\t\t\t\tarrUserList.push(arrUser);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar postData = getRequestSaveUserWorkControlConfigParam(\r\n");
      out.write("\t\t\t\t\t'");
      out.print((String)session.getAttribute("ADMINID"));
      out.write("',\r\n");
      out.write("\t\t\t\t\tarrUserList,\r\n");
      out.write("\t\t\t\t\thtWorkControlConfigData);\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!saveConfigProcess(\"사용자 \" + $('#tab-agentconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text(), postData)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tdisplayInfoDialog($('#tab-agentconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 저장\", \"정상 처리되었습니다.\", \"정상적으로 \" + $('#tab-agentconfig li:eq(' + g_selectedConfigTabIndex + ')').find('a').text() + \" 정보가 저장되었습니다.\");\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tsaveConfigProcess = function(saveTarget, postData) {\r\n");
      out.write("\t\tvar bResult = false;\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\turl: \"/CommandService\",\r\n");
      out.write("\t\t\tdata: $.param({sendmsg : postData}),\r\n");
      out.write("\t\t\tdataType: \"xml\",\r\n");
      out.write("\t\t\tcache: false,\r\n");
      out.write("\t\t\tasync: false,\r\n");
      out.write("\t\t\tbeforeSend: function() {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').block({ message: '<div style=\"height:20px;\"><img src=\"/images/processing.gif\" width=\"16\" height=\"16\" style=\"vertical-align: middle;\" /> <span style=\"position:relative; bottom: -1px;line-height: 20px;\">처리중...</span></div>', themedCSS: { margin: '0', padding: '0', 'min-width': '180px', 'width': '25%', height: '42px', backgroundColor: '#fff', border: '1px solid #aaa', color: '#fff', '-webkit-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', '-moz-box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)', 'box-shadow': '4px 4px 4px 0px rgba(0,0,0,0.55)' }, overlayCSS: { backgroundColor:'#000', opacity: .3, cursor: 'wait' }, fadeIn: 0, fadeOut: 0 });\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcomplete: function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t$('#tab-clientconfig .ui-layout-content').unblock();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess: function(data, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\tif ($(data).find('errorcode').text() != \"0000\") {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(saveTarget + \" 저장\", saveTarget + \" 저장 중 오류가 발생하였습니다.\", $(data).find('errormsg').text());\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tbResult = true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tif (jqXHR.status != 0 && jqXHR.readyState != 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(saveTarget + \" 저장\", saveTarget + \" 정보 저장 중 오류가 발생하였습니다.\", jqXHR.statusText + \"(\" + jqXHR.status + \")\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\treturn bResult;\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tvalidateDefaultConfigData = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objJobProcessingType = g_objTabDefaultConfig.find('select[name=\"jobprocessingtype\"]');\r\n");
      out.write("\t\tvar objForcedTermination = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"forcedtermination\"]');\r\n");
      out.write("\t\tvar objForcedTerminationPwd = g_objTabDefaultConfig.find('input[name=\"forcedterminationpwd\"]');\r\n");
      out.write("\t\tvar objDecordingPermission = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"decordingpermission\"]');\r\n");
      out.write("\t\tvar objSafeExport = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"safeexport\"]');\r\n");
      out.write("\t\tvar objContentCopyPrevention = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"contentcopyprevention\"]');\r\n");
      out.write("\t\tvar objRealtimeObservation = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"realtimeobservation\"]');\r\n");
      out.write("\t\tvar objExpiration = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"expiration\"]');\r\n");
      out.write("\t\tvar objExpirationPeriod = g_objTabDefaultConfig.find('input[name=\"expirationperiod\"]');\r\n");
      out.write("\t\tvar objUseServerOcrFlag = g_objTabDefaultConfig.find('input[type=\"radio\"][name=\"useserverocrflag\"]');\r\n");
      out.write("\t\tvar objExpirationJobProcessingType = g_objTabDefaultConfig.find('select[name=\"expirationjobprocessingtype\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objJobProcessingType.val() == null) || (objJobProcessingType.val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"검출파일 처리 유형을 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objForcedTermination.filter(':checked').val() == null) || (objForcedTermination.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"강제종료 차단 설정 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (objForcedTermination.filter(':checked').val() == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\tif (objForcedTerminationPwd.val().length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"클라이언트 종료 인증번호를 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (!isValidParam(objForcedTerminationPwd, PARAM_TYPE_ALPHANUMERIC, \"클라이언트 종료 인증번호\", PARAM_PLAIN_PWD_MIN_LEN, PARAM_PLAIN_PWD_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objDecordingPermission.filter(':checked').val() == null) || (objDecordingPermission.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"암호화된 파일에 대한 복호화 허용 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objSafeExport.filter(':checked').val() == null) || (objSafeExport.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"암호화된 파일에 대한 외부 반출 허용 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objContentCopyPrevention.filter(':checked').val() == null) || (objContentCopyPrevention.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"암호화된 파일 내용에 대한 복사 방지 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objRealtimeObservation.filter(':checked').val() == null) || (objRealtimeObservation.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"실시간 감시 기능의 강제 사용 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objExpiration.filter(':checked').val() == null) || (objExpiration.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"개인 정보 파일 보관 만료일 설정 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (objExpiration.filter(':checked').val() == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\tif (objExpirationPeriod.val().length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"개인 정보 파일 보관 만료일을 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (!isValidParam(objExpirationPeriod, PARAM_TYPE_NUMBER, \"개인 정보 파일 보관 만료일\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (objExpirationJobProcessingType.val() == null) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"만료 파일 처리 유형을 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objUseServerOcrFlag.filter(':checked').val() == null) || (objUseServerOcrFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"서버 OCR 사용 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tvalidatePrintControlConfigData = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objPrintControlFlag = g_objTabPrintControlConfig.find('input[type=\"radio\"][name=\"printcontrolflag\"]');\r\n");
      out.write("\t\tvar objPrintLimitFlag = g_objTabPrintControlConfig.find('input[type=\"radio\"][name=\"printlimitflag\"]');\r\n");
      out.write("\t\tvar objPrintLimitType = g_objTabPrintControlConfig.find('select[name=\"printlimittype\"]');\r\n");
      out.write("\t\tvar objPrintLimitCount = g_objTabPrintControlConfig.find('input[name=\"printlimitcount\"]');\r\n");
      out.write("\t\tvar objMaskingFlag = g_objTabPrintControlConfig.find('input[type=\"radio\"][name=\"maskingflag\"]');\r\n");
      out.write("\t\tvar objMaskingType = g_objTabPrintControlConfig.find('select[name=\"maskingtype\"]');\r\n");
      out.write("\t\tvar objMaskingFlag = g_objTabPrintControlConfig.find('input[type=\"radio\"][name=\"maskingflag\"]');\r\n");
      out.write("\t\tvar objJuminSexNotMaskingFlag = g_objTabPrintControlConfig.find('input[type=\"checkbox\"][name=\"juminsexnotmaskingflag\"]');\r\n");
      out.write("\t\tvar objLogCollectorIpAddress = g_objTabPrintControlConfig.find('input[name=\"logcollectoripaddress\"]');\r\n");
      out.write("\t\tvar objLogCollectorPortNo = g_objTabPrintControlConfig.find('input[name=\"logcollectorportno\"]');\r\n");
      out.write("\t\tvar objLogCollectorAccountId = g_objTabPrintControlConfig.find('input[name=\"logcollectoraccountid\"]');\r\n");
      out.write("\t\tvar objLogCollectorAccountPwd = g_objTabPrintControlConfig.find('input[name=\"logcollectoraccountpwd\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objPrintControlFlag.filter(':checked').val() == null) || (objPrintControlFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"출력 제어 기능 사용 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objPrintLimitFlag.filter(':checked').val() == null) || (objPrintLimitFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"출력 사용량 제한 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (objPrintLimitFlag.filter(':checked').val() == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\tif (objPrintLimitType.val().length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"출력 사용량 제한 유형을 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (!isValidParam(objPrintLimitCount, PARAM_TYPE_NUMBER, \"출력 사용 페이지 수\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objMaskingFlag.filter(':checked').val() == null) || (objMaskingFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"개인정보 마스킹 사용 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (objMaskingFlag.filter(':checked').val() == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\tif (objMaskingType.val().length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"개인정보 마스킹 유형을 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (objLogCollectorIpAddress.val().length != 0) {\r\n");
      out.write("\t\t\tif (!isValidParam(objLogCollectorIpAddress, PARAM_TYPE_IPV4_ADDRESS, \"로그 수집 서버 주소\", PARAM_IPV4_ADDRESS_MIN_LEN, PARAM_IPV4_ADDRESS_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (objLogCollectorPortNo.val().length != 0) {\r\n");
      out.write("\t\t\tif (!isValidParam(objLogCollectorPortNo, PARAM_TYPE_NUMBER, \"로그 수집 서버 포트 번호\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (objLogCollectorAccountId.val().length != 0) {\r\n");
      out.write("\t\t\tif (!isValidParam(objLogCollectorAccountId, PARAM_TYPE_ID, \"로그 수집 서버 계정 ID\", PARAM_ID_MIN_LEN, PARAM_ID_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (objLogCollectorAccountPwd.val().length != 0) {\r\n");
      out.write("\t\t\tif (!isValidParam(objLogCollectorAccountPwd, PARAM_TYPE_PWD, \"로그 수집 서버 계정 비밀번호\", PARAM_PWD_MIN_LEN, PARAM_PWD_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tvalidateWaterMarkConfigData = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objWmPrintMode = g_objTabWaterMarkConfig.find('select[name=\"wmprintmode\"]');\r\n");
      out.write("\t\tvar objWm3StepWaterMark = g_objTabWaterMarkConfig.find('select[name=\"wm3stepwatermark\"]');\r\n");
      out.write("\t\tvar objWmTextRepeatSize = g_objTabWaterMarkConfig.find('select[name=\"wmtextrepeatsize\"]');\r\n");
      out.write("\t\tvar objWmOutlineMode = g_objTabWaterMarkConfig.find('select[name=\"wmoutlinemode\"]');\r\n");
      out.write("\t\tvar objWmPrintTime = g_objTabWaterMarkConfig.find('select[name=\"wmprinttime\"]');\r\n");
      out.write("\t\tvar objWmMainFontName = g_objTabWaterMarkConfig.find('select[name=\"wmmainfontname\"]');\r\n");
      out.write("\t\tvar objWmMainFontSize = g_objTabWaterMarkConfig.find('select[name=\"wmmainfontsize\"]');\r\n");
      out.write("\t\tvar objWmMainFontStyle = g_objTabWaterMarkConfig.find('select[name=\"wmmainfontstyle\"]');\r\n");
      out.write("\t\tvar objWmSubFontName = g_objTabWaterMarkConfig.find('select[name=\"wmsubfontname\"]');\r\n");
      out.write("\t\tvar objWmSubFontSize = g_objTabWaterMarkConfig.find('select[name=\"wmsubfontsize\"]');\r\n");
      out.write("\t\tvar objWmSubFontStyle = g_objTabWaterMarkConfig.find('select[name=\"wmsubfontstyle\"]');\r\n");
      out.write("\t\tvar objWmTextFontName = g_objTabWaterMarkConfig.find('select[name=\"wmtextfontname\"]');\r\n");
      out.write("\t\tvar objWmTextFontSize = g_objTabWaterMarkConfig.find('select[name=\"wmtextfontsize\"]');\r\n");
      out.write("\t\tvar objWmTextFontStyle = g_objTabWaterMarkConfig.find('select[name=\"wmtextfontstyle\"]');\r\n");
      out.write("\t\tvar objWmFontMainAngle = g_objTabWaterMarkConfig.find('input[name=\"wmfontmainangle\"]');\r\n");
      out.write("\t\tvar objWmFontDensityMain = g_objTabWaterMarkConfig.find('select[name=\"wmfontdensitymain\"]');\r\n");
      out.write("\t\tvar objWmFontDensityText = g_objTabWaterMarkConfig.find('select[name=\"wmfontdensitytext\"]');\r\n");
      out.write("\t\tvar objWmBackgroundMode = g_objTabWaterMarkConfig.find('select[name=\"wmbackgroundmode\"]');\r\n");
      out.write("\t\tvar objWmBackgroundImage = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimage\"]');\r\n");
      out.write("\t\tvar objWmBackgroundPositionX = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundpositionx\"]');\r\n");
      out.write("\t\tvar objWmBackgroundPositionY = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundpositiony\"]');\r\n");
      out.write("\t\tvar objWmBackgroundImageWidth = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimagewidth\"]');\r\n");
      out.write("\t\tvar objWmBackgroundImageHeight = g_objTabWaterMarkConfig.find('input[name=\"wmbackgroundimageheight\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmPrintMode.val() == null) || (objWmPrintMode.val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"출력 모드를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWm3StepWaterMark.val() == null) || (objWm3StepWaterMark.val().length == 0)) {\r\n");
      out.write("\t\t\tobjWm3StepWaterMark.val('0');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmTextRepeatSize.val() == null) || (objWmTextRepeatSize.val().length == 0)) {\r\n");
      out.write("\t\t\tobjWmTextRepeatSize.val('A4');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmOutlineMode.val() == null) || (objWmOutlineMode.val().length == 0)) {\r\n");
      out.write("\t\t\tobjWmOutlineMode.val('0');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmPrintTime.val() == null) || (objWmPrintTime.val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"워터마크 시간 출력 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmMainFontName.val() == null) || (objWmMainFontName.val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"Main 글꼴을 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmMainFontSize.val() == null) || (objWmMainFontSize.val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"Main 글꼴 크기를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmMainFontStyle.val() == null) || (objWmMainFontStyle.val().length == 0)) {\r\n");
      out.write("\t\t\tobjWmMainFontStyle.val('0');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmSubFontName.val() == null) || (objWmSubFontName.val().length == 0)) {\r\n");
      out.write("\t\t\tobjWmSubFontName.val('0');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmSubFontSize.val() == null) || (objWmSubFontSize.val().length == 0)) {\r\n");
      out.write("\t\t\tobjWmSubFontSize.val('5');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmSubFontStyle.val() == null) || (objWmSubFontStyle.val().length == 0)) {\r\n");
      out.write("\t\t\tobjWmSubFontStyle.val('0');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmTextFontName.val() == null) || (objWmTextFontName.val().length == 0)) {\r\n");
      out.write("\t\t\tobjWmTextFontName.val('0');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmTextFontSize.val() == null) || (objWmTextFontSize.val().length == 0)) {\r\n");
      out.write("\t\t\tobjWmTextFontSize.val('5');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmTextFontStyle.val() == null) || (objWmTextFontStyle.val().length == 0)) {\r\n");
      out.write("\t\t\tobjWmTextFontStyle.val('0');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmFontMainAngle.val() == null) || (objWmFontMainAngle.val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"Main 글꼴 기울기를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmFontDensityMain.val() == null) || (objWmFontDensityMain.val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"Main 글꼴 농도를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmFontDensityText.val() == null) || (objWmFontDensityText.val().length == 0)) {\r\n");
      out.write("\t\t\tobjWmFontDensityText.val('1');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objWmBackgroundMode.val() == null) || (objWmBackgroundMode.val().length == 0)) {\r\n");
      out.write("\t\t\tobjWmBackgroundMode.val('0');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (objWmBackgroundImage.val().length > 0) {\r\n");
      out.write("\t\t\tif (objWmBackgroundImageWidth.val().length == 0) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"배경 이미지 가로 크기\", \"배경 이미지 가로 크기를 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (!isValidParam(objWmBackgroundImageWidth, PARAM_TYPE_NUMBER, \"배경 이미지 가로 크기\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (objWmBackgroundImageHeight.val().length == 0) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"배경 이미지 세로 크기\", \"배경 이미지 세로 크기를 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (!isValidParam(objWmBackgroundImageHeight, PARAM_TYPE_NUMBER, \"배경 이미지 세로 크기\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tvalidateMediaControlConfigData = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objUsbControlFlag = g_objTabMediaControlConfig.find('input[type=\"radio\"][name=\"usbcontrolflag\"]');\r\n");
      out.write("\t\tvar objUsbControlType = g_objTabMediaControlConfig.find('select[name=\"usbcontroltype\"]');\r\n");
      out.write("\t\tvar objCdRomControlFlag = g_objTabMediaControlConfig.find('input[type=\"radio\"][name=\"cdromcontrolflag\"]');\r\n");
      out.write("\t\tvar objCdRomControlType = g_objTabMediaControlConfig.find('select[name=\"cdromcontroltype\"]');\r\n");
      out.write("\t\tvar objPublicFolderControlFlag = g_objTabMediaControlConfig.find('input[type=\"radio\"][name=\"publicfoldercontrolflag\"]');\r\n");
      out.write("\t\tvar objPublicFolderControlType = g_objTabMediaControlConfig.find('select[name=\"publicfoldercontroltype\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objUsbControlFlag.filter(':checked').val() == null) || (objUsbControlFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"USB 제어 기능 사용 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (objUsbControlFlag.filter(':checked').val() == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\tif (objUsbControlType.val().length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"USB 제어 유형을 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objCdRomControlFlag.filter(':checked').val() == null) || (objCdRomControlFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"CD-ROM 제어 기능 사용 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (objCdRomControlFlag.filter(':checked').val() == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\tif (objCdRomControlType.val().length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"CD-ROM 제어 유형을 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objPublicFolderControlFlag.filter(':checked').val() == null) || (objPublicFolderControlFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"공유 폴더 제어 기능 사용 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (objPublicFolderControlFlag.filter(':checked').val() == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\tif (objPublicFolderControlType.val().length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"공유 폴더 제어 유형을 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tvalidateNetworkServiceControlConfigData = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objNetworkServiceControlFlag = g_objTabNetworkServiceControlConfig.find('input[type=\"radio\"][name=\"networkservicecontrolflag\"]');\r\n");
      out.write("\t\tvar objBlockSpecificUrlsFlag = g_objTabNetworkServiceControlConfig.find('input[type=\"radio\"][name=\"blockspecificurlsflag\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objNetworkServiceControlFlag.filter(':checked').val() == null) || (objNetworkServiceControlFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"네트워크 서비스 제어 기능 사용 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objBlockSpecificUrlsFlag.filter(':checked').val() == null) || (objBlockSpecificUrlsFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"브라우저에서 특정 URL에 대한 접속 차단 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tvalidateSystemControlConfigData = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objSystemPasswordSetupFlag = g_objTabSystemControlConfig.find('input[type=\"radio\"][name=\"systempasswordsetupflag\"]');\r\n");
      out.write("\t\t//var objSystemPasswordMinLength = g_objTabSystemControlConfig.find('#systempasswordminlength');\r\n");
      out.write("\t\tvar objSystemPasswordMaxLength = g_objTabSystemControlConfig.find('#systempasswordmaxlength');\r\n");
      out.write("\t\tvar objSystemPasswordExpirationFlag = g_objTabSystemControlConfig.find('input[type=\"radio\"][name=\"systempasswordexpirationflag\"]');\r\n");
      out.write("\t\tvar objSystemPasswordExpirationPeriod = g_objTabSystemControlConfig.find('select[name=\"systempasswordexpirationperiod\"]');\r\n");
      out.write("\t\tvar objScreenSaverActivationFlag = g_objTabSystemControlConfig.find('input[type=\"radio\"][name=\"screensaveractivationflag\"]');\r\n");
      out.write("\t\tvar objScreenSaverWaitingMinutes = g_objTabSystemControlConfig.find('select[name=\"screensaverwaitingminutes\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objSystemPasswordSetupFlag.filter(':checked').val() == null) || (objSystemPasswordSetupFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"사용자 시스템의 비밀번호 설정 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (objSystemPasswordSetupFlag.filter(':checked').val() == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("// \t\t\t\tif (objSystemPasswordMinLength.val().length == 0) {\r\n");
      out.write("// \t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"비밀번호 최소 길이를 입력해주세요.\", \"\");\r\n");
      out.write("// \t\t\t\t\treturn false;\r\n");
      out.write("// \t\t\t\t} else {\r\n");
      out.write("// \t\t\t\t\tif (!isValidParam(objSystemPasswordMinLength, PARAM_TYPE_NUMBER, \"비밀번호 최소 길이\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("// \t\t\t\t\t\treturn false;\r\n");
      out.write("// \t\t\t\t\t}\r\n");
      out.write("// \t\t\t\t}\r\n");
      out.write("// \t\t\t\tif (objSystemPasswordMaxLength.val().length == 0) {\r\n");
      out.write("// \t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"비밀번호 최대 길이를 입력해주세요.\", \"\");\r\n");
      out.write("// \t\t\t\t\treturn false;\r\n");
      out.write("// \t\t\t\t} else {\r\n");
      out.write("// \t\t\t\t\tif (!isValidParam(objSystemPasswordMaxLength, PARAM_TYPE_NUMBER, \"비밀번호 최대 길이\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("// \t\t\t\t\t\treturn false;\r\n");
      out.write("// \t\t\t\t\t}\r\n");
      out.write("// \t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objSystemPasswordExpirationFlag.filter(':checked').val() == null) || (objSystemPasswordExpirationFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"사용자 시스템의 비밀번호 유효기간 설정 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("// \t\t} else {\r\n");
      out.write("\r\n");
      out.write("// \t\t\t\tif (objSystemPasswordExpirationPeriod.val().length == 0) {\r\n");
      out.write("// \t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"비밀번호 유효기간을 입력해주세요.\", \"\");\r\n");
      out.write("// \t\t\t\t\treturn false;\r\n");
      out.write("// \t\t\t\t} else {\r\n");
      out.write("// \t\t\t\t\tif (!isValidParam(objSystemPasswordExpirationPeriod, PARAM_TYPE_NUMBER, \"비밀번호 유효기간\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("// \t\t\t\t\t\treturn false;\r\n");
      out.write("// \t\t\t\t\t}\r\n");
      out.write("// \t\t\t\t}\r\n");
      out.write("// \t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objScreenSaverActivationFlag.filter(':checked').val() == null) || (objScreenSaverActivationFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"사용자 시스템의 화면 보호기 설정 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("// \t\t} else {\r\n");
      out.write("\r\n");
      out.write("// \t\t\t\tif (objScreenSaverWaitingMinutes.val().length == 0) {\r\n");
      out.write("// \t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"활성화 대기 시간을 입력해주세요.\", \"\");\r\n");
      out.write("// \t\t\t\t\treturn false;\r\n");
      out.write("// \t\t\t\t} else {\r\n");
      out.write("// \t\t\t\t\tif (!isValidParam(objScreenSaverWaitingMinutes, PARAM_TYPE_NUMBER, \"활성화 대기 시간\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("// \t\t\t\t\t\treturn false;\r\n");
      out.write("// \t\t\t\t\t}\r\n");
      out.write("// \t\t\t\t}\r\n");
      out.write("// \t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tvalidateWorkControlConfigData = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objSystemStartHours = g_objTabWorkControlConfig.find('select[name=\"systemstarthours\"]');\r\n");
      out.write("\t\tvar objSystemStartMinutes = g_objTabWorkControlConfig.find('select[name=\"systemstartminutes\"]');\r\n");
      out.write("\t\tvar objSystemEndHours = g_objTabWorkControlConfig.find('select[name=\"systemendhours\"]');\r\n");
      out.write("\t\tvar objSystemEndMinutes = g_objTabWorkControlConfig.find('select[name=\"systemendminutes\"]');\r\n");
      out.write("\t\tvar objWorkStartHours = g_objTabWorkControlConfig.find('select[name=\"workstarthours\"]');\r\n");
      out.write("\t\tvar objWorkStartMinutes = g_objTabWorkControlConfig.find('select[name=\"workstartminutes\"]');\r\n");
      out.write("\t\tvar objWorkEndHours = g_objTabWorkControlConfig.find('select[name=\"workendhours\"]');\r\n");
      out.write("\t\tvar objWorkEndMinutes = g_objTabWorkControlConfig.find('select[name=\"workendminutes\"]');\r\n");
      out.write("\t\tvar objAlertSystemEndAlarmFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"alertsystemendalarmflag\"]');\r\n");
      out.write("\t\tvar objSystemEndAlarmStart = g_objTabWorkControlConfig.find('select[name=\"systemendalarmstart\"]');\r\n");
      out.write("\t\tvar objSystemEndAlarmInterval = g_objTabWorkControlConfig.find('select[name=\"systemendalarminterval\"]');\r\n");
      out.write("\t\tvar objAlertWorkEndAlarmFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"alertworkendalarmflag\"]');\r\n");
      out.write("\t\tvar objWorkEndAlarmStart = g_objTabWorkControlConfig.find('select[name=\"workendalarmstart\"]');\r\n");
      out.write("\t\tvar objWorkEndAlarmInterval = g_objTabWorkControlConfig.find('select[name=\"workendalarminterval\"]');\r\n");
      out.write("\t\tvar objLockWhenIdleFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"lockwhenidleflag\"]');\r\n");
      out.write("\t\tvar objIdleTimeForLock = g_objTabWorkControlConfig.find('select[name=\"idletimeforlock\"]');\r\n");
      out.write("\t\tvar objPermitExtendedWorkFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"permitextendedworkflag\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objAlertSystemEndAlarmFlag.filter(':checked').val() == null) || (objAlertSystemEndAlarmFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"사용자 시스템의 종료 알람 설정 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (objAlertSystemEndAlarmFlag.filter(':checked').val() == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\tif (objSystemEndAlarmStart.val().length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"알람 시작 시간을 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (!isValidParam(objSystemEndAlarmStart, PARAM_TYPE_NUMBER, \"알람 시작 시간\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (objSystemEndAlarmInterval.val().length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"알람 간격을 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (!isValidParam(objSystemEndAlarmInterval, PARAM_TYPE_NUMBER, \"알람 간격\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objAlertWorkEndAlarmFlag.filter(':checked').val() == null) || (objAlertWorkEndAlarmFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"사용자 업무의 종료 알람 설정 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (objAlertWorkEndAlarmFlag.filter(':checked').val() == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\tif (objWorkEndAlarmStart.val().length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"알람 시작 시간을 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (!isValidParam(objWorkEndAlarmStart, PARAM_TYPE_NUMBER, \"알람 시작 시간\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (objWorkEndAlarmInterval.val().length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"알람 간격을 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (!isValidParam(objWorkEndAlarmInterval, PARAM_TYPE_NUMBER, \"알람 간격\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objLockWhenIdleFlag.filter(':checked').val() == null) || (objLockWhenIdleFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"사용자 시스템의 유휴시 잠금 기능 설정 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (objLockWhenIdleFlag.filter(':checked').val() == \"");
      out.print(OptionType.OPTION_TYPE_YES);
      out.write("\") {\r\n");
      out.write("\t\t\t\tif (objIdleTimeForLock.val().length == 0) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"입력 오류\", \"잠금 대기 시간을 입력해주세요.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (!isValidParam(objIdleTimeForLock, PARAM_TYPE_NUMBER, \"잠금 대기 시간\", PARAM_NUMBER_MIN_LEN, PARAM_NUMBER_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif ((objPermitExtendedWorkFlag.filter(':checked').val() == null) || (objPermitExtendedWorkFlag.filter(':checked').val().length == 0)) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"입력 오류\", \"사용자의 업무 연장 요청을 허용 유무를 선택해주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tinitControl = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tinitDefaultConfigControl();\r\n");
      out.write("\t\tinitPrintControlConfigControl();\r\n");
      out.write("\t\tinitWaterMarkConfigControl();\r\n");
      out.write("\t\tinitMediaControlConfigControl();\r\n");
      out.write("\t\tinitNetworkServiceControlConfigControl();\r\n");
      out.write("\t\tinitSystemControlConfigControl();\r\n");
      out.write("\t\tinitWorkControlConfigControl();\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tinitDefaultConfigControl = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objJobProcessingType = g_objTabDefaultConfig.find('select[name=\"jobprocessingtype\"]');\r\n");
      out.write("\t\tvar objExpirationJobProcessingType = g_objTabDefaultConfig.find('select[name=\"expirationjobprocessingtype\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objJobProcessingType, g_htJobProcessingTypeList, null, null);\r\n");
      out.write("\t\tobjJobProcessingType.find('option[value=\"' + '");
      out.print(JobProcessingType.JOB_PROCESSING_TYPE_DECRYPT);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t\tobjJobProcessingType.find('option[value=\"' + '");
      out.print(JobProcessingType.JOB_PROCESSING_TYPE_INDIVIDUAL);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t\tobjJobProcessingType.find('option[value=\"' + '");
      out.print(JobProcessingType.JOB_PROCESSING_TYPE_SEND_SERVER);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t\tobjJobProcessingType.find('option[value=\"' + '");
      out.print(JobProcessingType.JOB_PROCESSING_TYPE_MOVE_TO_VITUALDISK);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t\tobjJobProcessingType.find('option[value=\"' + '");
      out.print(JobProcessingType.JOB_PROCESSING_TYPE_MOVE_FROM_VITUALDISK);
      out.write("' + '\"]').remove();\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objExpirationJobProcessingType, g_htJobProcessingTypeList, null, null);\r\n");
      out.write("\t\tobjExpirationJobProcessingType.find('option[value=\"' + '");
      out.print(JobProcessingType.JOB_PROCESSING_TYPE_DECRYPT);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t\tobjExpirationJobProcessingType.find('option[value=\"' + '");
      out.print(JobProcessingType.JOB_PROCESSING_TYPE_INDIVIDUAL);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t\tobjExpirationJobProcessingType.find('option[value=\"' + '");
      out.print(JobProcessingType.JOB_PROCESSING_TYPE_SEND_SERVER);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t\tobjExpirationJobProcessingType.find('option[value=\"' + '");
      out.print(JobProcessingType.JOB_PROCESSING_TYPE_MOVE_TO_VITUALDISK);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t\tobjExpirationJobProcessingType.find('option[value=\"' + '");
      out.print(JobProcessingType.JOB_PROCESSING_TYPE_MOVE_FROM_VITUALDISK);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tinitPrintControlConfigControl = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objPrintLimitType = g_objTabPrintControlConfig.find('select[name=\"printlimittype\"]');\r\n");
      out.write("\t\tvar objMaskingType = g_objTabPrintControlConfig.find('select[name=\"maskingtype\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objPrintLimitType, g_htPrintLimitTypeList, null, null);\r\n");
      out.write("\t\tfillDropdownList(objMaskingType, g_htPrintMaskingTypeList, null, null);\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tinitWaterMarkConfigControl = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objWmPrintMode = g_objTabWaterMarkConfig.find('select[name=\"wmprintmode\"]');\r\n");
      out.write("\t\tvar objWm3StepWaterMark = g_objTabWaterMarkConfig.find('select[name=\"wm3stepwatermark\"]');\r\n");
      out.write("\t\tvar objWmTextRepeatSize = g_objTabWaterMarkConfig.find('select[name=\"wmtextrepeatsize\"]');\r\n");
      out.write("\t\tvar objWmOutlineMode = g_objTabWaterMarkConfig.find('select[name=\"wmoutlinemode\"]');\r\n");
      out.write("\t\tvar objWmPrintTime = g_objTabWaterMarkConfig.find('select[name=\"wmprinttime\"]');\r\n");
      out.write("\t\tvar objWmMainFontName = g_objTabWaterMarkConfig.find('select[name=\"wmmainfontname\"]');\r\n");
      out.write("\t\tvar objWmMainFontSize = g_objTabWaterMarkConfig.find('select[name=\"wmmainfontsize\"]');\r\n");
      out.write("\t\tvar objWmMainFontStyle = g_objTabWaterMarkConfig.find('select[name=\"wmmainfontstyle\"]');\r\n");
      out.write("\t\tvar objWmSubFontName = g_objTabWaterMarkConfig.find('select[name=\"wmsubfontname\"]');\r\n");
      out.write("\t\tvar objWmSubFontSize = g_objTabWaterMarkConfig.find('select[name=\"wmsubfontsize\"]');\r\n");
      out.write("\t\tvar objWmSubFontStyle = g_objTabWaterMarkConfig.find('select[name=\"wmsubfontstyle\"]');\r\n");
      out.write("\t\tvar objWmTextFontName = g_objTabWaterMarkConfig.find('select[name=\"wmtextfontname\"]');\r\n");
      out.write("\t\tvar objWmTextFontSize = g_objTabWaterMarkConfig.find('select[name=\"wmtextfontsize\"]');\r\n");
      out.write("\t\tvar objWmTextFontStyle = g_objTabWaterMarkConfig.find('select[name=\"wmtextfontstyle\"]');\r\n");
      out.write("\t\tvar objWmFontDensityMain = g_objTabWaterMarkConfig.find('select[name=\"wmfontdensitymain\"]');\r\n");
      out.write("\t\tvar objWmFontDensityText = g_objTabWaterMarkConfig.find('select[name=\"wmfontdensitytext\"]');\r\n");
      out.write("\t\tvar objWmBackgroundMode = g_objTabWaterMarkConfig.find('select[name=\"wmbackgroundmode\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objWmPrintMode, g_htPrintModeList, null, null);\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objWm3StepWaterMark, g_htOptionTypeList, null, null);\r\n");
      out.write("\r\n");
      out.write("\t\tobjWmTextRepeatSize.empty();\r\n");
      out.write("\t\tobjWmTextRepeatSize.append('<option value=\"A4\">A4</option>');\r\n");
      out.write("\t\tobjWmTextRepeatSize.append('<option value=\"B5\">B5</option>');\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objWmOutlineMode, g_htOptionTypeList, null, null);\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objWmPrintTime, g_htOptionTypeList, null, null);\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objWmMainFontName, g_htFontNameList, null, null);\r\n");
      out.write("\t\tobjWmMainFontSize.empty();\r\n");
      out.write("\t\tfor (var i=0; i<7; i++) {\r\n");
      out.write("\t\t\tobjWmMainFontSize.append('<option value=\"' + (i+1) + '\">' + (i+1) + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfillDropdownList(objWmMainFontStyle, g_htFontStyleList, null, null);\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objWmSubFontName, g_htFontNameList, null, null);\r\n");
      out.write("\t\tobjWmSubFontSize.empty();\r\n");
      out.write("\t\tfor (var i=0; i<7; i++) {\r\n");
      out.write("\t\t\tobjWmSubFontSize.append('<option value=\"' + (i+1) + '\">' + (i+1) + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfillDropdownList(objWmSubFontStyle, g_htFontStyleList, null, null);\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objWmTextFontName, g_htFontNameList, null, null);\r\n");
      out.write("\t\tobjWmTextFontSize.empty();\r\n");
      out.write("\t\tfor( var i=0; i<7; i++) {\r\n");
      out.write("\t\t\tobjWmTextFontSize.append('<option value=\"' + (i+1) + '\">' + (i+1) + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfillDropdownList(objWmTextFontStyle, g_htFontStyleList, null, null);\r\n");
      out.write("\r\n");
      out.write("\t\tobjWmFontDensityMain.empty();\r\n");
      out.write("\t\tfor( var i=0; i<16; i++) {\r\n");
      out.write("\t\t\tobjWmFontDensityMain.append('<option value=\"' + (i+1) + '\">' + (i+1) + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjWmFontDensityText.empty();\r\n");
      out.write("\t\tfor( var i=0; i<16; i++) {\r\n");
      out.write("\t\t\tobjWmFontDensityText.append('<option value=\"' + (i+1) + '\">' + (i+1) + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjWmBackgroundMode.empty();\r\n");
      out.write("\t\tobjWmBackgroundMode.append('<option value=\"0\">기본 이미지 크기</option>');\r\n");
      out.write("\t\tobjWmBackgroundMode.append('<option value=\"1\">출력용지 크기</option>');\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tinitMediaControlConfigControl = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objUsbControlType = g_objTabMediaControlConfig.find('select[name=\"usbcontroltype\"]');\r\n");
      out.write("\t\tvar objCdRomControlType = g_objTabMediaControlConfig.find('select[name=\"cdromcontroltype\"]');\r\n");
      out.write("\t\tvar objPublicFolderControlType = g_objTabMediaControlConfig.find('select[name=\"publicfoldercontroltype\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objUsbControlType, g_htControlTypeList, null, null);\r\n");
      out.write("\t\tobjUsbControlType.find('option[value=\"' + '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_ENCRYPT_FILE);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t\tobjUsbControlType.find('option[value=\"' + '");
      out.print(ControlType.CONTROL_TYPE_BLOCK_EXECUTE);
      out.write("' + '\"]').remove();\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objCdRomControlType, g_htControlTypeList, null, null);\r\n");
      out.write("\t\tobjCdRomControlType.find('option[value=\"' + '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_ENCRYPT_FILE);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t\tobjCdRomControlType.find('option[value=\"' + '");
      out.print(ControlType.CONTROL_TYPE_BLOCK_EXECUTE);
      out.write("' + '\"]').remove();\r\n");
      out.write("\r\n");
      out.write("\t\tfillDropdownList(objPublicFolderControlType, g_htControlTypeList, null, null);\r\n");
      out.write("\t\tobjPublicFolderControlType.find('option[value=\"' + '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_ENCRYPT_FILE);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t\tobjPublicFolderControlType.find('option[value=\"' + '");
      out.print(ControlType.CONTROL_TYPE_BLOCK_EXECUTE);
      out.write("' + '\"]').remove();\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tinitNetworkServiceControlConfigControl = function() {\r\n");
      out.write("\t\tloadNetworkServiceControlProgram();\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tinitSystemControlConfigControl = function() {\r\n");
      out.write("\t\tvar objSystemPasswordExpirationPeriod = g_objTabSystemControlConfig.find('select[name=\"systempasswordexpirationperiod\"]');\r\n");
      out.write("\t\tvar objScreenSaverWaitingMinutes = g_objTabSystemControlConfig.find('select[name=\"screensaverwaitingminutes\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tobjSystemPasswordExpirationPeriod.empty();\r\n");
      out.write("\t\tobjSystemPasswordExpirationPeriod.append('<option value=\"0\">0</option>');\r\n");
      out.write("\t\tobjSystemPasswordExpirationPeriod.append('<option value=\"30\">30</option>');\r\n");
      out.write("\t\tobjSystemPasswordExpirationPeriod.append('<option value=\"60\">60</option>');\r\n");
      out.write("\t\tobjSystemPasswordExpirationPeriod.append('<option value=\"90\">90</option>');\r\n");
      out.write("\t\tobjSystemPasswordExpirationPeriod.append('<option value=\"120\">120</option>');\r\n");
      out.write("\t\tobjSystemPasswordExpirationPeriod.append('<option value=\"180\">180</option>');\r\n");
      out.write("\r\n");
      out.write("\t\tobjScreenSaverWaitingMinutes.empty();\r\n");
      out.write("\t\tobjScreenSaverWaitingMinutes.append('<option value=\"0\">0</option>');\r\n");
      out.write("\t\tobjScreenSaverWaitingMinutes.append('<option value=\"5\">5</option>');\r\n");
      out.write("\t\tobjScreenSaverWaitingMinutes.append('<option value=\"10\">10</option>');\r\n");
      out.write("\t\tobjScreenSaverWaitingMinutes.append('<option value=\"15\">15</option>');\r\n");
      out.write("\t\tobjScreenSaverWaitingMinutes.append('<option value=\"30\">30</option>');\r\n");
      out.write("\t\tobjScreenSaverWaitingMinutes.append('<option value=\"60\">60</option>');\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tinitWorkControlConfigControl = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objSystemStartHours = g_objTabWorkControlConfig.find('select[name=\"systemstarthours\"]');\r\n");
      out.write("\t\tvar objSystemStartMinutes = g_objTabWorkControlConfig.find('select[name=\"systemstartminutes\"]');\r\n");
      out.write("\t\tvar objSystemEndHours = g_objTabWorkControlConfig.find('select[name=\"systemendhours\"]');\r\n");
      out.write("\t\tvar objSystemEndMinutes = g_objTabWorkControlConfig.find('select[name=\"systemendminutes\"]');\r\n");
      out.write("\t\tvar objWorkStartHours = g_objTabWorkControlConfig.find('select[name=\"workstarthours\"]');\r\n");
      out.write("\t\tvar objWorkStartMinutes = g_objTabWorkControlConfig.find('select[name=\"workstartminutes\"]');\r\n");
      out.write("\t\tvar objWorkEndHours = g_objTabWorkControlConfig.find('select[name=\"workendhours\"]');\r\n");
      out.write("\t\tvar objWorkEndMinutes = g_objTabWorkControlConfig.find('select[name=\"workendminutes\"]');\r\n");
      out.write("\t\tvar objAlertSystemEndAlarmFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"alertsystemendalarmflag\"]');\r\n");
      out.write("\t\tvar objSystemEndAlarmStart = g_objTabWorkControlConfig.find('select[name=\"systemendalarmstart\"]');\r\n");
      out.write("\t\tvar objSystemEndAlarmInterval = g_objTabWorkControlConfig.find('select[name=\"systemendalarminterval\"]');\r\n");
      out.write("\t\tvar objAlertWorkEndAlarmFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"alertworkendalarmflag\"]');\r\n");
      out.write("\t\tvar objWorkEndAlarmStart = g_objTabWorkControlConfig.find('select[name=\"workendalarmstart\"]');\r\n");
      out.write("\t\tvar objWorkEndAlarmInterval = g_objTabWorkControlConfig.find('select[name=\"workendalarminterval\"]');\r\n");
      out.write("\t\tvar objLockWhenIdleFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"lockwhenidleflag\"]');\r\n");
      out.write("\t\tvar objIdleTimeForLock = g_objTabWorkControlConfig.find('select[name=\"idletimeforlock\"]');\r\n");
      out.write("\t\tvar objPermitExtendedWorkFlag = g_objTabWorkControlConfig.find('input[type=\"radio\"][name=\"permitextendedworkflag\"]');\r\n");
      out.write("\r\n");
      out.write("\t\tobjSystemStartHours.empty();\r\n");
      out.write("\t\tfor (var i=0; i<24; i++) {\r\n");
      out.write("\t\t\tif (i < 10)\r\n");
      out.write("\t\t\t\tobjSystemStartHours.append('<option value=\"' + ('0' + i) + '\">' + ('0' + i) + '</option>');\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t\tobjSystemStartHours.append('<option value=\"' + i + '\">' + i + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjSystemStartMinutes.empty();\r\n");
      out.write("\t\tfor (var i=0; i<60; i++) {\r\n");
      out.write("\t\t\tif (i < 10)\r\n");
      out.write("\t\t\t\tobjSystemStartMinutes.append('<option value=\"' + ('0' + i) + '\">' + ('0' + i) + '</option>');\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t\tobjSystemStartMinutes.append('<option value=\"' + i + '\">' + i + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjSystemEndHours.empty();\r\n");
      out.write("\t\tfor (var i=0; i<24; i++) {\r\n");
      out.write("\t\t\tif (i < 10)\r\n");
      out.write("\t\t\t\tobjSystemEndHours.append('<option value=\"' + ('0' + i) + '\">' + ('0' + i) + '</option>');\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t\tobjSystemEndHours.append('<option value=\"' + i + '\">' + i + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjSystemEndMinutes.empty();\r\n");
      out.write("\t\tfor (var i=0; i<60; i++) {\r\n");
      out.write("\t\t\tif (i < 10)\r\n");
      out.write("\t\t\t\tobjSystemEndMinutes.append('<option value=\"' + ('0' + i) + '\">' + ('0' + i) + '</option>');\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t\tobjSystemEndMinutes.append('<option value=\"' + i + '\">' + i + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjWorkStartHours.empty();\r\n");
      out.write("\t\tfor (var i=0; i<24; i++) {\r\n");
      out.write("\t\t\tif (i < 10)\r\n");
      out.write("\t\t\t\tobjWorkStartHours.append('<option value=\"' + ('0' + i) + '\">' + ('0' + i) + '</option>');\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t\tobjWorkStartHours.append('<option value=\"' + i + '\">' + i + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjWorkStartMinutes.empty();\r\n");
      out.write("\t\tfor (var i=0; i<60; i++) {\r\n");
      out.write("\t\t\tif (i < 10)\r\n");
      out.write("\t\t\t\tobjWorkStartMinutes.append('<option value=\"' + ('0' + i) + '\">' + ('0' + i) + '</option>');\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t\tobjWorkStartMinutes.append('<option value=\"' + i + '\">' + i + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjWorkEndHours.empty();\r\n");
      out.write("\t\tfor (var i=0; i<24; i++) {\r\n");
      out.write("\t\t\tif (i < 10)\r\n");
      out.write("\t\t\t\tobjWorkEndHours.append('<option value=\"' + ('0' + i) + '\">' + ('0' + i) + '</option>');\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t\tobjWorkEndHours.append('<option value=\"' + i + '\">' + i + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjWorkEndMinutes.empty();\r\n");
      out.write("\t\tfor (var i=0; i<60; i++) {\r\n");
      out.write("\t\t\tif (i < 10)\r\n");
      out.write("\t\t\t\tobjWorkEndMinutes.append('<option value=\"' + ('0' + i) + '\">' + ('0' + i) + '</option>');\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t\tobjWorkEndMinutes.append('<option value=\"' + i + '\">' + i + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjSystemEndAlarmStart.empty();\r\n");
      out.write("\t\tfor (var i=1; i<=6; i++) {\r\n");
      out.write("\t\t\t\tobjSystemEndAlarmStart.append('<option value=\"' + (i*10) + '\">' + (i*10) + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjSystemEndAlarmInterval.empty();\r\n");
      out.write("\t\tfor (var i=1; i<=10; i++) {\r\n");
      out.write("\t\t\t\tobjSystemEndAlarmInterval.append('<option value=\"' + i + '\">' + i + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjWorkEndAlarmStart.empty();\r\n");
      out.write("\t\tfor (var i=1; i<=6; i++) {\r\n");
      out.write("\t\t\t\tobjWorkEndAlarmStart.append('<option value=\"' + (i*10) + '\">' + (i*10) + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjWorkEndAlarmInterval.empty();\r\n");
      out.write("\t\tfor (var i=1; i<=10; i++) {\r\n");
      out.write("\t\t\t\tobjWorkEndAlarmInterval.append('<option value=\"' + i + '\">' + i + '</option>');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjIdleTimeForLock.empty();\r\n");
      out.write("\t\tobjIdleTimeForLock.append('<option value=\"5\">5</option>');\r\n");
      out.write("\t\tobjIdleTimeForLock.append('<option value=\"10\">10</option>');\r\n");
      out.write("\t\tobjIdleTimeForLock.append('<option value=\"15\">15</option>');\r\n");
      out.write("\t\tobjIdleTimeForLock.append('<option value=\"30\">30</option>');\r\n");
      out.write("\t\tobjIdleTimeForLock.append('<option value=\"60\">60</option>');\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\taddExclusionSearchFolderToList = function() {\r\n");
      out.write("\t\tvar objExclusionSearchFolderList = g_objTabDefaultConfig.find('#exclusionsearchfolderlist');\r\n");
      out.write("\t\tvar objNewExclusionSearchFolderPath = g_objTabDefaultConfig.find('#newexclusionsearchfolderpath');\r\n");
      out.write("\r\n");
      out.write("\t\tif (objNewExclusionSearchFolderPath.val().length == 0) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"검사 대상 제외 경로 설정\", \"추가할 경로를 입력해 주세요.\", \"\");\r\n");
      out.write("\t\t\tobjNewExclusionSearchFolderPath.focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tvar isAlready = false;\r\n");
      out.write("\t\tobjExclusionSearchFolderList.find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tif ($(this).find('td:eq(1)').text() == objNewExclusionSearchFolderPath.val()) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"검사 대상 제외 경로 설정\", \"이미 추가한 경로입니다.\", \"\");\r\n");
      out.write("\t\t\t\tobjNewExclusionSearchFolderPath.focus();\r\n");
      out.write("\t\t\t\tisAlready = true;\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tif (!isAlready) {\r\n");
      out.write("\t\t\tvar newRow = '';\r\n");
      out.write("\t\t\tnewRow += '<tr>';\r\n");
      out.write("\t\t\tnewRow += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selectfolder\" exclusionsearchfolderpath=\"' + objNewExclusionSearchFolderPath.val() + '\" style=\"border: 0;\"></td>';\r\n");
      out.write("\t\t\tnewRow += '<td title=\"' + objNewExclusionSearchFolderPath.val() + '\">' + objNewExclusionSearchFolderPath.val() + '</td>';\r\n");
      out.write("\t\t\tnewRow += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\tobjExclusionSearchFolderList.find('tbody').append(newRow);\r\n");
      out.write("\t\t\trefreshSelectedListTable(objExclusionSearchFolderList);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tdeleteExclusionSearchFolderFromList = function() {\r\n");
      out.write("\t\tvar objExclusionSearchFolderList = g_objTabDefaultConfig.find('#exclusionsearchfolderlist');\r\n");
      out.write("\t\tobjExclusionSearchFolderList.find('.list-table tbody tr').find('input:checkbox[name=\"selectfolder\"]').filter(':checked').each( function () {\r\n");
      out.write("\t\t\t$(this).closest('tr').remove();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\trefreshSelectedListTable(objExclusionSearchFolderList);\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tselectProgramToList = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objProgramList = null;\r\n");
      out.write("\t\tvar objSelectedProgramList = null;\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_selectedProgramTypeTabIndex == TAB_EMAIL) {\r\n");
      out.write("\t\t\tobjProgramList = g_objTabEmail.find('select[name=\"programlist\"]');\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabEmail.find('#selectedprogramlist');\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_FTP) {\r\n");
      out.write("\t\t\tobjProgramList = g_objTabFtp.find('select[name=\"programlist\"]');\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabFtp.find('#selectedprogramlist');\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_P2P) {\r\n");
      out.write("\t\t\tobjProgramList = g_objTabP2p.find('select[name=\"programlist\"]');\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabP2p.find('#selectedprogramlist');\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_MESSENGER) {\r\n");
      out.write("\t\t\tobjProgramList = g_objTabMessenger.find('select[name=\"programlist\"]');\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabMessenger.find('#selectedprogramlist');\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_CAPTURE) {\r\n");
      out.write("\t\t\tobjProgramList = g_objTabCapture.find('select[name=\"programlist\"]');\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabCapture.find('#selectedprogramlist');\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_ETC) {\r\n");
      out.write("\t\t\tobjProgramList = g_objTabEtc.find('select[name=\"programlist\"]');\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabEtc.find('#selectedprogramlist');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjProgramList.children('option').filter(\":selected\").each( function() {\r\n");
      out.write("\t\t\tvar isAlreadyAdded = false;\r\n");
      out.write("\t\t\tvar selectedProgramName = $(this).text();\r\n");
      out.write("\t\t\tvar selectedFileName = $(this).val();\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objTabEmail.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\t\tif ($(this).find('td:eq(2)').text().toLowerCase() == selectedFileName.toLowerCase()) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"[\" + selectedFileName + \"] 파일은 E-MAIL 항목에 이미 추가한 프로그램입니다.\", \"\");\r\n");
      out.write("\t\t\t\t\tisAlreadyAdded = true;\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objTabFtp.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\t\tif ($(this).find('td:eq(2)').text().toLowerCase() == selectedFileName.toLowerCase()) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"[\" + selectedFileName + \"] 파일은 FTP 항목에 이미 추가한 프로그램입니다.\", \"\");\r\n");
      out.write("\t\t\t\t\tisAlreadyAdded = true;\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objTabP2p.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\t\tif ($(this).find('td:eq(2)').text().toLowerCase() == selectedFileName.toLowerCase()) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"[\" + selectedFileName + \"] 파일은 P2P 항목에 이미 추가한 프로그램입니다.\", \"\");\r\n");
      out.write("\t\t\t\t\tisAlreadyAdded = true;\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objTabMessenger.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\t\tif ($(this).find('td:eq(2)').text().toLowerCase() == selectedFileName.toLowerCase()) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"[\" + selectedFileName + \"] 파일은 메신저 항목에 이미 추가한 프로그램입니다.\", \"\");\r\n");
      out.write("\t\t\t\t\tisAlreadyAdded = true;\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objTabCapture.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\t\tif ($(this).find('td:eq(2)').text().toLowerCase() == selectedFileName.toLowerCase()) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"[\" + selectedFileName + \"] 파일은 CAPTURE 항목에 이미 추가한 프로그램입니다.\", \"\");\r\n");
      out.write("\t\t\t\t\tisAlreadyAdded = true;\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tg_objTabEtc.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\t\tif ($(this).find('td:eq(2)').text().toLowerCase() == selectedFileName.toLowerCase()) {\r\n");
      out.write("\t\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"[\" + selectedFileName + \"] 파일은 기타 항목에 이미 추가한 프로그램입니다.\", \"\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!isAlreadyAdded) {\r\n");
      out.write("\t\t\t\tvar newRow = '';\r\n");
      out.write("\t\t\t\tnewRow += '<tr>';\r\n");
      out.write("\t\t\t\tnewRow += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selectprogram\" programname=\"' + selectedProgramName + '\" filename=\"' + selectedFileName + '\" style=\"border: 0;\"></td>';\r\n");
      out.write("\t\t\t\tnewRow += '<td title=\"' + selectedProgramName + '\">' + selectedProgramName + '</td>';\r\n");
      out.write("\t\t\t\tnewRow += '<td title=\"' + selectedFileName + '\">' + selectedFileName + '</td>';\r\n");
      out.write("\t\t\t\tnewRow += '<td>';\r\n");
      out.write("\t\t\t\tnewRow += '<select id=\"controltype\" name=\"controltype\">';\r\n");
      out.write("\t\t\t\tif (!g_htControlTypeList.isEmpty()) {\r\n");
      out.write("\t\t\t\t\tg_htControlTypeList.each( function(value, name) {\r\n");
      out.write("\t\t\t\t\t\tif ((value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_ENCRYPT_FILE);
      out.write("') &&\r\n");
      out.write("\t\t\t\t\t\t\t\t(value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_READ);
      out.write("')) {\r\n");
      out.write("\t\t\t\t\t\t\tnewRow += '<option value=\"' + value + '\">' + name + '</option>';\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tnewRow += '</select>';\r\n");
      out.write("\t\t\t\tnewRow += '</td>';\r\n");
      out.write("\t\t\t\tnewRow += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tobjSelectedProgramList.find('tbody').append(newRow);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\trefreshSelectedListTable(objSelectedProgramList);\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\taddProgramToList = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objSelectedProgramList = null;\r\n");
      out.write("\t\tvar newProgramName = null;\r\n");
      out.write("\t\tvar newFileName = null;\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_selectedProgramTypeTabIndex == TAB_EMAIL) {\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabEmail.find('#selectedprogramlist');\r\n");
      out.write("\t\t\tnewProgramName = g_objTabEmail.find('#newprogramname').val().trim();\r\n");
      out.write("\t\t\tnewFileName = g_objTabEmail.find('#newfilename').val().trim();\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_FTP) {\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabFtp.find('#selectedprogramlist');\r\n");
      out.write("\t\t\tnewProgramName = g_objTabFtp.find('#newprogramname').val().trim();\r\n");
      out.write("\t\t\tnewFileName = g_objTabFtp.find('#newfilename').val().trim();\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_P2P) {\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabP2p.find('#selectedprogramlist');\r\n");
      out.write("\t\t\tnewProgramName = g_objTabP2p.find('#newprogramname').val().trim();\r\n");
      out.write("\t\t\tnewFileName = g_objTabP2p.find('#newfilename').val().trim();\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_MESSENGER) {\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabMessenger.find('#selectedprogramlist');\r\n");
      out.write("\t\t\tnewProgramName = g_objTabMessenger.find('#newprogramname').val().trim();\r\n");
      out.write("\t\t\tnewFileName = g_objTabMessenger.find('#newfilename').val().trim();\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_CAPTURE) {\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabCapture.find('#selectedprogramlist');\r\n");
      out.write("\t\t\tnewProgramName = g_objTabCapture.find('#newprogramname').val().trim();\r\n");
      out.write("\t\t\tnewFileName = g_objTabCapture.find('#newfilename').val().trim();\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_ETC) {\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabEtc.find('#selectedprogramlist');\r\n");
      out.write("\t\t\tnewProgramName = g_objTabEtc.find('#newprogramname').val().trim();\r\n");
      out.write("\t\t\tnewFileName = g_objTabEtc.find('#newfilename').val().trim();\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (newProgramName.length == 0) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"추가할 프로그램 명을 입력해 주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (newFileName.length == 0) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"추가할 프로그램 파일명을 입력해 주세요.\", \"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tvar isAlreadyAdded = false;\r\n");
      out.write("\t\tg_objTabEmail.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tif ($(this).find('td:eq(2)').text().toLowerCase() == newFileName.toLowerCase()) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"E-MAIL 항목에 이미 추가한 프로그램입니다.\", \"\");\r\n");
      out.write("\t\t\t\tisAlreadyAdded = true;\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tif (isAlreadyAdded) return false;\r\n");
      out.write("\r\n");
      out.write("\t\tg_objTabFtp.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tif ($(this).find('td:eq(2)').text().toLowerCase() == newFileName.toLowerCase()) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"FTP 항목에 이미 추가한 프로그램입니다.\", \"\");\r\n");
      out.write("\t\t\t\tisAlreadyAdded = true;\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tif (isAlreadyAdded) return false;\r\n");
      out.write("\r\n");
      out.write("\t\tg_objTabP2p.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tif ($(this).find('td:eq(2)').text().toLowerCase() == newFileName.toLowerCase()) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"P2P 항목에 이미 추가한 프로그램입니다.\", \"\");\r\n");
      out.write("\t\t\t\tisAlreadyAdded = true;\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tif (isAlreadyAdded) return false;\r\n");
      out.write("\r\n");
      out.write("\t\tg_objTabMessenger.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tif ($(this).find('td:eq(2)').text().toLowerCase() == newFileName.toLowerCase()) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"메신저 항목에 이미 추가한 프로그램입니다.\", \"\");\r\n");
      out.write("\t\t\t\tisAlreadyAdded = true;\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tif (isAlreadyAdded) return false;\r\n");
      out.write("\r\n");
      out.write("\t\tg_objTabCapture.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tif ($(this).find('td:eq(2)').text().toLowerCase() == newFileName.toLowerCase()) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"CAPTURE 항목에 이미 추가한 프로그램입니다.\", \"\");\r\n");
      out.write("\t\t\t\tisAlreadyAdded = true;\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tif (isAlreadyAdded) return false;\r\n");
      out.write("\r\n");
      out.write("\t\tg_objTabEtc.find('#selectedprogramlist').find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tif ($(this).find('td:eq(2)').text().toLowerCase() == newFileName.toLowerCase()) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"네트워크 서비스 제어 대상 프로그램 설정\", \"기타 항목에 이미 추가한 프로그램입니다.\", \"\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tif (isAlreadyAdded) return false;\r\n");
      out.write("\r\n");
      out.write("\t\tvar newRow = '';\r\n");
      out.write("\t\tnewRow += '<tr>';\r\n");
      out.write("\t\tnewRow += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selectprogram\" programname=\"' + newProgramName + '\" filename=\"' + newFileName + '\" style=\"border: 0;\"></td>';\r\n");
      out.write("\t\tnewRow += '<td title=\"' + newProgramName + '\">' + newProgramName + '</td>';\r\n");
      out.write("\t\tnewRow += '<td title=\"' + newFileName + '\">' + newFileName + '</td>';\r\n");
      out.write("\t\tnewRow += '<td>';\r\n");
      out.write("\t\tnewRow += '<select id=\"controltype\" name=\"controltype\">';\r\n");
      out.write("\t\tif (!g_htControlTypeList.isEmpty()) {\r\n");
      out.write("\t\t\tg_htControlTypeList.each( function(value, name) {\r\n");
      out.write("\t\t\t\tif ((value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_ENCRYPT_FILE);
      out.write("') &&\r\n");
      out.write("\t\t\t\t\t\t(value != '");
      out.print(ControlType.CONTROL_TYPE_PERMIT_READ);
      out.write("')) {\r\n");
      out.write("\t\t\t\t\tnewRow += '<option value=\"' + value + '\">' + name + '</option>';\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tnewRow += '</select>';\r\n");
      out.write("\t\tnewRow += '</td>';\r\n");
      out.write("\t\tnewRow += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\tobjSelectedProgramList.find('tbody').append(newRow);\r\n");
      out.write("\r\n");
      out.write("\t\trefreshSelectedListTable(objSelectedProgramList);\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tdeleteProgramFromList = function() {\r\n");
      out.write("\r\n");
      out.write("\t\tvar objSelectedProgramList = null;\r\n");
      out.write("\r\n");
      out.write("\t\tif (g_selectedProgramTypeTabIndex == TAB_EMAIL) {\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabEmail.find('#selectedprogramlist');\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_FTP) {\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabFtp.find('#selectedprogramlist');\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_P2P) {\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabP2p.find('#selectedprogramlist');\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_MESSENGER) {\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabMessenger.find('#selectedprogramlist');\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_CAPTURE) {\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabCapture.find('#selectedprogramlist');\r\n");
      out.write("\t\t} else if (g_selectedProgramTypeTabIndex == TAB_ETC) {\r\n");
      out.write("\t\t\tobjSelectedProgramList = g_objTabEtc.find('#selectedprogramlist');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tobjSelectedProgramList.find('.list-table tbody tr').find('input:checkbox[name=\"selectprogram\"]').filter(':checked').each( function () {\r\n");
      out.write("\t\t\t$(this).closest('tr').remove();\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\trefreshSelectedListTable(objSelectedProgramList);\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\taddBlockUrlToList = function() {\r\n");
      out.write("\t\tvar objBlockSpecificUrlsList = g_objTabNetworkServiceControlConfig.find('#blockspecificurlslist');\r\n");
      out.write("\t\tvar objNewBlockUrl = g_objTabNetworkServiceControlConfig.find('#newblockurl');\r\n");
      out.write("\r\n");
      out.write("\t\tif (objNewBlockUrl.val().length == 0) {\r\n");
      out.write("\t\t\tdisplayAlertDialog(\"차단 URL 설정\", \"차단할 URL을 입력해 주세요.\", \"\");\r\n");
      out.write("\t\t\tobjNewBlockUrl.focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (!isValidParam(objNewBlockUrl, PARAM_TYPE_DOMAIN, \"차단 URL\", PARAM_DOMAIN_MIN_LEN, PARAM_DOMAIN_MAX_LEN, null)) {\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tvar isAlready = false;\r\n");
      out.write("\t\tobjBlockSpecificUrlsList.find('.list-table > tbody > tr').each( function () {\r\n");
      out.write("\t\t\tif ($(this).find('td:eq(1)').text() == objNewBlockUrl.val()) {\r\n");
      out.write("\t\t\t\tdisplayAlertDialog(\"차단 URL 설정\", \"이미 추가한 URL입니다.\", \"\");\r\n");
      out.write("\t\t\t\tobjNewBlockUrl.focus();\r\n");
      out.write("\t\t\t\tisAlready = true;\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tif (!isAlready) {\r\n");
      out.write("\t\t\tvar newRow = '';\r\n");
      out.write("\t\t\tnewRow += '<tr>';\r\n");
      out.write("\t\t\tnewRow += '<td style=\"text-align: center;\"><input type=\"checkbox\" name=\"selecturl\" blockurl=\"' + objNewBlockUrl.val() + '\" style=\"border: 0;\"></td>';\r\n");
      out.write("\t\t\tnewRow += '<td title=\"' + objNewBlockUrl.val() + '\">' + objNewBlockUrl.val() + '</td>';\r\n");
      out.write("\t\t\tnewRow += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\tobjBlockSpecificUrlsList.find('tbody').append(newRow);\r\n");
      out.write("\t\t\trefreshSelectedListTable(objBlockSpecificUrlsList);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tdeleteBlockUrlFromList = function() {\r\n");
      out.write("\t\tvar objBlockSpecificUrlsList = g_objTabNetworkServiceControlConfig.find('#blockspecificurlslist');\r\n");
      out.write("\t\tobjBlockSpecificUrlsList.find('.list-table tbody tr').find('input:checkbox[name=\"selecturl\"]').filter(':checked').each( function () {\r\n");
      out.write("\t\t\t$(this).closest('tr').remove();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\trefreshSelectedListTable(objBlockSpecificUrlsList);\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\trefreshSelectedListTable = function(objTable) {\r\n");
      out.write("\t\tvar recordCount = 1;\r\n");
      out.write("\t\tvar lineStyle = '';\r\n");
      out.write("\r\n");
      out.write("\t\tobjTable.find('.list-table tbody tr').each( function() {\r\n");
      out.write("\t\t\tif (recordCount%2 == 0)\r\n");
      out.write("\t\t\t\tlineStyle = \"list_even\";\r\n");
      out.write("\t\t\telse\r\n");
      out.write("\t\t\t\tlineStyle = \"list_odd\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(this).removeClass(\"list_even\");\r\n");
      out.write("\t\t\t$(this).removeClass(\"list_odd\");\r\n");
      out.write("\t\t\t$(this).addClass(lineStyle);\r\n");
      out.write("\r\n");
      out.write("\t\t\trecordCount++;\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("//-->\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div class=\"inner-west\">\r\n");
      out.write("\t<div class=\"pane-header\">조직 구성도</div>\r\n");
      out.write("\t<div class=\"ui-layout-content zero-padding\">\r\n");
      out.write("\t\t<div id=\"organization-tree\" class=\"treeview-pannel\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"tab-clientconfig\" class=\"inner-center styles-tab\">\r\n");
      out.write("\t<div class=\"pane-header\">설정 정보</div>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li><a href=\"#tab-defaultconfig\">기본 설정</a></li>\r\n");
      out.write("\t\t<li><a href=\"#tab-patternconfig\">패턴 설정</a></li>\r\n");
      out.write("\t\t<li><a href=\"#tab-printcontrolconfig\">출력 제어</a></li>\r\n");
      out.write("\t\t<li><a href=\"#tab-watermarkconfig\">워터마크 설정</a></li>\r\n");
      out.write("\t\t<li><a href=\"#tab-mediacontrolconfig\">매체 제어</a></li>\r\n");
      out.write("\t\t<li><a href=\"#tab-networkservicecontrolconfig\">네트워크 서비스 제어</a></li>\r\n");
      out.write("\t\t<li><a href=\"#tab-systemcontrolconfig\">시스템 제어</a></li>\r\n");
      out.write("\t\t<li><a href=\"#tab-workcontrolconfig\">업무 설정</a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t<div class=\"ui-layout-content\">\r\n");
      out.write("\t\t<div id=\"tab-defaultconfig\" style=\"padding: 10px;\">\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\">검출된 파일 처리 유형 설정 (강제검사에서 검출파일 처리 유형을 개별정책으로 설정시에도 적용)</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">검출파일 처리 유형</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<select id=\"jobprocessingtype\" name=\"jobprocessingtype\" class=\"ui-widget-content\"></select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">삭제 방지 및 강제종료 차단 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>사용자의 프로그램 삭제 방지 및  강제 종료를 차단하도록 설정하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"forcedtermination\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"forcedtermination\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-forcedterminationpwd\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-stop\" style=\"padding-bottom: 5px;\"></span></li></ul>인증 번호:&nbsp;\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"forcedterminationpwd\" name=\"forcedterminationpwd\" class=\"text ui-widget-content\" style=\"width: 120px;\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">암호화된 파일의 복호화 권한 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div>사용자에게 암호화된 파일에 대한 복호화를 허용하도록 설정하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"decordingpermission\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"decordingpermission\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px; display: none;\">암호화된 파일의 외부 반출 권한 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t<div>사용자에게 암호화된 파일에 대한 외부 반출을 허용하도록 설정하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"safeexport\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"safeexport\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">암호화된 파일의 내용 복사 방지 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div>사용자에게 암호화된 파일 내용에 대한 복사를 방지하도록 설정하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"contentcopyprevention\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"contentcopyprevention\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">실시간 감시기능 강제 사용 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div>사용자 프로그램의 실시간 감시 기능을 강제 사용하도록 설정하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"realtimeobservation\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"realtimeobservation\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">비밀번호 유효기간 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>사용자의 비밀번호 유효기간을 설정하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"passwordexpirationflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"passwordexpirationflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-passwordexpirationperiod\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-stop\" style=\"padding-bottom: 5px;\"></span></li></ul>유효기간:&nbsp;\r\n");
      out.write("\t\t\t\t\t최종 비밀번호 변경일로부터 <input type=\"text\" id=\"passwordexpirationperiod\" name=\"passwordexpirationperiod\" class=\"text ui-widget-content\" style='width: 30px;text-align:right;' onkeyup=\"this.value=this.value.replace(/[^\\d]/,'')\" /> 일\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px; display: none;\">개인 정보 파일 보관 만료일 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>사용자 프로그램에서 개인정보가 검출된 파일에 대해 보관 만료기간을 설정하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"expiration\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"expiration\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-expirationperiod\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">만료일</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"expirationperiod\" name=\"expirationperiod\" class=\"text ui-widget-content\" style=\"width: 40px\" /> 일 후\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-expirationjobprocessingtype\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">만료 파일 처리 유형</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<select id=\"expirationjobprocessingtype\" name=\"expirationjobprocessingtype\" class=\"ui-widget-content\"></select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">서버용 OCR 사용</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>이미지 검출을 위해 서버용 OCR을 사용하도록 설정하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"useserverocrflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"useserverocrflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-ocrserveripaddress\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-stop\" style=\"padding-bottom: 5px;\"></span></li></ul>OCR 서버 주소:&nbsp;\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"ocrserveripaddress\" name=\"ocrserveripaddress\" class=\"text ui-widget-content\" style=\"width: 120px;\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-ocrserverport\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-stop\" style=\"padding-bottom: 5px;\"></span></li></ul>OCR 서버 포트:&nbsp;\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"ocrserverport\" name=\"ocrserverport\" class=\"text ui-widget-content\" style=\"width: 120px;\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">검사 대상 제외 경로 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">폴더 경로</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-contents\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"newexclusionsearchfolderpath\" name=\"newexclusionsearchfolderpath\" class=\"text ui-widget-content\" style=\"width: calc(100% - 111px);\" />\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" id=\"btnAddExclusionSearchFolder\" name=\"btnAddExclusionSearchFolder\" class=\"normal-button\" style=\"vertical-align: top;\">경로 추가</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div style=\"border: 1px solid #d0d0d0; height: 120px; overflow: auto;\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"exclusionsearchfolderlist\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 5px;\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" id=\"btnDeleteExclusionSearchFolder\" name=\"btnDeleteExclusionSearchFolder\" class=\"normal-button\">선택 경로 삭제</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"tab-patternconfig\" style=\"padding: 10px;\">\r\n");
      out.write("\t\t\t<div class=\"info\">\r\n");
      out.write("\t\t\t\t<ul class=\"infolist\">\r\n");
      out.write("\t\t\t\t\t<li>기본 설정에서 \"검출파일 처리 유형\"을 암호화로 설정했을 경우, 검사 결과 해당 패턴 검출 수가 처리 활성화 수를 초과하면 파일이 암호화 됩니다.</li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"patterninfo\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"tab-printcontrolconfig\" style=\"padding: 10px;\">\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\">출력 제어 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>출력 제어 기능을 사용 하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"printcontrolflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"printcontrolflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"row-printlimit\">\r\n");
      out.write("\t\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">출력 사용량 설정</div>\r\n");
      out.write("\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t<div>출력 사용량을 제한 하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"printlimitflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"printlimitflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"row-printlimittype\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-stop\" style=\"padding-bottom: 5px;\"></span></li></ul>제한 사용량:&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<select id=\"printlimittype\" name=\"printlimittype\" class=\"ui-widget-content\" style=\"height: 26px; line-height: 26px;\"></select>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"printlimitcount\" name=\"printlimitcount\" class=\"text ui-widget-content numeric\" style=\"width: 60px;\" /> 페이지\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">개인정보 마스킹 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>개인정보 마스킹 기능을 사용 하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"maskingflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"maskingflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-maskingtype\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-stop\" style=\"padding-bottom: 5px;\"></span></li></ul>마스킹 유형:&nbsp;\r\n");
      out.write("\t\t\t\t\t<select id=\"maskingtype\" name=\"maskingtype\" class=\"ui-widget-content\"></select>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t<label for=\"juminsexnotmaskingflag\"><input type=\"checkbox\" id=\"juminsexnotmaskingflag\" name=\"juminsexnotmaskingflag\"/>주민등록번호 성별 자리(뒷자리 첫번째 숫자) 마스킹 제외</label>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px; display: none;\">로그 수집 서버 설정 (출력파일 로그 수집 FTP 서버)</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">IP 주소</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"logcollectoripaddress\" name=\"logcollectoripaddress\" class=\"text ui-widget-content\" style=\"width: 130px;\" />\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">포트 번호</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"logcollectorportno\" name=\"logcollectorportno\" maxlength=\"8\" class=\"text ui-widget-content numeric\" style=\"width: 60px;\" />\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">계정 ID</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"logcollectoraccountid\" name=\"logcollectoraccountid\" class=\"text ui-widget-content\" style=\"width: 130px;\" />\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">계정 비밀번호</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"logcollectoraccountpwd\" name=\"logcollectoraccountpwd\" class=\"text ui-widget-content\" style=\"width: 130px;\" />\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"tab-watermarkconfig\" style=\"padding: 10px;\">\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\">출력 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">모드</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<select id=\"wmprintmode\" name=\"wmprintmode\" class=\"ui-widget-content\"></select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"field-line\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">3단 워터마크</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<select id=\"wm3stepwatermark\" name=\"wm3stepwatermark\" class=\"ui-widget-content\"></select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"field-line\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">워터마크 반복</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<select id=\"wmtextrepeatsize\" name=\"wmtextrepeatsize\" class=\"ui-widget-content\"></select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"field-line\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">워터마크 외곽선 출력</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<select id=\"wmoutlinemode\" name=\"wmoutlinemode\" class=\"ui-widget-content\"></select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">워터마크 시간 출력</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<select id=\"wmprinttime\" name=\"wmprinttime\" class=\"ui-widget-content\"></select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div style=\"margin-top: 20px;\">\r\n");
      out.write("\t\t\t\t<div class=\"left-frame\" style=\"width: 49%; vertical-align: top;\">\r\n");
      out.write("\t\t\t\t\t<div class=\"category-sub-title\">\r\n");
      out.write("\t\t\t\t\t\t<div style=\"float: left;\">출력 문자열 설정</div>\r\n");
      out.write("\t\t\t\t\t\t<div style=\"float: right;\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" id=\"btnReservedWordInfo\" name=\"btnReservedWordInfo\" class=\"small-button\">예약어 정보 보기</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">Main</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"wmtextmain\" name=\"wmtextmain\" class=\"text ui-widget-content\" style=\"width: 98%\" />\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">Sub</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"wmtextsub\" name=\"wmtextsub\" class=\"text ui-widget-content\" style=\"width: 98%\" />\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">Top Left</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"wmtexttopleft\" name=\"wmtexttopleft\" class=\"text ui-widget-content\" style=\"width: 98%\" />\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">Top Right</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"wmtexttopright\" name=\"wmtexttopright\" class=\"text ui-widget-content\" style=\"width: 98%\" />\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">Bottom Left</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"wmtextbottomleft\" name=\"wmtextbottomleft\" class=\"text ui-widget-content\" style=\"width: 98%\" />\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">Bottom Right</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"wmtextbottomright\" name=\"wmtextbottomright\" class=\"text ui-widget-content\" style=\"width: 98%\" />\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">글꼴 설정</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">Main</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<table class=\"info-table\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"width: 30px;\">글꼴: </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"4\" style=\"text-align: left;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select id=\"wmmainfontname\" name=\"wmmainfontname\" class=\"ui-widget-content\" style=\"width: 100%;\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"width: 30px;\">크기: </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"text-align: left;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select id=\"wmmainfontsize\" name=\"wmmainfontsize\" class=\"ui-widget-content\" style=\"width: 50px;\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"width: 5px; display: none;\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"margin-left: 10px; width: 30px; display: none;\">모양: </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"text-align: right; display: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select id=\"wmmainfontstyle\" name=\"wmmainfontstyle\" class=\"ui-widget-content\" style=\"width: 100%;\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"ui-state-highlight\" style=\"margin-top: 10px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-info\"></span></li></ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t<span style=\"height: 18px; line-height: 18px;\">Sub 및 상단, 하단 문구의 글꼴 크기는 Main 글꼴 크기에 따라 자동 조절됩니다.</span>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">Sub</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td width=\"10%\">글꼴: </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<select id=\"wmsubfontname\" name=\"wmsubfontname\" class=\"ui-widget-content\" style=\"width: 100%;\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td width=\"10%\">크기: </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<select id=\"wmsubfontsize\" name=\"wmsubfontsize\" class=\"ui-widget-content\" style=\"width: 100%;\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td width=\"5%\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td width=\"10%\" style=\"margin-left: 10px;\">모양: </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td align=\"right\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<select id=\"wmsubfontstyle\" name=\"wmsubfontstyle\" class=\"ui-widget-content\" style=\"width: 100%;\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">Text</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td width=\"10%\">글꼴: </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<select id=\"wmtextfontname\" name=\"wmtextfontname\" class=\"ui-widget-content\" style=\"width: 100%;\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td width=\"10%\">크기: </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<select id=\"wmtextfontsize\" name=\"wmtextfontsize\" class=\"ui-widget-content\" style=\"width: 100%;\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td width=\"5%\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td width=\"10%\" style=\"margin-left: 10px;\">모양: </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td align=\"right\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<select id=\"wmtextfontstyle\" name=\"wmtextfontstyle\" class=\"ui-widget-content\" style=\"width: 100%;\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">글꼴 옵션 설정</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">Main 글꼴 기울기</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"wmfontmainangle\" name=\"wmfontmainangle\" class=\"text ui-widget-content numeric\" style=\"width: 44px;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t<span>( 범위: 0~360, 시계방향 회전 )</span>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">Main 글꼴 농도</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<select id=\"wmfontdensitymain\" name=\"wmfontdensitymain\" class=\"ui-widget-content\" style=\"width: 50px;\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t<span>( 낮을수록 진함 )</span>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">Text 글꼴 농도</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<select id=\"wmfontdensitytext\" name=\"wmfontdensitytext\" class=\"ui-widget-content\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"right-frame\" style=\"margin-left: 51%; vertical-align: top;\">\r\n");
      out.write("\t\t\t\t\t<div class=\"category-sub-title\">배경 이미지 설정</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">배경 이미지 출력</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<select id=\"wmbackgroundmode\" name=\"wmbackgroundmode\" class=\"ui-widget-content\"></select>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">배경 이미지</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"wmbackgroundimagefilename\" name=\"wmbackgroundimagefilename\" class=\"text ui-widget-content\" style=\"width: calc(100% - 118px);\" disabled />\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"hidden\" id=\"wmbackgroundimage\" name=\"wmbackgroundimage\" class=\"text ui-widget-content\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnManageBackgroundImage\" name=\"btnManageBackgroundImage\" class=\"small-button\" style=\"vertical-align: top;\">배경 이미지 관리</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">배경 이미지 위치</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td width=\"15%\">X 좌표: </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><input type=\"text\" id=\"wmbackgroundpositionx\" name=\"wmbackgroundpositionx\" class=\"text ui-widget-content\" style=\"width: 80px;\" /></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td width=\"15%\" style=\"margin-left: 10px;\">y 좌표: </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><input type=\"text\" id=\"wmbackgroundpositiony\" name=\"wmbackgroundpositiony\" class=\"text ui-widget-content\" style=\"width: 80px;\" /></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-title\">배경 이미지 크기</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"field-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"width: 50px; text-align: right;\">가로(pixel): </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"text-align: left;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"wmbackgroundimagewidth\" name=\"wmbackgroundimagewidth\" class=\"text ui-widget-content numeric\" style=\"width: 50px;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" id=\"orgwmbackgroundimagewidth\" name=\"orgwmbackgroundimagewidth\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"width: 50px; text-align: right;\">세로(pixel): </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"text-align: left;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"wmbackgroundimageheight\" name=\"wmbackgroundimageheight\" class=\"text ui-widget-content numeric\" style=\"width: 50px;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" id=\"orgwmbackgroundimageheight\" name=\"orgwmbackgroundimageheight\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td style=\"width: 50px; text-align: right;\">비율(%): </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"3\" style=\"text-align: left;\"><input id=\"sizepercentspinner\" name=\"sizepercentspinner\" value=\"100\" style=\"width: 27px;\" /></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"tab-mediacontrolconfig\" style=\"padding: 10px;\">\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\">USB 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>USB 제어 기능을 사용 하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"usbcontrolflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"usbcontrolflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-usbcontroltype\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-stop\" style=\"padding-bottom: 5px;\"></span></li></ul>USB 제어 유형:&nbsp;\r\n");
      out.write("\t\t\t\t\t<select id=\"usbcontroltype\" name=\"usbcontroltype\" class=\"ui-widget-content\"></select>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">CD-ROM 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>CD-ROM 제어 기능을 사용 하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"cdromcontrolflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"cdromcontrolflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-cdromcontroltype\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-stop\" style=\"padding-bottom: 5px;\"></span></li></ul>CD-ROM 제어 유형:&nbsp;\r\n");
      out.write("\t\t\t\t\t<select id=\"cdromcontroltype\" name=\"cdromcontroltype\" class=\"ui-widget-content\"></select>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px; display: none;\">공유 폴더 설정 <span style=\"color: #2E9AFE;\">(기능 추가 예정)</span></div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>공유 폴더 제어 기능을 사용 하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"publicfoldercontrolflag\" value=\"1\" disabled>예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"publicfoldercontrolflag\" value=\"0\" checked disabled>아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-publicfoldercontroltype\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">공유 폴더 제어 유형</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<select id=\"publicfoldercontroltype\" name=\"publicfoldercontroltype\" class=\"ui-widget-content\"></select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"tab-networkservicecontrolconfig\" style=\"padding: 10px;\">\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\">E-MAIL/메신저/FTP/P2P 등의 네트워크 서비스에 대한 제어  설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>네트워크 서비스 제어 기능을 사용 하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"networkservicecontrolflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"networkservicecontrolflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-networkservicecontrolprogram\" style=\"margin-top: 10px;\">\r\n");
      out.write("\t\t\t\t\t<div id=\"tab-networkservicecontrolprogram\" class=\"styles-tab\" style=\"border:none;\">\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"#tab-email\">E-MAIL</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"#tab-ftp\">FTP</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"#tab-p2p\">P2P</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"#tab-messenger\">메신저</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"#tab-capture\">CAPTURE</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"#tab-etc\">기타</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"tab-email\" style=\"padding: 10px 0;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"float: left; width: 50%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-title\">제어 선택 프로그램</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div id=\"selectedprogramlist\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnDeleteProgram\" name=\"btnDeleteProgram\" class=\"small-button\">프로그램 삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"margin-left: 52%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-title\">제어 대상 프로그램</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div><select id=\"programlist\" name=\"programlist\" multiple=\"multiple\" size=\"15\" style=\"padding: 5px; width: 100%; line-height:30px; height:230px;\" class=\"ui-widget-content\"></select></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnSelectProgram\" name=\"btnSelectProgram\" class=\"small-button\">프로그램 선택</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div style=\"margin-top: 30px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">프로그램 명</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"newprogramname\" name=\"newprogramname\" class=\"text ui-widget-content\" style=\"width: 98%;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">프로그램 파일명</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"newfilename\" name=\"newfilename\" class=\"text ui-widget-content\" style=\"width: 98%;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"button-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnAddProgram\" name=\"btnAddProgram\" class=\"small-button\">프로그램 추가</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"tab-ftp\" style=\"padding: 10px 0;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"float: left; width: 50%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-title\">제어 선택 프로그램</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div id=\"selectedprogramlist\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnDeleteProgram\" name=\"btnDeleteProgram\" class=\"small-button\">프로그램 삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"margin-left: 52%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-title\">제어 대상 프로그램</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div><select id=\"programlist\" name=\"programlist\" multiple=\"multiple\" size=\"15\" style=\"padding: 5px; width: 100%; line-height:30px; height:230px;\" class=\"ui-widget-content\"></select></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnSelectProgram\" name=\"btnSelectProgram\" class=\"small-button\">프로그램 선택</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div style=\"margin-top: 30px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">프로그램 명</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"newprogramname\" name=\"newprogramname\" class=\"text ui-widget-content\" style=\"width: 98%;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">프로그램 파일명</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"newfilename\" name=\"newfilename\" class=\"text ui-widget-content\" style=\"width: 98%;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"button-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnAddProgram\" name=\"btnAddProgram\" class=\"small-button\">프로그램 추가</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"tab-p2p\" style=\"padding: 10px 0;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"float: left; width: 50%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-title\">제어 선택 프로그램</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div id=\"selectedprogramlist\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnDeleteProgram\" name=\"btnDeleteProgram\" class=\"small-button\">프로그램 삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"margin-left: 52%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-title\">제어 대상 프로그램</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div><select id=\"programlist\" name=\"programlist\" multiple=\"multiple\" size=\"15\" style=\"padding: 5px; width: 100%; line-height:30px; height:230px;\" class=\"ui-widget-content\"></select></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnSelectProgram\" name=\"btnSelectProgram\" class=\"small-button\">프로그램 선택</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div style=\"margin-top: 30px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">프로그램 명</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"newprogramname\" name=\"newprogramname\" class=\"text ui-widget-content\" style=\"width: 98%;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">프로그램 파일명</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"newfilename\" name=\"newfilename\" class=\"text ui-widget-content\" style=\"width: 98%;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"button-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnAddProgram\" name=\"btnAddProgram\" class=\"small-button\">프로그램 추가</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"tab-messenger\" style=\"padding: 10px 0;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"float: left; width: 50%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-title\">제어 선택 프로그램</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div id=\"selectedprogramlist\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnDeleteProgram\" name=\"btnDeleteProgram\" class=\"small-button\">프로그램 삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"margin-left: 52%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-title\">제어 대상 프로그램</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div><select id=\"programlist\" name=\"programlist\" multiple=\"multiple\" size=\"15\" style=\"padding: 5px; width: 100%; line-height:30px; height:230px;\" class=\"ui-widget-content\"></select></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnSelectProgram\" name=\"btnSelectProgram\" class=\"small-button\">프로그램 선택</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div style=\"margin-top: 30px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">프로그램 명</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"newprogramname\" name=\"newprogramname\" class=\"text ui-widget-content\" style=\"width: 98%;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">프로그램 파일명</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"newfilename\" name=\"newfilename\" class=\"text ui-widget-content\" style=\"width: 98%;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"button-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnAddProgram\" name=\"btnAddProgram\" class=\"small-button\">프로그램 추가</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"tab-capture\" style=\"padding: 10px 0;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"float: left; width: 50%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-title\">제어 선택 프로그램</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div id=\"selectedprogramlist\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnDeleteProgram\" name=\"btnDeleteProgram\" class=\"small-button\">프로그램 삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"margin-left: 52%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-title\">제어 대상 프로그램</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div><select id=\"programlist\" name=\"programlist\" multiple=\"multiple\" size=\"15\" style=\"padding: 5px; width: 100%; line-height:30px; height:230px;\" class=\"ui-widget-content\"></select></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnSelectProgram\" name=\"btnSelectProgram\" class=\"small-button\">프로그램 선택</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div style=\"margin-top: 30px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">프로그램 명</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"newprogramname\" name=\"newprogramname\" class=\"text ui-widget-content\" style=\"width: 98%;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">프로그램 파일명</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"newfilename\" name=\"newfilename\" class=\"text ui-widget-content\" style=\"width: 98%;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"button-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnAddProgram\" name=\"btnAddProgram\" class=\"small-button\">프로그램 추가</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"tab-etc\" style=\"padding: 10px 0;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"float: left; width: 50%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-title\">제어 선택 프로그램</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div id=\"selectedprogramlist\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnDeleteProgram\" name=\"btnDeleteProgram\" class=\"small-button\">프로그램 삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"margin-left: 52%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"category-title\">제어 대상 프로그램</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div><select id=\"programlist\" name=\"programlist\" multiple=\"multiple\" size=\"15\" style=\"padding: 5px; width: 100%; line-height:30px; height:230px;\" class=\"ui-widget-content\"></select></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnSelectProgram\" name=\"btnSelectProgram\" class=\"small-button\">프로그램 선택</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div style=\"margin-top: 30px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">프로그램 명</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"newprogramname\" name=\"newprogramname\" class=\"text ui-widget-content\" style=\"width: 98%;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-title\">프로그램 파일명</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"newfilename\" name=\"newfilename\" class=\"text ui-widget-content\" style=\"width: 98%;\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"button-line\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"btnAddProgram\" name=\"btnAddProgram\" class=\"small-button\">프로그램 추가</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px; display: none;\">특정 URL 차단 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\" style=\"margin-top: 20px; display: none;\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>브라우저에서 특정 URL에 대한 접속을 차단하도록 하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"blockspecificurlsflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"blockspecificurlsflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-blockspecificurls\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">차단 URL</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-contents\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"newblockurl\" name=\"newblockurl\" class=\"text ui-widget-content\" style=\"width: 300px;\"/>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" id=\"btnAddBlockUrl\" name=\"btnAddBlockUrl\" class=\"small-button\" style=\"margin-bottom:4px;\">URL 추가</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"category-title\">차단 URL 목록</div>\r\n");
      out.write("\t\t\t\t\t\t<div style=\"padding: 5px; border: 1px solid #aaa; height: 180px; overflow: auto;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"blockspecificurlslist\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"button-line\" style=\"margin-top: 4px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" id=\"btnDeleteBlockUrl\" name=\"btnDeleteBlockUrl\" class=\"small-button\">URL 삭제</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"tab-systemcontrolconfig\" style=\"padding: 10px;\">\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\">시스템 비밀번호 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>사용자 시스템의 비밀번호를 설정하도록 하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"systempasswordsetupflag\" value=\"1\" title=\"이 기능을 사용 시 시스템 비밀번호의 규칙을 설정하며,<br />설정된 초기 비밀번호가 없을 시,<br />시작화면에서 새 비밀번호를 설정합니다.\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"systempasswordsetupflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-systempasswordminlength\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-stop\" style=\"padding-bottom: 5px;\"></span></li></ul>비밀번호 최소 길이:&nbsp;\r\n");
      out.write("\t\t\t\t\t<input id=\"systempasswordminlength\" name=\"systempasswordminlength\" class=\"password-spinner\" style=\"width: 40px; font-size: 1em; text-align: right; \" /> 자리\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-systempasswordmaxlength\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-stop\" style=\"padding-bottom: 5px;\"></span></li></ul>비밀번호 최대 길이:&nbsp;\r\n");
      out.write("\t\t\t\t\t<input id=\"systempasswordmaxlength\" name=\"systempasswordmaxlength\" class=\"password-spinner\" style=\"width: 40px; font-size: 1em; text-align: right;\" /> 자리\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">시스템 비밀번호 유효기간 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>사용자 시스템 비밀번호의 유효기간을 설정하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"systempasswordexpirationflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"systempasswordexpirationflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-systempasswordexpirationperiod\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-stop\" style=\"padding-bottom: 5px;\"></span></li></ul>비밀번호 유효기간:&nbsp;\r\n");
      out.write("\t\t\t\t\t<select id=\"systempasswordexpirationperiod\" name=\"systempasswordexpirationperiod\" class=\"ui-widget-content\" style=\"width: 60px;\"></select> 일\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">시스템 화면 보호기 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>사용자 시스템의 화면 보호기를 활성화 하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"screensaveractivationflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"screensaveractivationflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-screensaverwaitingminutes\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"ui-helper-clearfix icons\"><li><span class=\"ui-icon ui-icon-stop\" style=\"padding-bottom: 5px;\"></span></li></ul>활성화 대기 시간:&nbsp;\r\n");
      out.write("\t\t\t\t\t<select id=\"screensaverwaitingminutes\" name=\"screensaverwaitingminutes\" class=\"ui-widget-content\" style=\"width: 60px;\"></select> 분\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"tab-workcontrolconfig\" style=\"padding: 10px;\">\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\">사용자 시스템 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>사용자 시스템의 시작/종료 시간을 설정해 주세요.</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-systemstarttime\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">시스템 시작 시간</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<span style=\"margin-left: 10px;\"><select id=\"systemstarthours\" name=\"systemstarthours\" style=\"min-width: 55px; width: 55px;\" class=\"ui-widget-content\"></select> 시</span>\r\n");
      out.write("\t\t\t\t\t\t<span style=\"margin-left: 10px;\"><select id=\"systemstartminutes\" name=\"systemstartminutes\" style=\"min-width: 55px; width: 55px;\" class=\"ui-widget-content\"></select> 분</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-systemendtime\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">시스템 종료 시간</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<span style=\"margin-left: 10px;\"><select id=\"systemendhours\" name=\"systemendhours\" style=\"min-width: 55px; width: 55px;\" class=\"ui-widget-content\"></select> 시</span>\r\n");
      out.write("\t\t\t\t\t\t<span style=\"margin-left: 10px;\"><select id=\"systemendminutes\" name=\"systemendminutes\" style=\"min-width: 55px; width: 55px;\" class=\"ui-widget-content\"></select> 분</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">사용자 업무 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>사용자의 업무 시작/종료 시간을 설정해 주세요.</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-workstarttime\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">업무 시작 시간</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<span style=\"margin-left: 10px;\"><select id=\"workstarthours\" name=\"workstarthours\" style=\"min-width: 55px; width: 55px;\" class=\"ui-widget-content\"></select> 시</span>\r\n");
      out.write("\t\t\t\t\t\t<span style=\"margin-left: 10px;\"><select id=\"workstartminutes\" name=\"workstartminutes\" style=\"min-width: 55px; width: 55px;\" class=\"ui-widget-content\"></select> 분</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-workendtime\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">업무 종료 시간</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<span style=\"margin-left: 10px;\"><select id=\"workendhours\" name=\"workendhours\" style=\"min-width: 55px; width: 55px;\" class=\"ui-widget-content\"></select> 시</span>\r\n");
      out.write("\t\t\t\t\t\t<span style=\"margin-left: 10px;\"><select id=\"workendminutes\" name=\"workendminutes\" style=\"min-width: 55px; width: 55px;\" class=\"ui-widget-content\"></select> 분</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">알람 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t<div>사용자 시스템 종료 알람을 설정하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"alertsystemendalarmflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"alertsystemendalarmflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"row-systemendalarmstart\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-title\">알람 시작 시간</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t종료 <select id=\"systemendalarmstart\" name=\"systemendalarmstart\" style=\"min-width: 55px; width: 55px;\" class=\"ui-widget-content\"></select> 분 전부터 알림 시작\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"row-systemendalarminterval\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-title\">알람 간격</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t매 <select id=\"systemendalarminterval\" name=\"systemendalarminterval\" style=\"min-width: 55px; width: 55px;\" class=\"ui-widget-content\"></select> 분 간격으로 알람\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"field-line\" style=\"margin-top: 20px;\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t<div>사용자 업무 종료 알람을 설정하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"alertworkendalarmflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"alertworkendalarmflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"row-workendalarmstart\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-title\">알람 시작 시간</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t종료 <select id=\"workendalarmstart\" name=\"workendalarmstart\" style=\"min-width: 55px; width: 55px;\" class=\"ui-widget-content\"></select> 분 전부터 알림 시작\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"row-workendalarminterval\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-title\">알람 간격</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t\t매 <select id=\"workendalarminterval\" name=\"workendalarminterval\" style=\"min-width: 55px; width: 55px;\" class=\"ui-widget-content\"></select> 분 간격으로 알람\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">시스템 잠금 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>사용자 시스템의 유휴시 잠금 기능을 설정 하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"lockwhenidleflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"lockwhenidleflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"row-idletimeforlock\" class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div class=\"field-title\">잠금 대기 시간</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field-value\">\r\n");
      out.write("\t\t\t\t\t\t<select id=\"idletimeforlock\" name=\"idletimeforlock\" class=\"ui-widget-content\" style=\"width: 60px;\"></select> 분\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-title\" style=\"margin-top: 20px;\">연장 업무 설정</div>\r\n");
      out.write("\t\t\t<div class=\"category-sub-contents\">\r\n");
      out.write("\t\t\t\t<div class=\"field-line\">\r\n");
      out.write("\t\t\t\t\t<div>사용자의 업무 연장 요청을 허용하시겠습니까?&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"permitextendedworkflag\" value=\"1\">예</label>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label class=\"radio\"><input type=\"radio\" name=\"permitextendedworkflag\" value=\"0\">아니오</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"pane-footer\">\r\n");
      out.write("\t\t<div class=\"button-line\">\r\n");
      out.write("\t\t\t<button type=\"button\" id=\"btnSaveConfig\" name=\"btnSaveConfig\" class=\"normal-button\">설정 저장</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("<!-- \t<div class=\"ui-layout-south\"> -->\r\n");
      out.write("\r\n");
      out.write("<!-- \t</div> -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
